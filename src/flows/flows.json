[
    {
        "id": "a9caf749.eb5048",
        "type": "tab",
        "label": "Mongo",
        "disabled": false,
        "info": ""
    },
    {
        "id": "cc93ff07.e64b2",
        "type": "tab",
        "label": "API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c062f1c4.9c61",
        "type": "tab",
        "label": "CFA",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f51feb57.6cd738",
        "type": "tab",
        "label": "BoM",
        "disabled": false,
        "info": ""
    },
    {
        "id": "671e12d5.6bd4fc",
        "type": "mongodb2",
        "z": "",
        "uri": "mongodb://nosql:27017/",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "9e4c7c6a.4728a",
        "type": "ftp",
        "z": "",
        "host": "ftp.bom.gov.au",
        "port": "",
        "secureOptions": "",
        "user": "anonymous",
        "connTimeout": "",
        "pasvTimeout": "",
        "keepalive": ""
    },
    {
        "id": "62f9fde3.4208c4",
        "type": "ftp-download-server",
        "z": "",
        "host": "ftp.bom.gov.au",
        "port": "21",
        "user": "anonymous",
        "connTimeout": "10000",
        "pasvTimeout": "10000",
        "keepalive": "10000",
        "name": ""
    },
    {
        "id": "322533c2.db98dc",
        "type": "ftp",
        "z": "",
        "host": "ftp.bom.gov.au",
        "port": "",
        "secureOptions": "",
        "user": "bom023",
        "connTimeout": "",
        "pasvTimeout": "",
        "keepalive": ""
    },
    {
        "id": "4518fe2.7ae9d",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 818,
        "y": 112,
        "wires": []
    },
    {
        "id": "386edb7c.509784",
        "type": "http response",
        "z": "a9caf749.eb5048",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 821,
        "y": 197,
        "wires": []
    },
    {
        "id": "a0163c0d.096a7",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "var fields = msg.req.files;\nmsg.fields = Object.keys(fields);\nvar myFile = fields[\"file\"][0];\n\nmsg.test = myFile;\nvar response = {};\n\nif(msg.test) {\n    response.statusCode=0;\n    response.localFilenamePath=myFile.path;\n    response.fileSize = myFile.size;\n    response.sendMessage=\"Successful\";\n} else {\n    response.statusCode=1;\n    response.sendMessage=\"Failed\";\n}\nmsg.payload = response;\n\nreturn msg;",
        "outputs": "2",
        "noerr": 0,
        "x": 455,
        "y": 193,
        "wires": [
            [
                "4518fe2.7ae9d",
                "386edb7c.509784"
            ],
            [
                "4518fe2.7ae9d"
            ]
        ]
    },
    {
        "id": "f7682791.2c6fe8",
        "type": "httpInMultipart",
        "z": "a9caf749.eb5048",
        "name": "",
        "url": "/upload",
        "method": "post",
        "fields": "[{\"name\":\"file\"}]",
        "swaggerDoc": "",
        "x": 130,
        "y": 133,
        "wires": [
            [
                "a0163c0d.096a7"
            ]
        ]
    },
    {
        "id": "545c1161.092a9",
        "type": "feedparse",
        "z": "c062f1c4.9c61",
        "name": "",
        "url": "https://data.emergency.vic.gov.au/Show?pageId=getCapWarningRSS",
        "interval": "10",
        "x": 283,
        "y": 145,
        "wires": [
            [
                "fd16ef24.fd717",
                "5cc0e22d.95651c"
            ]
        ]
    },
    {
        "id": "a4b7e46c.884888",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 727,
        "y": 79,
        "wires": [
            [
                "5e6fce38.36e86"
            ]
        ]
    },
    {
        "id": "32a70fd6.21d99",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 1172,
        "y": 367,
        "wires": []
    },
    {
        "id": "6a92eeb4.c98fd",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "Incidents & Planned Burns (CFA, MFB, DEPI)",
        "method": "GET",
        "ret": "txt",
        "url": "https://data.emergency.vic.gov.au/Show?pageId=getIncidentJSON",
        "tls": "",
        "x": 470,
        "y": 73,
        "wires": [
            [
                "a4b7e46c.884888"
            ]
        ]
    },
    {
        "id": "24c61bd7.3c0a04",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "Watcher",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "x": 153,
        "y": 69,
        "wires": [
            [
                "6a92eeb4.c98fd"
            ]
        ]
    },
    {
        "id": "5e6fce38.36e86",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Split to incidents",
        "func": "for(i=0;i<msg.payload.results.length;i++) {\n    \n    var newMsg = {};\n    newMsg.payload = {};\n    newMsg.payload.incidentNo = msg.payload.results[i].incidentNo;\n    newMsg.doc = msg.payload.results[i];\n    node.send(newMsg);\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 643,
        "y": 146,
        "wires": [
            [
                "23d74ef3.95a012"
            ]
        ]
    },
    {
        "id": "df343111.551f3",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "incidents",
        "operation": "findOneAndUpdate",
        "x": 775,
        "y": 273,
        "wires": [
            [
                "ab94cbf0.dfb088"
            ]
        ]
    },
    {
        "id": "fd16ef24.fd717",
        "type": "debug",
        "z": "c062f1c4.9c61",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 738,
        "y": 130,
        "wires": []
    },
    {
        "id": "dcd4e015.a4c32",
        "type": "http in",
        "z": "a9caf749.eb5048",
        "name": "",
        "url": "/api/models",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 149,
        "y": 261,
        "wires": [
            [
                "65f5aa20.d97954"
            ]
        ]
    },
    {
        "id": "85cf55a0.d7ff88",
        "type": "http response",
        "z": "a9caf749.eb5048",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1175,
        "y": 365,
        "wires": []
    },
    {
        "id": "89a6b072.29f9a",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1172,
        "y": 319,
        "wires": []
    },
    {
        "id": "ccd4554e.fc87a8",
        "type": "json",
        "z": "a9caf749.eb5048",
        "name": "",
        "pretty": true,
        "x": 970,
        "y": 400,
        "wires": [
            [
                "85cf55a0.d7ff88",
                "89a6b072.29f9a"
            ]
        ]
    },
    {
        "id": "1722bc97.40aaa3",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "models",
        "operation": "insertOne",
        "x": 798,
        "y": 812,
        "wires": [
            [
                "2aaf52da.0ca7ae"
            ]
        ]
    },
    {
        "id": "828005e3.3cd768",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -dead_fuel",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"8\",\"name\":\"Nolan et al.\",\"abbr\":\"dead_fuel\",\"date\":\"9 September 2015\",\"title\":\"Predicting dead fine fuel moisture at regional scales using vapour pressure deficit from MODIS and gridded weather data\",\"href\":\"http://dx.doi.org/10.1016/j.rse.2015.12.010\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\":[{\"href\":\"\",\"authors\":\"Rachael H. Nolan, Víctor Resco de Dios, Matthias M. Boer, Gabriele Caccamo, Michael L. Goulden, Ross A. Bradstock\",\"date\":\"\"}]},\"description\":{\"date\":\"\",\"abstract\":\"Spatially explicit predictions of fuel moisture content are crucial for quantifying fire danger indices and as inputs to fire behaviour models. Remotely sensed predictions of fuel moisture have typically focused on live fuels; but regional estimates of dead fuel moisture have been less common. Here we develop and test the spatial application of a recently developed dead fuel moisture model, which is based on the exponential decline of fine fuel moisture with increasing vapour pressure deficit (D). We first compare the performance of two existing approaches to pre- dict D from satellite observations. We then use remotely sensed D, as well as D estimated from gridded daily weather observations, to predict dead fuel moisture. We calibrate and test the model at a woodland site in South East Australia, and then test the model at a range of sites in South East Australia and Southern California that vary in vegetation type, mean annual precipitation (129–1404 mm year −1 ) and leaf area index (0.1–5.7). We found that D modelled from remotely sensed land surface temperature performed slightly better than a model which also included total precipitable water (MAE b 1.16 kPa and 1.62 kPa respectively). D calculated with observations from the Moderate Resolution Imaging Spectroradiometer (MODIS) on the Terra satellite was under-predicted in areas with low leaf area index. Both D from remotely sensed data and gridded weather station data were good predictors of the moisture content of dead suspended fuels at validation sites, with mean absolute errors less than 3.9% and 6.0% respectively. The occurrence of data gaps in remotely sensed time series presents an obstacle to this approach, and assimilated or extrapolated meteorological observations may offer better continuity.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"24\",\"units\":\"hour\"}},\"optimum\":{\"spatial\":{\"value\":\"9\",\"units\":\"km^2\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\":[\"test\"],\"weaknesses\":[]},\"cavaets\":\"\"},\"datasources\":[\"MODIS\",\"GW\"]}\n",
        "output": "json",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "2aaf52da.0ca7ae",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1121,
        "y": 850,
        "wires": []
    },
    {
        "id": "f13a5619.d820e8",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "models",
        "operation": "find.toArray",
        "x": 694,
        "y": 361,
        "wires": [
            [
                "ccd4554e.fc87a8",
                "89a6b072.29f9a"
            ]
        ]
    },
    {
        "id": "65f5aa20.d97954",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg.operation = \"aggregate.toArray\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 362,
        "y": 290,
        "wires": [
            [
                "f13a5619.d820e8"
            ]
        ]
    },
    {
        "id": "9a1bb438.b1bcf8",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 122,
        "y": 324,
        "wires": [
            [
                "65f5aa20.d97954"
            ]
        ]
    },
    {
        "id": "8f091de2.628ed",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "datasources",
        "operation": "insertOne",
        "x": 720,
        "y": 1320,
        "wires": [
            [
                "2aaf52da.0ca7ae"
            ]
        ]
    },
    {
        "id": "65af3eb8.bcb7d",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "KBDI",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"last_updated\":\"{{msg.timestamp}}\",\n      \"name\":\"KBDI\",\n      \"desc\":\"Keech-Byram Drought Index\",\n      \"provider_org\":\"bom.gov.au\",\n      \"frequency\":{\n         \"value\":\"24\",\n         \"units\":\"hours\"\n      },\n      \"provides\":[\n         \"Indexed values\"\n      ]\n   }",
        "output": "json",
        "x": 350,
        "y": 1260,
        "wires": [
            [
                "8f091de2.628ed"
            ]
        ]
    },
    {
        "id": "263c57fb.7421f8",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 1260,
        "wires": [
            [
                "65af3eb8.bcb7d"
            ]
        ]
    },
    {
        "id": "cf43a287.67709",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg.operation = \"find.toArray\";\nmsg.payload = {\"abbr\": msg.req.params.abbr};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 560,
        "wires": [
            [
                "23e4b18c.dd151e",
                "6337f923.883258"
            ]
        ]
    },
    {
        "id": "3fe74805.d9caa8",
        "type": "http in",
        "z": "a9caf749.eb5048",
        "name": "",
        "url": "/api/model/:abbr/datasources",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 183,
        "y": 512,
        "wires": [
            [
                "cf43a287.67709"
            ]
        ]
    },
    {
        "id": "1e66111f.b9139f",
        "type": "http response",
        "z": "a9caf749.eb5048",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1830,
        "y": 580,
        "wires": []
    },
    {
        "id": "83e9c1f8.a234f",
        "type": "json",
        "z": "a9caf749.eb5048",
        "name": "",
        "pretty": true,
        "x": 1690,
        "y": 580,
        "wires": [
            [
                "1e66111f.b9139f"
            ]
        ]
    },
    {
        "id": "23e4b18c.dd151e",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "models",
        "operation": "",
        "x": 686,
        "y": 560,
        "wires": [
            [
                "50008711.1f9588",
                "8d5a999b.b19038"
            ]
        ]
    },
    {
        "id": "a9e18e12.0784c",
        "type": "http in",
        "z": "a9caf749.eb5048",
        "name": "",
        "url": "/api/model/:abbr",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 138,
        "y": 386,
        "wires": [
            [
                "7a509ad9.f84b04"
            ]
        ]
    },
    {
        "id": "7a509ad9.f84b04",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg.operation = \"findOne\";\nmsg.payload = {\"abbr\": msg.req.params.abbr};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 420,
        "wires": [
            [
                "88f0a86e.da59c8"
            ]
        ]
    },
    {
        "id": "23c1e8db.75ae48",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "{\"name\":\"Boer\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 143,
        "y": 437,
        "wires": [
            [
                "7a509ad9.f84b04"
            ]
        ]
    },
    {
        "id": "ab94cbf0.dfb088",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload.lastErrorObject",
        "x": 1134,
        "y": 273,
        "wires": []
    },
    {
        "id": "23d74ef3.95a012",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "build operation parameters: filter, update",
        "func": "var filter = msg.payload;\nif (\"string\" == typeof filter) {\n  filter = JSON.parse(filter);\n}\n\nmsg.payload = [\n  filter,\n  {\n    \"$inc\": {\n      \"counter\": 1\n    },\n    \"$set\": msg.doc\n  },\n  {\n      \"upsert\": true\n  }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 749,
        "y": 209,
        "wires": [
            [
                "df343111.551f3"
            ]
        ]
    },
    {
        "id": "c2280353.ae6b",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/api/fires",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 125,
        "y": 356,
        "wires": [
            [
                "55e052c0.e1344c"
            ]
        ]
    },
    {
        "id": "e75be8b.f129518",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1528,
        "y": 445,
        "wires": []
    },
    {
        "id": "b977027e.42746",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "incidents",
        "operation": "find.toArray",
        "x": 645,
        "y": 433,
        "wires": [
            [
                "32a70fd6.21d99",
                "39faf71.5189508"
            ]
        ]
    },
    {
        "id": "55e052c0.e1344c",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "var ts = +new Date();\nvar tminus24 = ts - (24 * 60 * 60 * 1000);\n\nvar map={\"category1\":\"Fire\", \"eventCode\": {$ne:\"False Alarm\"},\"lastUpdatedDt\": {$gte: tminus24}};\nvar reduce = {};\nvar options = {};\n\nmsg.payload = [\n  map,\n  reduce,\n  options\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 297,
        "y": 356,
        "wires": [
            [
                "b977027e.42746"
            ]
        ]
    },
    {
        "id": "84214777.894ee8",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/api/bushfires",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 433,
        "wires": [
            [
                "629f9bf4.3a0ea4"
            ]
        ]
    },
    {
        "id": "629f9bf4.3a0ea4",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "var ts = +new Date();\n\nvar tminus24 = ts - (24 * 60 * 60 * 1000);\nvar map={\"category2\":\"Bushfire\", \"eventCode\": {$ne:\"False Alarm\"},\"lastUpdatedDt\": {$gte: tminus24}};\nvar reduce = {};\nvar options = {};\n\nmsg.payload = [\n  map,\n  reduce,\n  options\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 302,
        "y": 433,
        "wires": [
            [
                "b977027e.42746"
            ]
        ]
    },
    {
        "id": "9306951e.2e9ad8",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/api/safe",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 126,
        "y": 512,
        "wires": [
            [
                "cc659c9b.fa70c"
            ]
        ]
    },
    {
        "id": "cc659c9b.fa70c",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "var map={\"originStatus\":\"SAFE\"};\nvar reduce = {\"eventCode\": {$ne:\"False Alarm\"}};\nvar options = {};\n\nmsg.payload = [\n  map,\n  reduce,\n  options\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 298,
        "y": 512,
        "wires": [
            [
                "b977027e.42746"
            ]
        ]
    },
    {
        "id": "81f467a8.aaf4b8",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 1363,
        "y": 449,
        "wires": [
            [
                "e75be8b.f129518",
                "ed89098f.1781b8"
            ]
        ]
    },
    {
        "id": "ed89098f.1781b8",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1553,
        "y": 496,
        "wires": []
    },
    {
        "id": "4aa683f6.3e6f4c",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 317,
        "wires": [
            [
                "55e052c0.e1344c"
            ]
        ]
    },
    {
        "id": "39faf71.5189508",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "GeoJSON Encode as FeatureCollection",
        "func": "var coll = {};\ncoll.type = \"FeatureCollection\";\ncoll.features = [];\n\nfor(i=0;i<msg.payload.length;i++) {\n    wf = {}\n    wfp = msg.payload[i];\n    wf.type = \"Feature\";\n    wf.geometry = {};\n    wf.geometry.type = \"Point\";\n    wf.geometry.coordinates = [wfp.longitude,wfp.latitude];\n    wf.properties = wfp;\n    coll.features.push(wf);\n}\nmsg.payload = coll;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1087,
        "y": 462,
        "wires": [
            [
                "81f467a8.aaf4b8"
            ]
        ]
    },
    {
        "id": "7f654a93.457174",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 91,
        "y": 478,
        "wires": [
            [
                "cc659c9b.fa70c"
            ]
        ]
    },
    {
        "id": "ff16bc70.dd32a",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 89,
        "y": 399,
        "wires": [
            [
                "629f9bf4.3a0ea4"
            ]
        ]
    },
    {
        "id": "7e28688d.c5c498",
        "type": "function",
        "z": "c062f1c4.9c61",
        "name": "build operation parameters: filter, update",
        "func": "var filter = msg.payload;\nif (\"string\" == typeof filter) {\n  filter = JSON.parse(filter);\n}\n\nmsg.payload = [\n  filter,\n  {\n    \"$inc\": {\n      \"counter\": 1\n    },\n    \"$set\": msg.article\n  },\n  {\n      \"upsert\": true\n  }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 377,
        "y": 352,
        "wires": [
            [
                "247a48bd.e4e748"
            ]
        ]
    },
    {
        "id": "247a48bd.e4e748",
        "type": "mongodb2 in",
        "z": "c062f1c4.9c61",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "warnings",
        "operation": "findOneAndUpdate",
        "x": 450,
        "y": 466,
        "wires": [
            [
                "53446b3e.5ac9e4"
            ]
        ]
    },
    {
        "id": "53446b3e.5ac9e4",
        "type": "debug",
        "z": "c062f1c4.9c61",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload.lastErrorObject",
        "x": 809,
        "y": 466,
        "wires": []
    },
    {
        "id": "5cc0e22d.95651c",
        "type": "function",
        "z": "c062f1c4.9c61",
        "name": "",
        "func": "msg.message = msg.payload;\nmsg.payload = {\"topic\": msg.topic, \"message\": msg.message};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 388,
        "y": 254,
        "wires": [
            [
                "7e28688d.c5c498"
            ]
        ]
    },
    {
        "id": "6a915ef3.de6c5",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "warnings",
        "operation": "find.toArray",
        "x": 650,
        "y": 623,
        "wires": [
            [
                "4277dc5c.fc79f4"
            ]
        ]
    },
    {
        "id": "4277dc5c.fc79f4",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "GeoJSON Encode as FeatureCollection",
        "func": "var coll = {};\ncoll.type = \"FeatureCollection\";\ncoll.features = [];\n\nfor(i=0;i<msg.payload.length;i++) {\n    wf = {}\n    wfp = msg.payload[i];\n    wf.type = \"Feature\";\n    wf.geometry = {};\n    wf.geometry.type = \"Point\";\n    wf.geometry.coordinates = [wfp.longitude,wfp.latitude];\n    wf.properties = wfp;\n    coll.features.push(wf);\n}\nmsg.payload = coll;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1095,
        "y": 644,
        "wires": [
            [
                "3978ad84.e93ad2"
            ]
        ]
    },
    {
        "id": "c3abb1fd.4e3d",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1543,
        "y": 630,
        "wires": []
    },
    {
        "id": "3978ad84.e93ad2",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 1378,
        "y": 634,
        "wires": [
            [
                "c3abb1fd.4e3d",
                "bb926488.0d0e38"
            ]
        ]
    },
    {
        "id": "bb926488.0d0e38",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1568,
        "y": 681,
        "wires": []
    },
    {
        "id": "b4c75dc9.22a35",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/api/warnings",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 109,
        "y": 638,
        "wires": [
            [
                "d10d53a0.19478"
            ]
        ]
    },
    {
        "id": "d10d53a0.19478",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "var ts = +new Date();\nvar tminus24 = ts - (24 * 60 * 60 * 1000);\n\nvar map={\"topic\":\"http://emergency.vic.gov.au/\", \"date\": {$gte: tminus24}};\nvar reduce = {};\nvar options = {};\n\nmsg.payload = [\n  map,\n  reduce,\n  options\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 303,
        "y": 627,
        "wires": [
            [
                "6a915ef3.de6c5"
            ]
        ]
    },
    {
        "id": "74041943.22c288",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 91,
        "y": 599,
        "wires": [
            [
                "d10d53a0.19478"
            ]
        ]
    },
    {
        "id": "12fc1924.c82897",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "features",
        "operation": "find.toArray",
        "x": 665,
        "y": 746,
        "wires": [
            [
                "97b33de5.f52b4",
                "405cc1ed.d34fc"
            ]
        ]
    },
    {
        "id": "1e04c6bf.d17069",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/api/wellknown",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 138,
        "y": 733,
        "wires": [
            [
                "1164bb4e.b42755"
            ]
        ]
    },
    {
        "id": "1164bb4e.b42755",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Choose document",
        "func": "var ts = +new Date();\n\nvar tminus24 = ts - (24 * 60 * 60 * 1000);\nvar map={\"category2\":\"Bushfire\", \"eventCode\": {$ne:\"False Alarm\"},\"lastUpdatedDt\": {$gte: tminus24}};\nvar reduce = {};\nvar options = {};\n\nmsg.payload = [\n  map,\n  reduce,\n  options\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 356,
        "y": 741,
        "wires": [
            [
                "12fc1924.c82897"
            ]
        ]
    },
    {
        "id": "baf0d9b3.c5d1f8",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "insert",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 119,
        "y": 793,
        "wires": [
            []
        ]
    },
    {
        "id": "b2a47537.9de9a8",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1340,
        "y": 732,
        "wires": []
    },
    {
        "id": "97b33de5.f52b4",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1228,
        "y": 793,
        "wires": []
    },
    {
        "id": "396bbe86.eb9832",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "features",
        "operation": "findOneAndUpdate",
        "x": 896,
        "y": 839,
        "wires": [
            [
                "97b33de5.f52b4"
            ]
        ]
    },
    {
        "id": "9b471df8.4146f",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "build operation parameters: filter, update",
        "func": "var filter = msg.payload;\nif (\"string\" == typeof filter) {\n  filter = JSON.parse(filter);\n}\n\nmsg.payload = [\n  filter,\n  {\n    \"$inc\": {\n      \"counter\": 1\n    },\n    \"$set\": msg.doc\n  },\n  {\n      \"upsert\": true\n  }\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 479,
        "y": 840,
        "wires": [
            [
                "396bbe86.eb9832"
            ]
        ]
    },
    {
        "id": "405cc1ed.d34fc",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Terraformer GeoJSON to WKT",
        "func": "var wkt = require('Terraformer');\nmsg.payload = wkt.dump(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1051,
        "y": 721,
        "wires": [
            [
                "b2a47537.9de9a8",
                "97b33de5.f52b4"
            ]
        ]
    },
    {
        "id": "4502cfc5.54c71",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Synthesized Fuel Moisture as TimeSeries",
        "func": "// Test Data Example Defaults\n\nlet time_step =1000*60*60*1; // ie hourly in milliseconds\nvar samples_per_series = 24*7;\nlet noise_variation = Math.random()*0.5;\n // -6.73 per hour\n \nvar num_models = 3;\nvar model_names = ['Nolan', 'van Dijk', 'Boer', 'McArthur'];\n\nvar lat = 0;\nvar lng = 0;\n\nvar now = new Date();\nvar start = new Date(now.getTime() - (samples_per_series*time_step) );\nvar finish = new Date(now.getTime());\nvar timeseries = [];\n\n// Override if values supplied in request\nif(msg.req.params.models) {\n    var names = msg.req.params.models.split(',');\n    num_models = names.length;\n    model_names = names;\n}\nif(msg.req.params.lng) lng = msg.req.params.lng;\nif(msg.req.params.lat) lat = msg.req.params.lat;\nif(msg.req.params.start) start = msg.req.params.start;\nif(msg.req.params.finish) finish = msg.req.params.finish;\n\nfor(model=0;model<num_models;model++) {\n\n    var sample = {};\n    sample.name = model_names[model];\n    \n    \n    var meta = {};\n    meta.lat = lat;\n    meta.lng = lng;\n    meta.start = start;\n    meta.finish = finish;\n    meta.rainfall = \"Expressed as percentage gain in water saturation\";\n    meta.spatial_resolution = 'Average over 500 m^2';\n    meta.temporal_granularity = time_step + ' milliseconds';\n    // TODO - other metadata like applicable fuel types etc\n    \n    // Inject metadata\n    sample.meta = meta;\n    sample.series = [];\n    \n    var drying_acceleration = Math.random()*0.43;\n    \n    var raining = false;\n        \n    for(observation=0;observation<samples_per_series;observation++) {\n        var transpiration = (Math.random()*0.87235623);\n        // var time_noise = Math.random()*0.00125;\n        var time_noise = 0.0;\n        var exposure = Math.random()*0.363124;\n        var record={};\n        var fuel;\n        var loss=0;\n        var rain_chance = Math.random();\n        var rainfall = 0;\n        \n        \n        // First pass check\n        if(model===0) {\n            \n            // Lay down some randomness...\n            if(observation<1) {\n            // First Observation\n                fuel = Math.random() * 100;\n            } else {\n                fuel = sample.series[observation-1].value; // fill-forward and mutate later\n            }\n            \n            // in Model[0] we store rainfall\n            \n            if(!raining && rain_chance > 0.85) {\n                // Start raining\n                raining = true;\n                rainfall = (Math.random()*45); // % Saturation in one hour (downpour)\n            } else if(raining && rain_chance < 0.25) {\n                // Stop raining\n                raining = false;\n            } else if(raining) {\n                // Continue raining\n                rainfall = (Math.random()*15); // % Saturation in one hour (drizzle)\n            } else if (!raining) {\n                drying_acceleration += Math.random()*exposure;\n            }\n        \n        } else {\n            // Subsequent Models\n            \n            rainfall = timeseries[0].series[observation].rainfall;\n            if(rainfall===0) drying_acceleration += Math.random()*exposure;\n            // Observations are derived from their parameters \n            // Continue trend from Previous in series\n            \n            // Add noise and drift\n            if(observation<1) {\n                fuel = timeseries[0].series[observation].value;\n            } else {\n                fuel = sample.series[observation-1].value; // fill-forward and mutate later\n            }\n        }\n        \n        \n        \n        \n        \n        loss = (transpiration + drying_acceleration); // Fudge!!\n        \n        fuel += rainfall*(1 - Math.random()*0.1);\n        fuel -= loss*(1 - Math.random()*0.25);\n        \n        if(fuel > 100) {\n            fuel = 100;\n        } else if(fuel < 0) {\n            fuel = 0;\n        }\n        \n        var min = Math.max(0, fuel-loss);\n        var max = Math.min(100, fuel+rainfall);\n        \n        \n        \n        \n        // Flow *forwads* through time from most distant past observation to most recent\n        var date_time = new Date(now.getTime() - ((samples_per_series-observation)*time_step) );\n        \n        record.name= date_time;\n        record.rainfall = rainfall;\n        record.value = fuel;\n        \n        if(observation==samples_per_series-1) {\n            record.min = 0;\n            record.max = 100;\n        } else {\n            record.min = min;\n            record.max = max;\n        }\n        sample.series.push(record);\n        // console.log('Series for observation: '+observation+', of model('+model+'):'+model_names[model]+' generated.');\n    }\n    timeseries.push(sample);\n    \n    console.log(timeseries)\n    // console.log('Sample for model('+model+'):'+model_names[model]+' generated.');\n}\n\n\n\n\nmsg.payload = timeseries;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 919,
        "y": 1102,
        "wires": [
            [
                "3ee06ab4.66bf06",
                "e092431e.aa693"
            ]
        ]
    },
    {
        "id": "a9474016.659d3",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API Defaults (Testing only)",
        "url": "/api/fuel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 259,
        "y": 984,
        "wires": [
            [
                "ab67d457.754358"
            ]
        ]
    },
    {
        "id": "e092431e.aa693",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1253,
        "y": 1118,
        "wires": []
    },
    {
        "id": "3ee06ab4.66bf06",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1237,
        "y": 1023,
        "wires": []
    },
    {
        "id": "adfca794.6100b8",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "{\"num_models\":4}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 561,
        "y": 928,
        "wires": [
            [
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "d0e1ee2f.9d94b",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API at Point (Testing only)",
        "url": "/api/fuel/:lng/:lat",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 268,
        "y": 1102,
        "wires": [
            [
                "4b589d79.b214c4"
            ]
        ]
    },
    {
        "id": "ab67d457.754358",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 558,
        "y": 1004,
        "wires": [
            [
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "4b589d79.b214c4",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 567,
        "y": 1069,
        "wires": [
            [
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "922bebf2.15ec78",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API at Point and Time (Testing only)",
        "url": "/api/fuel/:lng/:lat/time/:start/:finish",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 243,
        "y": 1167,
        "wires": [
            [
                "a836c425.5f58c8"
            ]
        ]
    },
    {
        "id": "a836c425.5f58c8",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 567,
        "y": 1123,
        "wires": [
            [
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "5c774599.d93cbc",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API at Point For Models (Testing only)",
        "url": "/api/fuel/:lng/:lat/models/:models",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 245,
        "y": 1248,
        "wires": [
            [
                "7c342503.d08ddc",
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "7c342503.d08ddc",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 664,
        "y": 1229,
        "wires": []
    },
    {
        "id": "6ecbb57f.7b1eac",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "Deprecated API Response",
        "statusCode": "",
        "headers": {},
        "x": 1120,
        "y": 1360,
        "wires": []
    },
    {
        "id": "35a22080.7085",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 350,
        "y": 1600,
        "wires": [
            [
                "d85f1418.1f7798"
            ]
        ]
    },
    {
        "id": "2ceee608.058f1a",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "// TODO - logic for model selection\n\n// Dead FM\nmsg.payload = 'DeadFMThreaded.py ' + msg.req.params.lng + ' ' + msg.req.params.lat + ' ' + msg.req.params.start + ' ' + msg.req.params.end;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 669,
        "y": 1271,
        "wires": [
            []
        ]
    },
    {
        "id": "caa732f2.87f51",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 1540,
        "wires": []
    },
    {
        "id": "deed8dcc.d95c8",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "LFMC APIv1",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/fuel?lat1={{payload.lat1}}&lon1={{payload.lon1}}&lat2={{payload.lat2}}&lon2={{payload.lon2}}&start={{payload.start}}&finish={{payload.finish}}&models={{payload.models}}",
        "tls": "",
        "x": 790,
        "y": 1420,
        "wires": [
            [
                "6ecbb57f.7b1eac",
                "91e6a114.86ac7"
            ]
        ]
    },
    {
        "id": "d85f1418.1f7798",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Testing Data",
        "func": "msg.payload = {\n    \"models\": [\"dead_fuel\", \"awra\", \"ffdi\", \"gfdi\", \"kbdi\"],\n    \"start\": \"20180415\",\n    \"finish\": \"20180416\",\n    \"lon1\": 112.8500,\n    \"lat1\": -9.8600,\n    \"lon2\": 153.6900,\n    \"lat2\": -43.7000\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1540,
        "wires": [
            [
                "deed8dcc.d95c8",
                "caa732f2.87f51",
                "23099678.bf6e1a"
            ]
        ]
    },
    {
        "id": "338b8dc1.cd8242",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API Translation (Deprecated)",
        "url": "/api/fuel/models/:models/:lng1/:lat1/:lng2/:lat2/time/:start/:finish",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1420,
        "wires": [
            [
                "d998fa8e.6b4998"
            ]
        ]
    },
    {
        "id": "d998fa8e.6b4998",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "parameter parsing",
        "func": "msg.payload = {\n    \"models\": msg.req.params['models'],\n    \"start\": msg.req.params['start'],\n    \"finish\": msg.req.params['finish'],\n    \"lon1\": msg.req.params['lng1'],\n    \"lat1\": msg.req.params['lat1'],\n    \"lon2\": msg.req.params['lng2'],\n    \"lat2\": msg.req.params['lat2'],\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1420,
        "wires": [
            [
                "deed8dcc.d95c8",
                "65928fc3.5809d"
            ]
        ]
    },
    {
        "id": "abc220ad.9d17d",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "APIv1 models",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/models",
        "tls": "",
        "x": 800,
        "y": 1600,
        "wires": [
            [
                "caa732f2.87f51"
            ]
        ]
    },
    {
        "id": "766ca864.cf6508",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1600,
        "wires": [
            [
                "abc220ad.9d17d"
            ]
        ]
    },
    {
        "id": "4343f2d7.8365ac",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "APIv1 monitors/requests",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/monitors/requests",
        "tls": "",
        "x": 830,
        "y": 1660,
        "wires": [
            [
                "caa732f2.87f51"
            ]
        ]
    },
    {
        "id": "c07ef63f.d94df8",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1660,
        "wires": [
            [
                "4343f2d7.8365ac"
            ]
        ]
    },
    {
        "id": "c18f537d.412b1",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "APIv1 monitors/processes",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/monitors/processes",
        "tls": "",
        "x": 830,
        "y": 1720,
        "wires": [
            [
                "caa732f2.87f51"
            ]
        ]
    },
    {
        "id": "fa32c549.af1e88",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "c18f537d.412b1"
            ]
        ]
    },
    {
        "id": "42bc7205.0bf8ac",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 582,
        "y": 164,
        "wires": [
            [
                "548e34b5.58ea6c"
            ]
        ]
    },
    {
        "id": "dd8c14dd.ac8808",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 160,
        "y": 106,
        "wires": [
            [
                "1fdbe6c6.ff5bc9"
            ]
        ]
    },
    {
        "id": "1188b08f.0b673f",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1137,
        "y": 193,
        "wires": []
    },
    {
        "id": "1fdbe6c6.ff5bc9",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.filename = \"anon/gen/fwo\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 124,
        "wires": [
            [
                "42bc7205.0bf8ac"
            ]
        ]
    },
    {
        "id": "548e34b5.58ea6c",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "Filter DataSets for FFDI",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload.filter(function(item) {\n  return msg.filename +\"/\"+ (item.hasOwnProperty(\"name\") && (\n        (item.name).includes('IDN65068') ||\n        (item.name).includes('IDD10730') ||\n        (item.name).includes('IDQ13015') ||\n        (item.name).includes('IDS10069') ||\n        (item.name).includes('IDT13150') ||\n        (item.name).includes('IDV18550') ||\n        (item.name).includes('IDW13050')\n    ));\n});\n\nmsg.filenames = object_shortlist.map(function(item) {\n    return item.name;    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 857,
        "y": 158,
        "wires": [
            [
                "1188b08f.0b673f"
            ]
        ]
    },
    {
        "id": "2ce1bbe5.521314",
        "type": "ftp-download",
        "z": "f51feb57.6cd738",
        "server": "62f9fde3.4208c4",
        "files": "filenames",
        "directory": "",
        "name": "",
        "output": "payload",
        "filesType": "msg",
        "directoryType": "str",
        "x": 1128,
        "y": 284,
        "wires": [
            [
                "cfa72c7c.a06e4"
            ]
        ]
    },
    {
        "id": "cfa72c7c.a06e4",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 1217,
        "y": 401,
        "wires": []
    },
    {
        "id": "f6d491d8.1c757",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 151,
        "y": 198,
        "wires": [
            [
                "7badd851.9e4b38"
            ]
        ]
    },
    {
        "id": "7badd851.9e4b38",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.filename = \"register/bom023/rKCm6dbQ/adfd\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 341,
        "y": 216,
        "wires": [
            [
                "81b11c2b.2e155"
            ]
        ]
    },
    {
        "id": "52275a20.2d7e44",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 155,
        "y": 252,
        "wires": [
            [
                "ca7dca3a.8f90d8"
            ]
        ]
    },
    {
        "id": "ca7dca3a.8f90d8",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.filename = \"register/bom023/rKCm6dbQ/fwo\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 345,
        "y": 270,
        "wires": [
            [
                "66fde08e.33dc3"
            ]
        ]
    },
    {
        "id": "81b11c2b.2e155",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 588,
        "y": 224,
        "wires": [
            [
                "e18b8be0.048448"
            ]
        ]
    },
    {
        "id": "66fde08e.33dc3",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 589,
        "y": 274,
        "wires": [
            [
                "e18b8be0.048448"
            ]
        ]
    },
    {
        "id": "e18b8be0.048448",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload.filter(function(item) {\n  return (item.hasOwnProperty(\"name\") && (\n        (item.name).includes('FFDI') ||\n        (item.name).includes('GFDI') ||\n        (item.name).includes('DF')\n    ));\n});\n\nmsg.filenames = object_shortlist.map(function(item) {\n    return msg.filename +\"/\"+item.name;    \n});\n\nmsg.password=\"\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 807,
        "y": 252,
        "wires": [
            [
                "1188b08f.0b673f",
                "2ce1bbe5.521314"
            ]
        ]
    },
    {
        "id": "71b87a29.9e96e4",
        "type": "watch",
        "z": "f51feb57.6cd738",
        "name": "",
        "files": "./",
        "recursive": "",
        "x": 521,
        "y": 627,
        "wires": [
            [
                "5f94d0bf.0d152"
            ]
        ]
    },
    {
        "id": "5f94d0bf.0d152",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 694,
        "y": 628,
        "wires": []
    },
    {
        "id": "98944325.0090a",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -JASMIN",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"7\",\"name\":\"JASMIN\",\"abbr\":\"kumar\",\"date\":\"May 2017\",\"title\":\"Kumar and Dharssi\",\"onefloor\":\"The Joint UK Land Environment Simulator (JULES) based Australian Soil Moisture Information (JASMIN; Dharssi \\u0026 Vinodkumar, 2017) system use an advanced land surface model to provide best estimates of soil moisture for use in fire danger rating.\",\"href\":\"\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\":[{\"href\":\"\",\"reference\":\"Dharssi, I., and Vinodkumar, 2017: A prototype high resolution soil moisture analysis system for Australia, Bureau of Meteorology Research Report, In revision.\",\"title\":\"\",\"authors\":[\"Vinod Kumar\",\"Imtiaz Dharssi\"],\"date\":\"May 2017\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"The fuel availability estimates in McArthur Forest Fire Danger Index used in Australia for issuing operational fire warnings are partly based on soil moisture deficit, calculated as either the Keetch– Byram Drought Index (KBDI) or Mount’s Soil Dryness Index (SDI). These indices are essentially simple water balance models designed to estimate soil moisture depletion in the upper soil levels. In the present study, daily values of the above two indices are calculated over Australia at 0.05o resolution from 1974 onwards. A detailed verification of these two models against in-situ soil moisture measurements from CosmOz, OzNet and OzFlux networks are performed. The validations are done using soil moisture observations that represent both surface and deeper soil moisture. The verifications for deeper soil are restricted to OzNet and OzFlux, as only these two networks provide corresponding observations. The verification results show that both KBDI and SDI have relatively low skill in estimating shallow layer (0 – approx. 30 cm) soil moisture compared to a much deeper soil profile (0 – approx. 1m). The modest sensitivity of both KBDI and SDI to weather changes indicate that they are not an accurate measure for estimating duff layer soil moisture.\",\"fuel\":{\"types\":[\"Surface\",\"Near Surface\",\"Elevated\",\"Canopy\"]},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"0\",\"units\":\"km\"},\"temporal\":{\"value\":\"0\",\"units\":\"hr\"}},\"optimum\":{\"spatial\":{\"value\":\"5\",\"units\":\"km\"},\"temporal\":{\"value\":\"1\",\"units\":\"hr\"}},\"maximum\":{\"spatial\":{\"value\":\"5\",\"units\":\"km\"},\"temporal\":{\"value\":\"1\",\"units\":\"hr\"}}},\"keywords\":{\"strengths\":[\"Soil moisture\",\"API\",\"Comparison\",\"FFDI\"],\"weaknesses\":[]},\"cavaets\":\"\"},\"datasources\":[\"OzNet\",\"CosmOz\",\"OzFlux\",\"KBDI\",\"Observations\"]}\n",
        "output": "json",
        "x": 340,
        "y": 760,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "2d3a4a3e.c13266",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -Holgate",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"7\",\"name\":\"Holgate et al.\",\"abbr\":\"holgate\",\"date\":\"14 September 2016\",\"title\":\"Comparison of remotely sensed and modelled soil moisture data sets across Australia\",\"href\":\"http://dx.doi.org/10.1016/j.rse.2016.09.015\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\":[{\"href\":\"http://dx.doi.org/10.1016/j.rse.2016.09.015\",\"authors\":[\"C.M Holgate\",\"R.A.M. De Jeu\",\"A.I.J.M van Dijk\",\"Y.Y Liu\",\"L.J. Renzullo\",\"Vinodkumar\",\"I. Dharssi\",\"R.M. Parinussa\",\"R. Van Der Schalie\",\"A. Gevaert\",\"J. Walker\",\"D. McJannet\",\"J. Cleverly\",\"V. Haverd\",\"C.M. Trudinger\",\"P.R. Briggs\"],\"date\":\"14 September 2016\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"This study compared surface soil moisture from 11 separate remote sensing and modelled products across Australia in a common framework. The comparison was based on a correlation analysis between soil moisture products and in situ data collated from three separate ground-based networks: OzFlux, OzNet and CosmOz. The correlation analysis was performed using both original data sets and temporal anomalies, and was supported by examination of the time series plots. The interrelationships between the products were also explored using cluster analyses. The products considered in this study include: Soil Moisture Ocean Salinity (SMOS; both Land Parameter Retrieval Model (LPRM) and L-band Microwave Emission of the Biosphere (LMEB) algorithms), Advanced Microwave Scanning Radiometer 2 (AMSR2; both LPRM and Japan Aerospace Exploration Agency (JAXA) algorithms) and Advanced Scatterometer (ASCAT) satellite-based products, and WaterDyn, Australian Water Resource Assessment Landscape (AWRA-L), Antecedent Precipitation Index (API), Keetch-Byram Drought Index (KBDI), Mount’s Soil Dryness Index (MSDI) and CABLE/BIOS2 model-based products. The comparison of the satellite and model data sets showed variation in their ability to reflect in situ soil moisture conditions across Australia owing to individual product characteristics. The comparison showed the satellite products yielded similar ranges of correlation coefficients, with the possible exception of AMSR2 JAXA. SMOS (both algorithms) achieved slightly better agreement with in situ measurements than the alternative satellite products overall. Among the models, WaterDyn yielded the highest correlation most consistently across the different locations and climate zones considered. All products displayed a weaker performance in estimating soil moisture anomalies than the original data sets (i.e. the absolute values), showing all products to be more effective in detecting interannual and seasonal soil moisture dynamics rather than individual events. Using cluster analysis we found satellite products generally grouped together, whereas models were more similar to other models. SMOS (based on LMEB algorithm and ascending overpass) and ASCAT (descending overpass) were found to be very similar to each other in terms of their temporal soil moisture dynamics, whereas AMSR2 (based on LPRM algorithm and descending overpass) and AMSR2 (based on JAXA algorithm and ascending overpass) were dissimilar. Of the model products, WaterDyn and CABLE were similar to each other, as were the API/AWRA-L and KBDI/MSDI pairs. The clustering suggests systematic commonalities in error structure and duplication of information may exist between products. This evaluation has highlighted relative strengths, weaknesses, and complementarities between products, so the drawbacks of each may be minimised through a more informed assessment of fitness for purpose by end users.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"optimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\":[\"Soil moisture\",\"API\",\"Comparison\",\"Cluster analysis\",\"In situ\"],\"weaknesses\":[]},\"cavaets\":\"\"},\"datasources\":[\"Observations\",\"SMOS\",\"AMSR2\",\"ASCAT\",\"WaterDyn\",\"CABLE\",\"AWRA-L\",\"KBDI\",\"MSDI\"]}\n",
        "output": "json",
        "x": 340,
        "y": 700,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "aec731e9.0c27",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -Jurdano",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"8\",\"name\":\"Jurdano et al.\",\"abbr\":\"jurdao\",\"date\":\"5 January 2013\",\"title\":\"Regional estimation of woodland moisture content by inverting Radiative Transfer Models\",\"href\":\"https://doi-org.ezp.lib.unimelb.edu.au/10.1016/j.rse.2013.01.004\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\":[{\"href\":\"https://doi-org.ezp.lib.unimelb.edu.au/10.1016/j.rse.2013.01.004\",\"authors\":[\"Sara Jurdao\",\"Marta Yebra\",\"Juan Pablo Guerschman\",\"Emilio Chuvieco\"],\"date\":\"5 January 2013\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"We inverted the PROSPECT and GEOSAIL Radiative Transfer Models (RTM) using Moderate Resolution Imaging Spectrometer (MODIS) data to retrieve Live Fuel Moisture Content (LFMC) in woodlands located in the peninsular territory of Spain. Ecological rules were used to parameterize the RTM. This approach reduces the probability of an ill-posed problem in the inversion of the selected RTMs, by rejecting unrealistic combinations of input parameters. Three species representatives of each region were used to derive the ecological rules: Quercus ilex L., Quercus faginea L., and Pinus halepensis Mill. for the Mediterranean region, and Fagus sylvatica L., Quercus robur L. and Eucalyptus globulus Labill for the Eurosiberian region. Equivalent Water Thickness, Dry Matter and Chlorophyll content were taken from several data sources to separately parameterize both the Mediterranean (water-limited) and Eurosiberian (energy-limited) ecoregions of Spain. GEOSAIL was parameterized using a restricted range of Leaf Area Index (LAI) and specific canopy cover values, keeping other parameters fixed. The inversion was based on the Look Up Table technique using the minimum spectral angle as merit function. Several models were tested by using different inputs from standard MODIS products, as well as the fractional cover product developed by Guerschman et al. (2009). The model based on the reflectance bands and the Normalized Difference Infrared Index computed from the Nadir Bidirectional Reflectance Distribution Function-Adjusted Reflectance product (MCD43A4) provided the most accurate results, with a LFMC's Root Mean Square Error (RMSE) of 27.7% (RMSE = 27.3% for the Mediterranean and 28.7% for the Eurosiberian woodland). The estimation of LFMC was performed within the framework of a fire risk assessment system.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"optimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\":[\"MODIS\",\"Look Up Table\",\"Water-limited\",\"Energy-limited\",\"Mediterranean\",\"Live Fuel Moisture Content\",\"Fire risk\",\"Fire danger\"],\"weaknesses\":[]},\"cavaets\":\"\"},\"datasources\":[\"MODIS\",\"PROSPECT\",\"GEOSAIL\"]}\n",
        "output": "json",
        "x": 340,
        "y": 640,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "bc7a50f6.a53da",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -Boer",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"7\",\"name\":\"Boer et al.\",\"abbr\":\"boer\",\"date\":\"5 January 2015\",\"title\":\"A semi-mechanistic model for predicting the moisture content of fine litter\",\"href\":\"http://dx.doi.org/10.1016/j.agrformet.2015.01.002\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\":[{\"href\":\"http://dx.doi.org/10.1016/j.agrformet.2015.01.002\",\"authors\":\"Víctor Resco de Dios, Aaron W. Fellows, Rachael H. Nolan, Matthias M. Boer, Ross A.Bradstock, Francisco Domingo, Michael L.Goulden\",\"date\":\"5 January 2015\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"The moisture content of vegetation and litter (fuel moisture) is an important determinant of fire risk, and predictions of dead fine fuel moisture content(fuel with a diameter \\u003c 25.4 mm) are particularly important.A variety of indices, as well as empirical and mechanistic models, have been proposed to predict fuel moisture, but these approaches have seldom been validated across temporally extensive datasets, or widely contrasting vegetation types.Here, we describe a semi - mechanistic model, based on the exponential decline of fuel moisture content with atmospheric vapor pressure deficit, that predicts daily minimum fuel moisture content.We calibrated the model at one site in New South Wales, Australia, and validated it at three contrasting ecosystem types in California, USA, where 10 - h fuel moisture content was continuously measured every 30 min over a year.We found that existing drought indices did not accurately predict fuel moisture, and that empirical and equilibrium models provided biased estimates. The mean absolute error(MAE) of the fuel moisture content predicted by our model across sites and years was 3.7%, which was substantially lower than for other, commonly used models.Our model’ s MAE dropped to 2.9 % when fuel moisture was below 20 % , and to 1.8 % when fuel moisture was below 10 % . Our model’ s MAE was comparable to instrumental MAE(3.1– 2.5 % ), indicating that further improvement may be limited by measurement error.The simplicity, accuracy and precision of our model makes it suitable for a range of applications, such as operational fire management and the prediction of fire risk in vegetation models, without the need for site - specific calibrations.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"optimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\":[\"Dead fine fuel moisture content\",\"Model development\",\"Micrometeorology\",\"Vapor pressure deficit\",\"Temperate woodlands\",\"Mediterranean ecosystems\"],\"weaknesses\":[]},\"cavaets\":\"\"},\"datasources\":[\"KBDI\"]}",
        "output": "json",
        "x": 330,
        "y": 880,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "979e7c8c.f7cf",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -AWRA",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"7\",\"name\":\"AWRA\",\"abbr\":\"awra\",\"date\":\"6 December 2013\",\"title\":\"The Australian Water Resource Assessment Modelling System (AWRA)\",\"href\":\"\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\":[{\"href\":\"\",\"authors\":[\"J. Vaze\",\"N. Viney\",\"M. Stenson\",\"L. Renzullo\",\"A. Van Dijk\",\"D. Dutta\",\"R. Crosbie\",\"J. Lerat\",\"D. Penton\",\"J. Vleeshouwer\",\"L. Peeters\",\"J. Teng\",\"S. Kim\",\"J. Hughes\",\"W. Dawes\",\"Y. Zhang\",\"B. Leighton\",\"J-M. Perraud\",\"K. Joehnk\",\"A. Yang\",\"B. Wang\",\"A. Frost\",\"A. Elmahdi\",\"A. Smith\",\"C. Daamen\"],\"date\":\"6 December 2013\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"The Australian Water Resource Assessment (AWRA) modelling system has been in development since 2008 to enable the Bureau of Meteorology to meet its legislated role in providing an annual National Water Account and a regular Australian Water Resource Assessment Report. The system uses available observations and an integrated landscape-groundwater-river water balance model to estimate the stores and fluxes of the water balance required for reporting. AWRA constitutes a unique example of implementing a coupled landscape, groundwater and regulated river system model at a continental scale and rolled out at high priority regions (National Water Account (NWA) regions). The results for AWRA-L (landscape) implementation across 607 gauged catchments show that in both calibration and validation, the model typically provides streamflow predictions that are similar to those from other widely used conceptual hydrological models. The AWRA-R (river) model includes newly developed components for floodplain inundation modelling, accounting for irrigation diversions and groundwater surface water interactions. The results show that the model performs extremely well in majority of the modelling regions and it provides all the water fluxes and stores required for NWA. The software architecture developed as part of AWRA integrates the individual components in a seamless manner with transfer of fluxes between the components at a daily time step for operational implementation. The system is fully functional on the Bureau’s operating system and used for supporting the production of AWRA and NWA reports. The Bureau has used the AWRA modelling system to undertake water resource assessments across the country and already published one Water Resource Assessment (2010) and two National Water Accounts (2010, 2011). There has been a steady and continuous improvement in the AWRA model performance and the Bureau is currently undertaking the next round of Water Resource Assessments (2012) and a National Water Account (2012) using the current version of the AWRA system. It is anticipated that what-if scenario modelling and forecasting water resource availability will eventually come into scope in the next three years when the retrospective components of the system are fully implemented and operating efficiently and effectively.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"optimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\":[\"Soil moisture\",\"API\",\"Comparison\"],\"weaknesses\":[]},\"cavaets\":\"\"},\"datasources\":[\"AWRA\",\"Observations\"]}\n",
        "output": "json",
        "x": 340,
        "y": 940,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "2a898bd3.7a8924",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "MODIS",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n      \"last_updated\":\"{{msg.timestamp}}\",\n      \"name\":\"MODIS\",\n      \"desc\":\"Moderate Resolution Imaging Spectroradiometer\",\n      \"provider_org\":\"https://modis.gsfc.nasa.gov/\",\n      \"frequency\":{\n         \"value\":\"8\",\n         \"units\":\"days\"\n      },\n      \"provides\":[\n          \"Surface Reflectance Bands\"\n      ]\n  }",
        "output": "json",
        "x": 360,
        "y": 1320,
        "wires": [
            [
                "8f091de2.628ed"
            ]
        ]
    },
    {
        "id": "58fd11ec.d8d0c",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 1320,
        "wires": [
            [
                "2a898bd3.7a8924"
            ]
        ]
    },
    {
        "id": "88f0a86e.da59c8",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "models",
        "operation": "",
        "x": 670,
        "y": 440,
        "wires": [
            [
                "ccd4554e.fc87a8",
                "89a6b072.29f9a"
            ]
        ]
    },
    {
        "id": "50008711.1f9588",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "Just Datasources",
        "func": "var ds = [];\n\nfor(var i in msg.payload[0].datasources) {\n    ds.push(msg.payload[0].datasources[i]);\n}\n\nmsg.operation = \"find.toArray\";\nmsg.payload = {\"abbr\": {$in : ds}};\n// msg.payload = ds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 560,
        "wires": [
            [
                "8fcc58f0.5deed8",
                "8967880b.798f78"
            ]
        ]
    },
    {
        "id": "4ae5dbc7.c7db04",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "AWAP",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"last_updated\":\"{{msg.timestamp}}\",\n    \"name\":\"AWAP\",\n     \"desc\":\"Australian Water Availability Project AWAP - Australian Gridded Climate Data ( AGCD )\",\n     \"provider_org\":\"http://www.bom.gov.au/metadata/catalogue/view/ANZCW0503900567.shtml\",\n     \"frequency\":{\n        \"value\":\"1\",\n        \"units\":\"hours\"\n     },\n     \"provides\":[\n         \"Maximum daily temperature\",\n         \"Vapour Pressure @ 3pm\"\n     ]\n  }",
        "output": "json",
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "8f091de2.628ed"
            ]
        ]
    },
    {
        "id": "2e773a37.5eeff6",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 1380,
        "wires": [
            [
                "4ae5dbc7.c7db04"
            ]
        ]
    },
    {
        "id": "8fcc58f0.5deed8",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "datasources",
        "operation": "",
        "x": 1310,
        "y": 560,
        "wires": [
            [
                "36f959c2.e8cd16",
                "83e9c1f8.a234f"
            ]
        ]
    },
    {
        "id": "8d5a999b.b19038",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 500,
        "wires": []
    },
    {
        "id": "36f959c2.e8cd16",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1690,
        "y": 520,
        "wires": []
    },
    {
        "id": "a40d57e2.169c78",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 630,
        "y": 620,
        "wires": [
            [
                "ac57d7df.e632f8"
            ]
        ]
    },
    {
        "id": "ac57d7df.e632f8",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg={}\nmsg.payload = [{\"datasources\": [\"AWAP\",\"KBDI\"]}];\n// msg.payload = [{datasources: [{0:\"AWAP\"},{1:\"KBDI\"}]}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 620,
        "wires": [
            [
                "50008711.1f9588"
            ]
        ]
    },
    {
        "id": "6337f923.883258",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 650,
        "y": 500,
        "wires": []
    },
    {
        "id": "8967880b.798f78",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1150,
        "y": 640,
        "wires": []
    },
    {
        "id": "4d0f3f0d.32c1a",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -KBDI",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n   \"type\":\"model\",\n   \"rating\":\"7\",\n   \"name\":\"KBDI\",\n   \"abbr\":\"kbdi\",\n   \"date\":\"6 December 2013\",\n   \"title\":\"Keetch-Byram Drought Index\",\n   \"href\":\"\",\n   \"version\":\"1.0\",\n   \"validated\":{\n      \"validated\":true,\n      \"references\":[\n         {\n            \"href\":\"\",\n            \"authors\":[\n               \"kbdi\"\n            ],\n            \"date\":\"6 December 2013\"\n         }\n      ]\n   },\n   \"description\":{\n      \"author\":\"\",\n      \"date\":\"\",\n      \"abstract\":\"...\",\n      \"range\":{\n\n      },\n      \"fuel\":{\n\n      },\n      \"metric\":\"\",\n      \"index\":\"\",\n      \"resolutions\":{\n         \"minimum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         },\n         \"optimum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         },\n         \"maximum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         }\n      },\n      \"keywords\":{\n         \"strengths\":[\n            \"Comparison\"\n         ],\n         \"weaknesses\":[\n            \"Derivation from subjective observations.\"\n         ]\n      },\n      \"cavaets\":\"\"\n   },\n   \"datasources\":[\n      \"Observations\"\n   ]\n}",
        "output": "json",
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "cdede019.e95bc",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -FFDI",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n   \"type\":\"model\",\n   \"rating\":\"7\",\n   \"name\":\"FFDI\",\n   \"abbr\":\"ffdi\",\n   \"date\":\"6 December 2013\",\n   \"title\":\"Forest Fire Danger Index\",\n   \"href\":\"\",\n   \"version\":\"1.0\",\n   \"validated\":{\n      \"validated\":true,\n      \"references\":[\n         {\n            \"href\":\"\",\n            \"authors\":[\n                \"FFDI\"\n            ],\n            \"date\":\"6 December 2013\"\n         }\n      ]\n   },\n   \"description\":{\n      \"author\":\"\",\n      \"date\":\"\",\n      \"abstract\":\"...\",\n      \"range\":{\n\n      },\n      \"fuel\":{\n\n      },\n      \"metric\":\"\",\n      \"index\":\"\",\n      \"resolutions\":{\n         \"minimum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         },\n         \"optimum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         },\n         \"maximum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         }\n      },\n      \"keywords\":{\n         \"strengths\":[\n            \"Comparison\"\n         ],\n         \"weaknesses\":[\n            \"Derivation from subjective obervations.\"\n         ]\n      },\n      \"cavaets\":\"\"\n   },\n   \"datasources\":[\n      \"Observations\"\n   ]\n}",
        "output": "json",
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "538612c3.583bdc",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -GFDI",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n   \"type\":\"model\",\n   \"rating\":\"7\",\n   \"name\":\"GFDI\",\n   \"abbr\":\"gfdi\",\n   \"date\":\"6 December 2013\",\n   \"title\":\"Grass Fire Danger Index\",\n   \"href\":\"\",\n   \"version\":\"1.0\",\n   \"validated\":{\n      \"validated\":true,\n      \"references\":[\n         {\n            \"href\":\"\",\n            \"authors\":[\n               \"GFDI\"\n            ],\n            \"date\":\"6 December 2013\"\n         }\n      ]\n   },\n   \"description\":{\n      \"author\":\"\",\n      \"date\":\"\",\n      \"abstract\":\"...\",\n      \"range\":{\n\n      },\n      \"fuel\":{\n\n      },\n      \"metric\":\"\",\n      \"index\":\"\",\n      \"resolutions\":{\n         \"minimum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         },\n         \"optimum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         },\n         \"maximum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         }\n      },\n      \"keywords\":{\n         \"strengths\":[\n            \"Comparison\"\n         ],\n         \"weaknesses\":[\n            \"Derivation from subjective observations.\"\n         ]\n      },\n      \"cavaets\":\"\"\n   },\n   \"datasources\":[\n      \"Observations\"\n   ]\n}",
        "output": "json",
        "x": 330,
        "y": 1120,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "cb81a92b.307258",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 640,
        "wires": [
            [
                "aec731e9.0c27"
            ]
        ]
    },
    {
        "id": "175cb15a.6bc82f",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 700,
        "wires": [
            [
                "2d3a4a3e.c13266"
            ]
        ]
    },
    {
        "id": "c362a6f6.830d98",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 760,
        "wires": [
            [
                "98944325.0090a"
            ]
        ]
    },
    {
        "id": "b03e7602.956868",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 820,
        "wires": [
            [
                "828005e3.3cd768"
            ]
        ]
    },
    {
        "id": "59fd3396.188ebc",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 880,
        "wires": [
            [
                "bc7a50f6.a53da"
            ]
        ]
    },
    {
        "id": "1967166d.260f4a",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 940,
        "wires": [
            [
                "979e7c8c.f7cf"
            ]
        ]
    },
    {
        "id": "9da38dc3.f8f47",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "4d0f3f0d.32c1a"
            ]
        ]
    },
    {
        "id": "3ec6d195.e905be",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1060,
        "wires": [
            [
                "cdede019.e95bc"
            ]
        ]
    },
    {
        "id": "7ea42c3e.c7c234",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "538612c3.583bdc"
            ]
        ]
    },
    {
        "id": "ade41c44.8ab47",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model live_fuel",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n   \"type\":\"model\",\n   \"rating\":\"8\",\n   \"name\":\"Live Fuels - Nolan et al.\",\n   \"abbr\":\"live_fuel\",\n   \"date\":\"9 September 2015\",\n   \"title\":\"Predicting dead fine fuel moisture at regional scales using vapour pressure deficit from MODIS and gridded weather data\",\n   \"href\":\"http://dx.doi.org/10.1016/j.rse.2015.12.010\",\n   \"version\":\"1.0\",\n   \"validated\":{\n      \"validated\":true,\n      \"references\":[\n         {\n            \"href\":\"\",\n            \"authors\":\"Rachael H. Nolan, Víctor Resco de Dios, Matthias M. Boer, Gabriele Caccamo, Michael L. Goulden, Ross A. Bradstock\",\n            \"date\":\"\"\n         }\n      ]\n   },\n   \"description\":{\n      \"date\":\"\",\n      \"abstract\":\"Spatially explicit predictions of fuel moisture content are crucial for quantifying fire danger indices and as inputs to fire behaviour models. Remotely sensed predictions of fuel moisture have typically focused on live fuels; but regional estimates of dead fuel moisture have been less common. Here we develop and test the spatial application of a recently developed dead fuel moisture model, which is based on the exponential decline of fine fuel moisture with increasing vapour pressure deficit (D). We first compare the performance of two existing approaches to pre- dict D from satellite observations. We then use remotely sensed D, as well as D estimated from gridded daily weather observations, to predict dead fuel moisture. We calibrate and test the model at a woodland site in South East Australia, and then test the model at a range of sites in South East Australia and Southern California that vary in vegetation type, mean annual precipitation (129–1404 mm year −1 ) and leaf area index (0.1–5.7). We found that D modelled from remotely sensed land surface temperature performed slightly better than a model which also included total precipitable water (MAE b 1.16 kPa and 1.62 kPa respectively). D calculated with observations from the Moderate Resolution Imaging Spectroradiometer (MODIS) on the Terra satellite was under-predicted in areas with low leaf area index. Both D from remotely sensed data and gridded weather station data were good predictors of the moisture content of dead suspended fuels at validation sites, with mean absolute errors less than 3.9% and 6.0% respectively. The occurrence of data gaps in remotely sensed time series presents an obstacle to this approach, and assimilated or extrapolated meteorological observations may offer better continuity.\",\n      \"range\":{\n\n      },\n      \"fuel\":{\n\n      },\n      \"metric\":\"\",\n      \"index\":\"\",\n      \"resolutions\":{\n         \"minimum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"24\",\n               \"units\":\"hour\"\n            }\n         },\n         \"optimum\":{\n            \"spatial\":{\n               \"value\":\"9\",\n               \"units\":\"km^2\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         },\n         \"maximum\":{\n            \"spatial\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            },\n            \"temporal\":{\n               \"value\":\"\",\n               \"units\":\"\"\n            }\n         }\n      },\n      \"keywords\":{\n         \"strengths\":[\n            \"Remotely sensed.\",\n            \"Accuracy of model.\"\n         ],\n         \"weaknesses\":[\n            \"MODIS being decommissioned soon.\"\n         ]\n      },\n      \"cavaets\":\"\"\n   },\n   \"datasources\":[\n      \"MODIS\",\n      \"AWAP\"\n   ]\n}",
        "output": "json",
        "x": 340,
        "y": 1180,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "f450922a.78b8e",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1180,
        "wires": [
            [
                "ade41c44.8ab47"
            ]
        ]
    },
    {
        "id": "b33322b5.994cd",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1170,
        "y": 1480,
        "wires": []
    },
    {
        "id": "23099678.bf6e1a",
        "type": "template",
        "z": "cc93ff07.e64b2",
        "name": "URL simulation",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "http://api:8002/v1/fuel?lat1={{payload.lat1}}&lon1={{payload.lon1}}&lat2={{payload.lat2}}&lon2={{payload.lon2}}&start={{payload.start}}&finish={{payload.finish}}&models={{payload.models}}",
        "output": "str",
        "x": 800,
        "y": 1480,
        "wires": [
            [
                "b33322b5.994cd"
            ]
        ]
    },
    {
        "id": "c7095301.fbf03",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "DAILY",
        "topic": "daily_cron_process",
        "payload": "",
        "payloadType": "date",
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "x": 100,
        "y": 1620,
        "wires": [
            [
                "26c71637.27e59a"
            ]
        ]
    },
    {
        "id": "6a556f68.41143",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Daily CRON Data",
        "func": "function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('');\n}\n\nvar tnow = +new Date();\nvar tminus24 = tnow - (24 * 60 * 60 * 1000);\n\nmsg.payload = {\n    \"models\": msg.payload[\"data\"].models,\n    \"start\": formatDate(tminus24),\n    \"finish\": formatDate(tnow),\n    \"lon1\": 112.8500,\n    \"lat1\": -9.8600,\n    \"lon2\": 153.6900,\n    \"lat2\": -43.7000\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 550,
        "y": 1480,
        "wires": [
            [
                "deed8dcc.d95c8",
                "23099678.bf6e1a"
            ]
        ]
    },
    {
        "id": "86e94ac3.36b358",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 1480,
        "wires": [
            [
                "26c71637.27e59a"
            ]
        ]
    },
    {
        "id": "65928fc3.5809d",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload.models",
        "x": 820,
        "y": 1360,
        "wires": []
    },
    {
        "id": "91e6a114.86ac7",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 1050,
        "y": 1420,
        "wires": [
            [
                "b33322b5.994cd"
            ]
        ]
    },
    {
        "id": "26c71637.27e59a",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "APIv1 models",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/models",
        "tls": "",
        "x": 260,
        "y": 1480,
        "wires": [
            [
                "73740313.37db6c"
            ]
        ]
    },
    {
        "id": "73740313.37db6c",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 410,
        "y": 1480,
        "wires": [
            [
                "6a556f68.41143"
            ]
        ]
    }
]