[
    {
        "id": "a9caf749.eb5048",
        "type": "tab",
        "label": "Models Wrapper",
        "disabled": false,
        "info": "To be replaced by the HUG API Server and its associated metadata from the included Models in the Model Register."
    },
    {
        "id": "cc93ff07.e64b2",
        "type": "tab",
        "label": "API Wrapper to the NoSQL Server",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c062f1c4.9c61",
        "type": "tab",
        "label": "CFA Feed",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f51feb57.6cd738",
        "type": "tab",
        "label": "BoM Scraper",
        "disabled": false,
        "info": ""
    },
    {
        "id": "18ce424.75127be",
        "type": "tab",
        "label": "File Upload Examples",
        "disabled": false,
        "info": ""
    },
    {
        "id": "59601007.fe581",
        "type": "tab",
        "label": "Error Reporting API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ee6c3ad0.573538",
        "type": "tab",
        "label": "AWRA-L",
        "disabled": false,
        "info": ""
    },
    {
        "id": "23c27659.cdbbca",
        "type": "tab",
        "label": "Headsup Scraper",
        "disabled": true,
        "info": ""
    },
    {
        "id": "df36f755.465bf8",
        "type": "tab",
        "label": "Flow 1"
    },
    {
        "id": "52e16c81.960bb4",
        "type": "tab",
        "label": "Flow 2"
    },
    {
        "id": "d00e8f9b.7ce64",
        "type": "tab",
        "label": "Flow 3"
    },
    {
        "id": "671e12d5.6bd4fc",
        "type": "mongodb2",
        "z": "",
        "uri": "mongodb://nosql:27017/",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "9e4c7c6a.4728a",
        "type": "ftp",
        "z": "",
        "host": "ftp.bom.gov.au",
        "port": "",
        "secureOptions": "",
        "user": "anonymous",
        "connTimeout": "",
        "pasvTimeout": "",
        "keepalive": ""
    },
    {
        "id": "5eb4cf6e.eb139",
        "type": "ftp-download-server",
        "z": "",
        "host": "ftp.bom.gov.au",
        "port": "21",
        "user": "anonymous",
        "connTimeout": "10000",
        "pasvTimeout": "10000",
        "keepalive": "10000",
        "name": ""
    },
    {
        "id": "ec0c7e55.88cd8",
        "type": "ftp",
        "z": "",
        "host": "ftp.drivehq.com",
        "port": "",
        "secureOptions": "",
        "user": "anonymous",
        "connTimeout": "",
        "pasvTimeout": "",
        "keepalive": ""
    },
    {
        "id": "560b96ae.ac1db8",
        "type": "ftp-download-server",
        "z": 0,
        "host": "ftp.drivehq.com",
        "port": "21",
        "user": "anonymous",
        "connTimeout": "10000",
        "pasvTimeout": "10000",
        "keepalive": "10000",
        "name": ""
    },
    {
        "id": "4518fe2.7ae9d",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 870,
        "y": 280,
        "wires": []
    },
    {
        "id": "386edb7c.509784",
        "type": "http response",
        "z": "a9caf749.eb5048",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 40,
        "wires": []
    },
    {
        "id": "a0163c0d.096a7",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "var fields = msg.req.files;\nmsg.fields = Object.keys(fields);\nvar myFile = fields[\"file\"][0];\n\nmsg.test = myFile;\nvar response = {};\n\nif(msg.test) {\n    response.statusCode=0;\n    response.localFilenamePath=myFile.path;\n    response.fileSize = myFile.size;\n    response.sendMessage=\"Successful\";\n} else {\n    response.statusCode=1;\n    response.sendMessage=\"Failed\";\n}\nmsg.payload = response;\n\nreturn msg;",
        "outputs": "2",
        "noerr": 0,
        "x": 455,
        "y": 193,
        "wires": [
            [
                "4518fe2.7ae9d",
                "2e3110e4.50b8"
            ],
            [
                "4518fe2.7ae9d"
            ]
        ]
    },
    {
        "id": "f7682791.2c6fe8",
        "type": "httpInMultipart",
        "z": "a9caf749.eb5048",
        "name": "",
        "url": "/upload",
        "method": "post",
        "fields": "[{\"name\":\"file\"}]",
        "swaggerDoc": "",
        "x": 130,
        "y": 133,
        "wires": [
            [
                "a0163c0d.096a7"
            ]
        ]
    },
    {
        "id": "545c1161.092a9",
        "type": "feedparse",
        "z": "c062f1c4.9c61",
        "name": "",
        "url": "https://data.emergency.vic.gov.au/Show?pageId=getCapWarningRSS",
        "interval": "10",
        "x": 283,
        "y": 145,
        "wires": [
            [
                "fd16ef24.fd717",
                "5cc0e22d.95651c"
            ]
        ]
    },
    {
        "id": "a4b7e46c.884888",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 727,
        "y": 79,
        "wires": [
            [
                "5e6fce38.36e86"
            ]
        ]
    },
    {
        "id": "32a70fd6.21d99",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 1172,
        "y": 367,
        "wires": []
    },
    {
        "id": "6a92eeb4.c98fd",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "Incidents & Planned Burns (CFA, MFB, DEPI)",
        "method": "GET",
        "ret": "txt",
        "url": "https://data.emergency.vic.gov.au/Show?pageId=getIncidentJSON",
        "tls": "",
        "x": 470,
        "y": 73,
        "wires": [
            [
                "a4b7e46c.884888"
            ]
        ]
    },
    {
        "id": "24c61bd7.3c0a04",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "Watcher",
        "payload": "",
        "payloadType": "date",
        "repeat": "60",
        "crontab": "",
        "once": true,
        "x": 153,
        "y": 69,
        "wires": [
            [
                "6a92eeb4.c98fd"
            ]
        ]
    },
    {
        "id": "5e6fce38.36e86",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Split to incidents",
        "func": "for(i=0;i<msg.payload.results.length;i++) {\n\nvar newMsg = {};\nnewMsg.payload = {};\nnewMsg.payload.incidentNo = msg.payload.results[i].incidentNo;\nnewMsg.doc = msg.payload.results[i];\nnode.send(newMsg);\n}\nreturn;",
        "outputs": 1,
        "noerr": 0,
        "x": 643,
        "y": 146,
        "wires": [
            [
                "23d74ef3.95a012"
            ]
        ]
    },
    {
        "id": "df343111.551f3",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "incidents",
        "operation": "findOneAndUpdate",
        "x": 775,
        "y": 273,
        "wires": [
            [
                "ab94cbf0.dfb088"
            ]
        ]
    },
    {
        "id": "fd16ef24.fd717",
        "type": "debug",
        "z": "c062f1c4.9c61",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 738,
        "y": 130,
        "wires": []
    },
    {
        "id": "dcd4e015.a4c32",
        "type": "http in",
        "z": "a9caf749.eb5048",
        "name": "",
        "url": "/models",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 139,
        "y": 261,
        "wires": [
            [
                "65f5aa20.d97954"
            ]
        ]
    },
    {
        "id": "85cf55a0.d7ff88",
        "type": "http response",
        "z": "a9caf749.eb5048",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1175,
        "y": 365,
        "wires": []
    },
    {
        "id": "89a6b072.29f9a",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1172,
        "y": 319,
        "wires": []
    },
    {
        "id": "ccd4554e.fc87a8",
        "type": "json",
        "z": "a9caf749.eb5048",
        "name": "",
        "pretty": true,
        "x": 970,
        "y": 400,
        "wires": [
            [
                "85cf55a0.d7ff88",
                "89a6b072.29f9a"
            ]
        ]
    },
    {
        "id": "1722bc97.40aaa3",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "models",
        "operation": "insertOne",
        "x": 798,
        "y": 812,
        "wires": [
            [
                "2aaf52da.0ca7ae"
            ]
        ]
    },
    {
        "id": "828005e3.3cd768",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -dead_fuel",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"8\",\"name\":\"Nolan et al.\",\"abbr\":\"dead_fuel\",\"date\":\"9 September 2015\",\"title\":\"Predicting dead fine fuel moisture at regional scales using vapour pressure deficit from MODIS and gridded weather data\",\"href\":\"http://dx.doi.org/10.1016/j.rse.2015.12.010\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\": [{\"href\":\"\",\"authors\":\"Rachael H. Nolan, VÃ­ctor Resco de Dios, Matthias M. Boer, Gabriele Caccamo, Michael L. Goulden, Ross A. Bradstock\",\"date\":\"\"}]},\"description\":{\"date\":\"\",\"abstract\":\"Spatially explicit predictions of fuel moisture content are crucial for quantifying fire danger indices and as inputs to fire behaviour models. Remotely sensed predictions of fuel moisture have typically focused on live fuels; but regional estimates of dead fuel moisture have been less common. Here we develop and test the spatial application of a recently developed dead fuel moisture model, which is based on the exponential decline of fine fuel moisture with increasing vapour pressure deficit (D). We first compare the performance of two existing approaches to pre- dict D from satellite observations. We then use remotely sensed D, as well as D estimated from gridded daily weather observations, to predict dead fuel moisture. We calibrate and test the model at a woodland site in South East Australia, and then test the model at a range of sites in South East Australia and Southern California that vary in vegetation type, mean annual precipitation (129â1404 mm year â1 ) and leaf area index (0.1â5.7). We found that D modelled from remotely sensed land surface temperature performed slightly better than a model which also included total precipitable water (MAE b 1.16 kPa and 1.62 kPa respectively). D calculated with observations from the Moderate Resolution Imaging Spectroradiometer (MODIS) on the Terra satellite was under-predicted in areas with low leaf area index. Both D from remotely sensed data and gridded weather station data were good predictors of the moisture content of dead suspended fuels at validation sites, with mean absolute errors less than 3.9% and 6.0% respectively. The occurrence of data gaps in remotely sensed time series presents an obstacle to this approach, and assimilated or extrapolated meteorological observations may offer better continuity.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"24\",\"units\":\"hour\"}},\"optimum\":{\"spatial\":{\"value\":\"9\",\"units\":\"km^2\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\": [\"test\"],\"weaknesses\": []},\"cavaets\":\"\"},\"datasources\": [\"MODIS\",\"GW\"]}\n",
        "output": "json",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "2aaf52da.0ca7ae",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1121,
        "y": 850,
        "wires": []
    },
    {
        "id": "f13a5619.d820e8",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "models",
        "operation": "find.toArray",
        "x": 694,
        "y": 361,
        "wires": [
            [
                "ccd4554e.fc87a8",
                "89a6b072.29f9a"
            ]
        ]
    },
    {
        "id": "65f5aa20.d97954",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg.operation = \"aggregate.toArray\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 362,
        "y": 290,
        "wires": [
            [
                "f13a5619.d820e8"
            ]
        ]
    },
    {
        "id": "9a1bb438.b1bcf8",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 122,
        "y": 324,
        "wires": [
            [
                "65f5aa20.d97954"
            ]
        ]
    },
    {
        "id": "8f091de2.628ed",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "datasources",
        "operation": "insertOne",
        "x": 720,
        "y": 1320,
        "wires": [
            [
                "2aaf52da.0ca7ae"
            ]
        ]
    },
    {
        "id": "65af3eb8.bcb7d",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "KBDI",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n\"last_updated\":\"{{msg.timestamp}}\",\n\"name\":\"KBDI\",\n\"desc\":\"Keech-Byram Drought Index\",\n\"provider_org\":\"bom.gov.au\",\n\"frequency\":{\n\"value\":\"24\",\n\"units\":\"hours\"\n},\n\"provides\": [\n\"Indexed values\"\n]\n}",
        "output": "json",
        "x": 350,
        "y": 1380,
        "wires": [
            [
                "8f091de2.628ed"
            ]
        ]
    },
    {
        "id": "263c57fb.7421f8",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 1380,
        "wires": [
            [
                "65af3eb8.bcb7d"
            ]
        ]
    },
    {
        "id": "cf43a287.67709",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg.operation = \"find.toArray\";\nmsg.payload = {\"abbr\": msg.req.params.abbr};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 450,
        "y": 560,
        "wires": [
            [
                "23e4b18c.dd151e",
                "6337f923.883258"
            ]
        ]
    },
    {
        "id": "3fe74805.d9caa8",
        "type": "http in",
        "z": "a9caf749.eb5048",
        "name": "",
        "url": "/model/:abbr/datasources",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 163,
        "y": 512,
        "wires": [
            [
                "cf43a287.67709"
            ]
        ]
    },
    {
        "id": "1e66111f.b9139f",
        "type": "http response",
        "z": "a9caf749.eb5048",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1830,
        "y": 580,
        "wires": []
    },
    {
        "id": "83e9c1f8.a234f",
        "type": "json",
        "z": "a9caf749.eb5048",
        "name": "",
        "pretty": true,
        "x": 1690,
        "y": 580,
        "wires": [
            [
                "1e66111f.b9139f"
            ]
        ]
    },
    {
        "id": "23e4b18c.dd151e",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "models",
        "operation": "",
        "x": 686,
        "y": 560,
        "wires": [
            [
                "50008711.1f9588",
                "8d5a999b.b19038"
            ]
        ]
    },
    {
        "id": "a9e18e12.0784c",
        "type": "http in",
        "z": "a9caf749.eb5048",
        "name": "",
        "url": "/model/:abbr",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 118,
        "y": 386,
        "wires": [
            [
                "7a509ad9.f84b04"
            ]
        ]
    },
    {
        "id": "7a509ad9.f84b04",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg.operation = \"findOne\";\nmsg.payload = {\"abbr\": msg.req.params.abbr};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 420,
        "wires": [
            [
                "88f0a86e.da59c8"
            ]
        ]
    },
    {
        "id": "23c1e8db.75ae48",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "{\"name\":\"Boer\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 143,
        "y": 437,
        "wires": [
            [
                "7a509ad9.f84b04"
            ]
        ]
    },
    {
        "id": "ab94cbf0.dfb088",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload.lastErrorObject",
        "x": 1134,
        "y": 273,
        "wires": []
    },
    {
        "id": "23d74ef3.95a012",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "build operation parameters: filter, update",
        "func": "var filter = msg.payload;\nif (\"string\" == typeof filter) {\nfilter = JSON.parse(filter);\n}\n\nmsg.payload = [\nfilter,\n{\n\"$inc\": {\n\"counter\": 1\n},\n\"$set\": msg.doc\n},\n{\n\"upsert\": true\n}\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 749,
        "y": 209,
        "wires": [
            [
                "df343111.551f3"
            ]
        ]
    },
    {
        "id": "c2280353.ae6b",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/fires",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 115,
        "y": 356,
        "wires": [
            [
                "55e052c0.e1344c"
            ]
        ]
    },
    {
        "id": "e75be8b.f129518",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1528,
        "y": 445,
        "wires": []
    },
    {
        "id": "b977027e.42746",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "incidents",
        "operation": "find.toArray",
        "x": 645,
        "y": 433,
        "wires": [
            [
                "32a70fd6.21d99",
                "39faf71.5189508"
            ]
        ]
    },
    {
        "id": "55e052c0.e1344c",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "var ts = +new Date();\nvar tminus24 = ts - (24 * 60 * 60 * 1000);\n\nvar map={\"category1\":\"Fire\", \"eventCode\": {$ne:\"False Alarm\"},\"lastUpdatedDt\": {$gte: tminus24}};\nvar reduce = {};\nvar options = {};\n\nmsg.payload = [\nmap,\nreduce,\noptions\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 297,
        "y": 356,
        "wires": [
            [
                "b977027e.42746"
            ]
        ]
    },
    {
        "id": "84214777.894ee8",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/bushfires",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 433,
        "wires": [
            [
                "629f9bf4.3a0ea4"
            ]
        ]
    },
    {
        "id": "629f9bf4.3a0ea4",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "var ts = +new Date();\n\nvar tminus24 = ts - (24 * 60 * 60 * 1000);\nvar map={\"category2\":\"Bushfire\", \"eventCode\": {$ne:\"False Alarm\"},\"lastUpdatedDt\": {$gte: tminus24}};\nvar reduce = {};\nvar options = {};\n\nmsg.payload = [\nmap,\nreduce,\noptions\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 302,
        "y": 433,
        "wires": [
            [
                "b977027e.42746"
            ]
        ]
    },
    {
        "id": "9306951e.2e9ad8",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/safe",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 116,
        "y": 512,
        "wires": [
            [
                "cc659c9b.fa70c"
            ]
        ]
    },
    {
        "id": "cc659c9b.fa70c",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "var map={\"originStatus\":\"SAFE\"};\nvar reduce = {\"eventCode\": {$ne:\"False Alarm\"}};\nvar options = {};\n\nmsg.payload = [\nmap,\nreduce,\noptions\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 298,
        "y": 512,
        "wires": [
            [
                "b977027e.42746"
            ]
        ]
    },
    {
        "id": "81f467a8.aaf4b8",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 1363,
        "y": 449,
        "wires": [
            [
                "e75be8b.f129518",
                "ed89098f.1781b8"
            ]
        ]
    },
    {
        "id": "ed89098f.1781b8",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1553,
        "y": 496,
        "wires": []
    },
    {
        "id": "4aa683f6.3e6f4c",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 317,
        "wires": [
            [
                "55e052c0.e1344c"
            ]
        ]
    },
    {
        "id": "39faf71.5189508",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "GeoJSON Encode as FeatureCollection",
        "func": "var coll = {};\ncoll.type = \"FeatureCollection\";\ncoll.features = [];\n\nfor(i=0;i<msg.payload.length;i++) {\nwf = {}\nwfp = msg.payload[i];\nwf.type = \"Feature\";\nwf.geometry = {};\nwf.geometry.type = \"Point\";\nwf.geometry.coordinates = [wfp.longitude,wfp.latitude];\nwf.properties = wfp;\ncoll.features.push(wf);\n}\nmsg.payload = coll;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1087,
        "y": 462,
        "wires": [
            [
                "81f467a8.aaf4b8"
            ]
        ]
    },
    {
        "id": "7f654a93.457174",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 91,
        "y": 478,
        "wires": [
            [
                "cc659c9b.fa70c"
            ]
        ]
    },
    {
        "id": "ff16bc70.dd32a",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 89,
        "y": 399,
        "wires": [
            [
                "629f9bf4.3a0ea4"
            ]
        ]
    },
    {
        "id": "7e28688d.c5c498",
        "type": "function",
        "z": "c062f1c4.9c61",
        "name": "build operation parameters: filter, update",
        "func": "var filter = msg.payload;\nif (\"string\" == typeof filter) {\nfilter = JSON.parse(filter);\n}\n\nmsg.payload = [\nfilter,\n{\n\"$inc\": {\n\"counter\": 1\n},\n\"$set\": msg.article\n},\n{\n\"upsert\": true\n}\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 377,
        "y": 352,
        "wires": [
            [
                "247a48bd.e4e748"
            ]
        ]
    },
    {
        "id": "247a48bd.e4e748",
        "type": "mongodb2 in",
        "z": "c062f1c4.9c61",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "warnings",
        "operation": "findOneAndUpdate",
        "x": 450,
        "y": 466,
        "wires": [
            [
                "53446b3e.5ac9e4"
            ]
        ]
    },
    {
        "id": "53446b3e.5ac9e4",
        "type": "debug",
        "z": "c062f1c4.9c61",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload.lastErrorObject",
        "x": 809,
        "y": 466,
        "wires": []
    },
    {
        "id": "5cc0e22d.95651c",
        "type": "function",
        "z": "c062f1c4.9c61",
        "name": "",
        "func": "msg.message = msg.payload;\nmsg.payload = {\"topic\": msg.topic, \"message\": msg.message};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 388,
        "y": 254,
        "wires": [
            [
                "7e28688d.c5c498"
            ]
        ]
    },
    {
        "id": "6a915ef3.de6c5",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "warnings",
        "operation": "find.toArray",
        "x": 650,
        "y": 623,
        "wires": [
            [
                "4277dc5c.fc79f4"
            ]
        ]
    },
    {
        "id": "4277dc5c.fc79f4",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "GeoJSON Encode as FeatureCollection",
        "func": "var coll = {};\ncoll.type = \"FeatureCollection\";\ncoll.features = [];\n\nfor(i=0;i<msg.payload.length;i++) {\nwf = {}\nwfp = msg.payload[i];\nwf.type = \"Feature\";\nwf.geometry = {};\nwf.geometry.type = \"Point\";\nwf.geometry.coordinates = [wfp.longitude,wfp.latitude];\nwf.properties = wfp;\ncoll.features.push(wf);\n}\nmsg.payload = coll;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1095,
        "y": 644,
        "wires": [
            [
                "3978ad84.e93ad2"
            ]
        ]
    },
    {
        "id": "c3abb1fd.4e3d",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1543,
        "y": 630,
        "wires": []
    },
    {
        "id": "3978ad84.e93ad2",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 1378,
        "y": 634,
        "wires": [
            [
                "c3abb1fd.4e3d",
                "bb926488.0d0e38"
            ]
        ]
    },
    {
        "id": "bb926488.0d0e38",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1568,
        "y": 681,
        "wires": []
    },
    {
        "id": "b4c75dc9.22a35",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/warnings",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 99,
        "y": 638,
        "wires": [
            [
                "d10d53a0.19478"
            ]
        ]
    },
    {
        "id": "d10d53a0.19478",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "var ts = +new Date();\nvar tminus24 = ts - (24 * 60 * 60 * 1000);\n\nvar map={\"topic\":\"http://emergency.vic.gov.au/\", \"date\": {$gte: tminus24}};\nvar reduce = {};\nvar options = {};\n\nmsg.payload = [\nmap,\nreduce,\noptions\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 303,
        "y": 627,
        "wires": [
            [
                "6a915ef3.de6c5"
            ]
        ]
    },
    {
        "id": "74041943.22c288",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 91,
        "y": 599,
        "wires": [
            [
                "d10d53a0.19478"
            ]
        ]
    },
    {
        "id": "12fc1924.c82897",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "features",
        "operation": "find.toArray",
        "x": 665,
        "y": 746,
        "wires": [
            [
                "97b33de5.f52b4",
                "405cc1ed.d34fc"
            ]
        ]
    },
    {
        "id": "1e04c6bf.d17069",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "",
        "url": "/wellknown",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 128,
        "y": 733,
        "wires": [
            [
                "1164bb4e.b42755"
            ]
        ]
    },
    {
        "id": "1164bb4e.b42755",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Choose document",
        "func": "var ts = +new Date();\n\nvar tminus24 = ts - (24 * 60 * 60 * 1000);\nvar map={\"category2\":\"Bushfire\", \"eventCode\": {$ne:\"False Alarm\"},\"lastUpdatedDt\": {$gte: tminus24}};\nvar reduce = {};\nvar options = {};\n\nmsg.payload = [\nmap,\nreduce,\noptions\n];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 356,
        "y": 741,
        "wires": [
            [
                "12fc1924.c82897"
            ]
        ]
    },
    {
        "id": "baf0d9b3.c5d1f8",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "insert",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 119,
        "y": 793,
        "wires": [
            []
        ]
    },
    {
        "id": "b2a47537.9de9a8",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1340,
        "y": 732,
        "wires": []
    },
    {
        "id": "97b33de5.f52b4",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1228,
        "y": 793,
        "wires": []
    },
    {
        "id": "396bbe86.eb9832",
        "type": "mongodb2 in",
        "z": "cc93ff07.e64b2",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "features",
        "operation": "findOneAndUpdate",
        "x": 896,
        "y": 839,
        "wires": [
            [
                "97b33de5.f52b4"
            ]
        ]
    },
    {
        "id": "9b471df8.4146f",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "build operation parameters: filter, update",
        "func": "var filter = msg.payload;\nif (\"string\" == typeof filter) {\nfilter = JSON.parse(filter);\n}\n\nmsg.payload = [\nfilter,\n{\n\"$inc\": {\n\"counter\": 1\n},\n\"$set\": msg.doc\n},\n{\n\"upsert\": true\n}\n];\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 479,
        "y": 840,
        "wires": [
            [
                "396bbe86.eb9832"
            ]
        ]
    },
    {
        "id": "405cc1ed.d34fc",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Terraformer GeoJSON to WKT",
        "func": "var wkt = require('Terraformer');\nmsg.payload = wkt.dump(msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1051,
        "y": 721,
        "wires": [
            [
                "b2a47537.9de9a8",
                "97b33de5.f52b4"
            ]
        ]
    },
    {
        "id": "6ecbb57f.7b1eac",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "Deprecated API Response",
        "statusCode": "",
        "headers": {},
        "x": 1120,
        "y": 1360,
        "wires": []
    },
    {
        "id": "35a22080.7085",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 350,
        "y": 1600,
        "wires": [
            [
                "d85f1418.1f7798"
            ]
        ]
    },
    {
        "id": "caa732f2.87f51",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1070,
        "y": 1540,
        "wires": []
    },
    {
        "id": "deed8dcc.d95c8",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "LFMC APIv1",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/fuel?lat1={{payload.lat1}}&lon1={{payload.lon1}}&lat2={{payload.lat2}}&lon2={{payload.lon2}}&start={{payload.start}}&finish={{payload.finish}}&models={{payload.models}}",
        "tls": "",
        "x": 790,
        "y": 1420,
        "wires": [
            [
                "6ecbb57f.7b1eac",
                "91e6a114.86ac7"
            ]
        ]
    },
    {
        "id": "d85f1418.1f7798",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Testing Data",
        "func": "msg.payload = {\n\"models\": [\"dead_fuel\", \"awra\", \"ffdi\", \"gfdi\", \"kbdi\"],\n\"start\": \"20180415\",\n\"finish\": \"20180416\",\n\"lon1\": 112.8500,\n\"lat1\": -9.8600,\n\"lon2\": 153.6900,\n\"lat2\": -43.7000\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1540,
        "wires": [
            [
                "deed8dcc.d95c8",
                "caa732f2.87f51",
                "23099678.bf6e1a"
            ]
        ]
    },
    {
        "id": "338b8dc1.cd8242",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API Translation (Deprecated)",
        "url": "/api/fuel/models/:models/:lng1/:lat1/:lng2/:lat2/time/:start/:finish",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1420,
        "wires": [
            [
                "d998fa8e.6b4998"
            ]
        ]
    },
    {
        "id": "d998fa8e.6b4998",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "parameter parsing",
        "func": "msg.payload = {\n\"models\": msg.req.params['models'],\n\"start\": msg.req.params['start'],\n\"finish\": msg.req.params['finish'],\n\"lon1\": msg.req.params['lng1'],\n\"lat1\": msg.req.params['lat1'],\n\"lon2\": msg.req.params['lng2'],\n\"lat2\": msg.req.params['lat2'],\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1420,
        "wires": [
            [
                "deed8dcc.d95c8",
                "65928fc3.5809d"
            ]
        ]
    },
    {
        "id": "abc220ad.9d17d",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "APIv1 models",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/models",
        "tls": "",
        "x": 800,
        "y": 1600,
        "wires": [
            [
                "caa732f2.87f51"
            ]
        ]
    },
    {
        "id": "766ca864.cf6508",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1600,
        "wires": [
            [
                "abc220ad.9d17d"
            ]
        ]
    },
    {
        "id": "4343f2d7.8365ac",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "APIv1 monitors/requests",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/monitors/requests",
        "tls": "",
        "x": 830,
        "y": 1660,
        "wires": [
            [
                "caa732f2.87f51"
            ]
        ]
    },
    {
        "id": "c07ef63f.d94df8",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1660,
        "wires": [
            [
                "4343f2d7.8365ac"
            ]
        ]
    },
    {
        "id": "c18f537d.412b1",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "APIv1 monitors/processes",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/monitors/processes",
        "tls": "",
        "x": 830,
        "y": 1720,
        "wires": [
            [
                "caa732f2.87f51"
            ]
        ]
    },
    {
        "id": "fa32c549.af1e88",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 590,
        "y": 1720,
        "wires": [
            [
                "c18f537d.412b1"
            ]
        ]
    },
    {
        "id": "dd8c14dd.ac8808",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "7badd851.9e4b38"
            ]
        ]
    },
    {
        "id": "1188b08f.0b673f",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1150,
        "y": 180,
        "wires": []
    },
    {
        "id": "f6d491d8.1c757",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "730AM",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "30 7 * * *",
        "once": false,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "7badd851.9e4b38",
                "f1d1df7a.e3cf8"
            ]
        ]
    },
    {
        "id": "7badd851.9e4b38",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.filename = \"register/bom023/rKCm6dbQ/adfd\"\n\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear();\nvar h = today.getHours();\nvar m = today.getMinutes();\nvar meridian = '';\n\nif(h < 12 || (h==12 && m===0)) {\n    meridian ='AM';\n}\nif(h > 12) {\n    meridian = 'PM';\n}\n\nif(dd<10) {\n    dd = '0'+dd;\n}\n\nif(mm<10) {\n    mm = '0'+mm;\n} \n\nmsg.today =  yyyy + mm + dd + meridian;\n\nmsg.directory = \"/mnt/data_dir/\" + msg.today\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "12181318.ab80cd",
                "a6dab755.a28928"
            ]
        ]
    },
    {
        "id": "ca7dca3a.8f90d8",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.filename = \"register/bom023/rKCm6dbQ/fwo\"\n\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear();\nvar h = today.getHours();\nvar m = today.getMinutes();\nvar meridian = '';\n\nif(h < 12 || (h==12 && m===0)) {\n    meridian ='AM';\n}\nif(h > 12) {\n    meridian = 'PM';\n}\n\nif(dd<10) {\n    dd = '0'+dd;\n}\n\nif(mm<10) {\n    mm = '0'+mm;\n} \n\nmsg.today =  yyyy + mm + dd + meridian;\n\nmsg.directory = \"/mnt/data_dir/\" + msg.today + \"/fwo\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "a6dab755.a28928",
                "52b38727.b3db88"
            ]
        ]
    },
    {
        "id": "81b11c2b.2e155",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 740,
        "y": 240,
        "wires": [
            [
                "e18b8be0.048448",
                "9d24ea12.277e58"
            ]
        ]
    },
    {
        "id": "66fde08e.33dc3",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 740,
        "y": 280,
        "wires": [
            [
                "62c6943e.03631c",
                "f208aea5.fd5ca"
            ]
        ]
    },
    {
        "id": "e18b8be0.048448",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "Filter for ADFD",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload.filter(function(item) {\nreturn (\n    item.hasOwnProperty(\"name\") &&\n    ((item.name).includes('IDV')  // Victoria <-- Only Data we have access to with DELWP\n    //  (item.name).includes('IDN') || // NSW/ACT\n    //  (item.name).includes('IDQ') || // Queensland\n    //  (item.name).includes('IDT') || // Tasmania\n    //  (item.name).includes('IDW') || // Western Australia\n    //  (item.name).includes('IDS') || // South Australia\n    //  (item.name).includes('IDD')    // Northern Territory\n    )\n    );\n});\n\nmsg.path = msg.filename;\n\nmsg.filename = object_shortlist.map(function(item) {\n    return msg.path +\"/\"+ item.name;    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 240,
        "wires": [
            [
                "1188b08f.0b673f",
                "9e17c995.b07e38"
            ]
        ]
    },
    {
        "id": "98944325.0090a",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -JASMIN",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"7\",\"name\":\"JASMIN\",\"abbr\":\"kumar\",\"date\":\"May 2017\",\"title\":\"Kumar and Dharssi\",\"onefloor\":\"The Joint UK Land Environment Simulator (JULES) based Australian Soil Moisture Information (JASMIN; Dharssi \\u0026 Vinodkumar, 2017) system use an advanced land surface model to provide best estimates of soil moisture for use in fire danger rating.\",\"href\":\"\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\": [{\"href\":\"\",\"reference\":\"Dharssi, I., and Vinodkumar, 2017: A prototype high resolution soil moisture analysis system for Australia, Bureau of Meteorology Research Report, In revision.\",\"title\":\"\",\"authors\": [\"Vinod Kumar\",\"Imtiaz Dharssi\"],\"date\":\"May 2017\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"The fuel availability estimates in McArthur Forest Fire Danger Index used in Australia for issuing operational fire warnings are partly based on soil moisture deficit, calculated as either the Keetchâ Byram Drought Index (KBDI) or Mountâs Soil Dryness Index (SDI). These indices are essentially simple water balance models designed to estimate soil moisture depletion in the upper soil levels. In the present study, daily values of the above two indices are calculated over Australia at 0.05o resolution from 1974 onwards. A detailed verification of these two models against in-situ soil moisture measurements from CosmOz, OzNet and OzFlux networks are performed. The validations are done using soil moisture observations that represent both surface and deeper soil moisture. The verifications for deeper soil are restricted to OzNet and OzFlux, as only these two networks provide corresponding observations. The verification results show that both KBDI and SDI have relatively low skill in estimating shallow layer (0 â approx. 30 cm) soil moisture compared to a much deeper soil profile (0 â approx. 1m). The modest sensitivity of both KBDI and SDI to weather changes indicate that they are not an accurate measure for estimating duff layer soil moisture.\",\"fuel\":{\"types\": [\"Surface\",\"Near Surface\",\"Elevated\",\"Canopy\"]},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"0\",\"units\":\"km\"},\"temporal\":{\"value\":\"0\",\"units\":\"hr\"}},\"optimum\":{\"spatial\":{\"value\":\"5\",\"units\":\"km\"},\"temporal\":{\"value\":\"1\",\"units\":\"hr\"}},\"maximum\":{\"spatial\":{\"value\":\"5\",\"units\":\"km\"},\"temporal\":{\"value\":\"1\",\"units\":\"hr\"}}},\"keywords\":{\"strengths\": [\"Soil moisture\",\"API\",\"Comparison\",\"FFDI\"],\"weaknesses\": []},\"cavaets\":\"\"},\"datasources\": [\"OzNet\",\"CosmOz\",\"OzFlux\",\"KBDI\",\"Observations\"]}\n",
        "output": "json",
        "x": 340,
        "y": 760,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "2d3a4a3e.c13266",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -Holgate",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"7\",\"name\":\"Holgate et al.\",\"abbr\":\"holgate\",\"date\":\"14 September 2016\",\"title\":\"Comparison of remotely sensed and modelled soil moisture data sets across Australia\",\"href\":\"http://dx.doi.org/10.1016/j.rse.2016.09.015\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\": [{\"href\":\"http://dx.doi.org/10.1016/j.rse.2016.09.015\",\"authors\": [\"C.M Holgate\",\"R.A.M. De Jeu\",\"A.I.J.M van Dijk\",\"Y.Y Liu\",\"L.J. Renzullo\",\"Vinodkumar\",\"I. Dharssi\",\"R.M. Parinussa\",\"R. Van Der Schalie\",\"A. Gevaert\",\"J. Walker\",\"D. McJannet\",\"J. Cleverly\",\"V. Haverd\",\"C.M. Trudinger\",\"P.R. Briggs\"],\"date\":\"14 September 2016\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"This study compared surface soil moisture from 11 separate remote sensing and modelled products across Australia in a common framework. The comparison was based on a correlation analysis between soil moisture products and in situ data collated from three separate ground-based networks: OzFlux, OzNet and CosmOz. The correlation analysis was performed using both original data sets and temporal anomalies, and was supported by examination of the time series plots. The interrelationships between the products were also explored using cluster analyses. The products considered in this study include: Soil Moisture Ocean Salinity (SMOS; both Land Parameter Retrieval Model (LPRM) and L-band Microwave Emission of the Biosphere (LMEB) algorithms), Advanced Microwave Scanning Radiometer 2 (AMSR2; both LPRM and Japan Aerospace Exploration Agency (JAXA) algorithms) and Advanced Scatterometer (ASCAT) satellite-based products, and WaterDyn, Australian Water Resource Assessment Landscape (AWRA-L), Antecedent Precipitation Index (API), Keetch-Byram Drought Index (KBDI), Mountâs Soil Dryness Index (MSDI) and CABLE/BIOS2 model-based products. The comparison of the satellite and model data sets showed variation in their ability to reflect in situ soil moisture conditions across Australia owing to individual product characteristics. The comparison showed the satellite products yielded similar ranges of correlation coefficients, with the possible exception of AMSR2 JAXA. SMOS (both algorithms) achieved slightly better agreement with in situ measurements than the alternative satellite products overall. Among the models, WaterDyn yielded the highest correlation most consistently across the different locations and climate zones considered. All products displayed a weaker performance in estimating soil moisture anomalies than the original data sets (i.e. the absolute values), showing all products to be more effective in detecting interannual and seasonal soil moisture dynamics rather than individual events. Using cluster analysis we found satellite products generally grouped together, whereas models were more similar to other models. SMOS (based on LMEB algorithm and ascending overpass) and ASCAT (descending overpass) were found to be very similar to each other in terms of their temporal soil moisture dynamics, whereas AMSR2 (based on LPRM algorithm and descending overpass) and AMSR2 (based on JAXA algorithm and ascending overpass) were dissimilar. Of the model products, WaterDyn and CABLE were similar to each other, as were the API/AWRA-L and KBDI/MSDI pairs. The clustering suggests systematic commonalities in error structure and duplication of information may exist between products. This evaluation has highlighted relative strengths, weaknesses, and complementarities between products, so the drawbacks of each may be minimised through a more informed assessment of fitness for purpose by end users.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"optimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\": [\"Soil moisture\",\"API\",\"Comparison\",\"Cluster analysis\",\"In situ\"],\"weaknesses\": []},\"cavaets\":\"\"},\"datasources\": [\"Observations\",\"SMOS\",\"AMSR2\",\"ASCAT\",\"WaterDyn\",\"CABLE\",\"AWRA-L\",\"KBDI\",\"MSDI\"]}\n",
        "output": "json",
        "x": 340,
        "y": 700,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "aec731e9.0c27",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -Jurdano",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"8\",\"name\":\"Jurdano et al.\",\"abbr\":\"jurdao\",\"date\":\"5 January 2013\",\"title\":\"Regional estimation of woodland moisture content by inverting Radiative Transfer Models\",\"href\":\"https://doi-org.ezp.lib.unimelb.edu.au/10.1016/j.rse.2013.01.004\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\": [{\"href\":\"https://doi-org.ezp.lib.unimelb.edu.au/10.1016/j.rse.2013.01.004\",\"authors\": [\"Sara Jurdao\",\"Marta Yebra\",\"Juan Pablo Guerschman\",\"Emilio Chuvieco\"],\"date\":\"5 January 2013\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"We inverted the PROSPECT and GEOSAIL Radiative Transfer Models (RTM) using Moderate Resolution Imaging Spectrometer (MODIS) data to retrieve Live Fuel Moisture Content (LFMC) in woodlands located in the peninsular territory of Spain. Ecological rules were used to parameterize the RTM. This approach reduces the probability of an ill-posed problem in the inversion of the selected RTMs, by rejecting unrealistic combinations of input parameters. Three species representatives of each region were used to derive the ecological rules: Quercus ilex L., Quercus faginea L., and Pinus halepensis Mill. for the Mediterranean region, and Fagus sylvatica L., Quercus robur L. and Eucalyptus globulus Labill for the Eurosiberian region. Equivalent Water Thickness, Dry Matter and Chlorophyll content were taken from several data sources to separately parameterize both the Mediterranean (water-limited) and Eurosiberian (energy-limited) ecoregions of Spain. GEOSAIL was parameterized using a restricted range of Leaf Area Index (LAI) and specific canopy cover values, keeping other parameters fixed. The inversion was based on the Look Up Table technique using the minimum spectral angle as merit function. Several models were tested by using different inputs from standard MODIS products, as well as the fractional cover product developed by Guerschman et al. (2009). The model based on the reflectance bands and the Normalized Difference Infrared Index computed from the Nadir Bidirectional Reflectance Distribution Function-Adjusted Reflectance product (MCD43A4) provided the most accurate results, with a LFMC's Root Mean Square Error (RMSE) of 27.7% (RMSE = 27.3% for the Mediterranean and 28.7% for the Eurosiberian woodland). The estimation of LFMC was performed within the framework of a fire risk assessment system.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"optimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\": [\"MODIS\",\"Look Up Table\",\"Water-limited\",\"Energy-limited\",\"Mediterranean\",\"Live Fuel Moisture Content\",\"Fire risk\",\"Fire danger\"],\"weaknesses\": []}, \"cavaets\":\"\"},\"datasources\": [\"MODIS\",\"PROSPECT\",\"GEOSAIL\"]}\n",
        "output": "json",
        "x": 340,
        "y": 640,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "bc7a50f6.a53da",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -Boer",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"7\",\"name\":\"Boer et al.\",\"abbr\":\"boer\",\"date\":\"5 January 2015\",\"title\":\"A semi-mechanistic model for predicting the moisture content of fine litter\",\"href\":\"http://dx.doi.org/10.1016/j.agrformet.2015.01.002\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\": [{\"href\":\"http://dx.doi.org/10.1016/j.agrformet.2015.01.002\",\"authors\":\"VÃ­ctor Resco de Dios, Aaron W. Fellows, Rachael H. Nolan, Matthias M. Boer, Ross A.Bradstock, Francisco Domingo, Michael L.Goulden\",\"date\":\"5 January 2015\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"The moisture content of vegetation and litter (fuel moisture) is an important determinant of fire risk, and predictions of dead fine fuel moisture content(fuel with a diameter \\u003c 25.4 mm) are particularly important.A variety of indices, as well as empirical and mechanistic models, have been proposed to predict fuel moisture, but these approaches have seldom been validated across temporally extensive datasets, or widely contrasting vegetation types.Here, we describe a semi - mechanistic model, based on the exponential decline of fuel moisture content with atmospheric vapor pressure deficit, that predicts daily minimum fuel moisture content.We calibrated the model at one site in New South Wales, Australia, and validated it at three contrasting ecosystem types in California, USA, where 10 - h fuel moisture content was continuously measured every 30 min over a year.We found that existing drought indices did not accurately predict fuel moisture, and that empirical and equilibrium models provided biased estimates. The mean absolute error(MAE) of the fuel moisture content predicted by our model across sites and years was 3.7%, which was substantially lower than for other, commonly used models.Our modelâ s MAE dropped to 2.9 % when fuel moisture was below 20 % , and to 1.8 % when fuel moisture was below 10 % . Our modelâ s MAE was comparable to instrumental MAE(3.1â 2.5 % ), indicating that further improvement may be limited by measurement error.The simplicity, accuracy and precision of our model makes it suitable for a range of applications, such as operational fire management and the prediction of fire risk in vegetation models, without the need for site - specific calibrations.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"optimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\": [\"Dead fine fuel moisture content\",\"Model development\",\"Micrometeorology\",\"Vapor pressure deficit\",\"Temperate woodlands\",\"Mediterranean ecosystems\"],\"weaknesses\": []},\"cavaets\":\"\"},\"datasources\": [\"KBDI\"]}",
        "output": "json",
        "x": 330,
        "y": 880,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "979e7c8c.f7cf",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -AWRA",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\"rating\":\"7\",\"name\":\"AWRA\",\"abbr\":\"awra\",\"date\":\"6 December 2013\",\"title\":\"The Australian Water Resource Assessment Modelling System (AWRA)\",\"href\":\"\",\"version\":\"1.0\",\"validated\":{\"validated\":true,\"references\": [{\"href\":\"\",\"authors\": [\"J. Vaze\",\"N. Viney\",\"M. Stenson\",\"L. Renzullo\",\"A. Van Dijk\",\"D. Dutta\",\"R. Crosbie\",\"J. Lerat\",\"D. Penton\",\"J. Vleeshouwer\",\"L. Peeters\",\"J. Teng\",\"S. Kim\",\"J. Hughes\",\"W. Dawes\",\"Y. Zhang\",\"B. Leighton\",\"J-M. Perraud\",\"K. Joehnk\",\"A. Yang\",\"B. Wang\",\"A. Frost\",\"A. Elmahdi\",\"A. Smith\",\"C. Daamen\"],\"date\":\"6 December 2013\"}]},\"description\":{\"author\":\"\",\"date\":\"\",\"abstract\":\"The Australian Water Resource Assessment (AWRA) modelling system has been in development since 2008 to enable the Bureau of Meteorology to meet its legislated role in providing an annual National Water Account and a regular Australian Water Resource Assessment Report. The system uses available observations and an integrated landscape-groundwater-river water balance model to estimate the stores and fluxes of the water balance required for reporting. AWRA constitutes a unique example of implementing a coupled landscape, groundwater and regulated river system model at a continental scale and rolled out at high priority regions (National Water Account (NWA) regions). The results for AWRA-L (landscape) implementation across 607 gauged catchments show that in both calibration and validation, the model typically provides streamflow predictions that are similar to those from other widely used conceptual hydrological models. The AWRA-R (river) model includes newly developed components for floodplain inundation modelling, accounting for irrigation diversions and groundwater surface water interactions. The results show that the model performs extremely well in majority of the modelling regions and it provides all the water fluxes and stores required for NWA. The software architecture developed as part of AWRA integrates the individual components in a seamless manner with transfer of fluxes between the components at a daily time step for operational implementation. The system is fully functional on the Bureauâs operating system and used for supporting the production of AWRA and NWA reports. The Bureau has used the AWRA modelling system to undertake water resource assessments across the country and already published one Water Resource Assessment (2010) and two National Water Accounts (2010, 2011). There has been a steady and continuous improvement in the AWRA model performance and the Bureau is currently undertaking the next round of Water Resource Assessments (2012) and a National Water Account (2012) using the current version of the AWRA system. It is anticipated that what-if scenario modelling and forecasting water resource availability will eventually come into scope in the next three years when the retrospective components of the system are fully implemented and operating efficiently and effectively.\",\"range\":{},\"fuel\":{},\"metric\":\"\",\"index\":\"\",\"resolutions\":{\"minimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"optimum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}},\"maximum\":{\"spatial\":{\"value\":\"\",\"units\":\"\"},\"temporal\":{\"value\":\"\",\"units\":\"\"}}},\"keywords\":{\"strengths\": [\"Soil moisture\",\"API\",\"Comparison\"],\"weaknesses\": []},\"cavaets\":\"\"},\"datasources\": [\"AWRA\",\"Observations\"]}\n",
        "output": "json",
        "x": 340,
        "y": 940,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "2a898bd3.7a8924",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "MODIS",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n\"last_updated\":\"{{msg.timestamp}}\",\n\"name\":\"MODIS\",\n\"desc\":\"Moderate Resolution Imaging Spectroradiometer\",\n\"provider_org\":\"https://modis.gsfc.nasa.gov/\",\n\"frequency\":{\n\"value\":\"8\",\n\"units\":\"days\"\n},\n\"provides\": [\n\"Surface Reflectance Bands\"\n]\n}",
        "output": "json",
        "x": 360,
        "y": 1440,
        "wires": [
            [
                "8f091de2.628ed"
            ]
        ]
    },
    {
        "id": "58fd11ec.d8d0c",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 1440,
        "wires": [
            [
                "2a898bd3.7a8924"
            ]
        ]
    },
    {
        "id": "88f0a86e.da59c8",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "models",
        "operation": "",
        "x": 670,
        "y": 440,
        "wires": [
            [
                "ccd4554e.fc87a8",
                "89a6b072.29f9a"
            ]
        ]
    },
    {
        "id": "50008711.1f9588",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "Just Datasources",
        "func": "var ds = [];\n\nfor(var i in msg.payload[0].datasources) {\nds.push(msg.payload[0].datasources[i]);\n}\n\nmsg.operation = \"find.toArray\";\nmsg.payload = {\"abbr\": {$in : ds}};\n// msg.payload = ds;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 560,
        "wires": [
            [
                "8fcc58f0.5deed8",
                "8967880b.798f78"
            ]
        ]
    },
    {
        "id": "4ae5dbc7.c7db04",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "AWAP",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n\"last_updated\":\"{{msg.timestamp}}\",\n\"name\":\"AWAP\",\n\"desc\":\"Australian Water Availability Project AWAP - Australian Gridded Climate Data ( AGCD )\",\n\"provider_org\":\"http://www.bom.gov.au/metadata/catalogue/view/ANZCW0503900567.shtml\",\n\"frequency\":{\n\"value\":\"1\",\n\"units\":\"hours\"\n},\n\"provides\": [\n\"Maximum daily temperature\",\n\"Vapour Pressure @ 3pm\"\n]\n}",
        "output": "json",
        "x": 350,
        "y": 1500,
        "wires": [
            [
                "8f091de2.628ed"
            ]
        ]
    },
    {
        "id": "2e773a37.5eeff6",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 1500,
        "wires": [
            [
                "4ae5dbc7.c7db04"
            ]
        ]
    },
    {
        "id": "8fcc58f0.5deed8",
        "type": "mongodb2 in",
        "z": "a9caf749.eb5048",
        "service": "_ext_",
        "configNode": "671e12d5.6bd4fc",
        "name": "",
        "collection": "datasources",
        "operation": "",
        "x": 1310,
        "y": 560,
        "wires": [
            [
                "36f959c2.e8cd16",
                "83e9c1f8.a234f"
            ]
        ]
    },
    {
        "id": "8d5a999b.b19038",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 500,
        "wires": []
    },
    {
        "id": "36f959c2.e8cd16",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1690,
        "y": 520,
        "wires": []
    },
    {
        "id": "a40d57e2.169c78",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "true",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 630,
        "y": 620,
        "wires": [
            [
                "ac57d7df.e632f8"
            ]
        ]
    },
    {
        "id": "ac57d7df.e632f8",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg={}\nmsg.payload = [{\"datasources\": [\"AWAP\",\"KBDI\"]}];\n// msg.payload = [{datasources: [{0:\"AWAP\"}, {1:\"KBDI\"}]}];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 770,
        "y": 620,
        "wires": [
            [
                "50008711.1f9588"
            ]
        ]
    },
    {
        "id": "6337f923.883258",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 650,
        "y": 500,
        "wires": []
    },
    {
        "id": "8967880b.798f78",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1150,
        "y": 640,
        "wires": []
    },
    {
        "id": "4d0f3f0d.32c1a",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -KBDI",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n\"type\":\"model\",\n\"rating\":\"7\",\n\"name\":\"KBDI\",\n\"abbr\":\"kbdi\",\n\"date\":\"6 December 2013\",\n\"title\":\"Keetch-Byram Drought Index\",\n\"href\":\"\",\n\"version\":\"1.0\",\n\"validated\":{\n\"validated\":true,\n\"references\": [\n{\n\"href\":\"\",\n\"authors\": [\n\"kbdi\"\n],\n\"date\":\"6 December 2013\"\n}\n]\n},\n\"description\":{\n\"author\":\"\",\n\"date\":\"\",\n\"abstract\":\"...\",\n\"range\":{\n\n},\n\"fuel\":{\n\n},\n\"metric\":\"\",\n\"index\":\"\",\n\"resolutions\":{\n\"minimum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n},\n\"optimum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n},\n\"maximum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n}\n},\n\"keywords\":{\n\"strengths\": [\n\"Comparison\"\n],\n\"weaknesses\": [\n\"Derivation from subjective observations.\"\n]\n},\n\"cavaets\":\"\"\n},\n\"datasources\": [\n\"Observations\"\n]\n}",
        "output": "json",
        "x": 330,
        "y": 1000,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "cdede019.e95bc",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -FFDI",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n\"type\":\"model\",\n\"rating\":\"7\",\n\"name\":\"FFDI\",\n\"abbr\":\"ffdi\",\n\"date\":\"6 December 2013\",\n\"title\":\"Forest Fire Danger Index\",\n\"href\":\"\",\n\"version\":\"1.0\",\n\"validated\":{\n\"validated\":true,\n\"references\": [\n{\n\"href\":\"\",\n\"authors\": [\n\"FFDI\"\n],\n\"date\":\"6 December 2013\"\n}\n]\n},\n\"description\":{\n\"author\":\"\",\n\"date\":\"\",\n\"abstract\":\"...\",\n\"range\":{\n\n},\n\"fuel\":{\n\n},\n\"metric\":\"\",\n\"index\":\"\",\n\"resolutions\":{\n\"minimum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n},\n\"optimum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n},\n\"maximum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n}\n},\n\"keywords\":{\n\"strengths\": [\n\"Comparison\"\n],\n\"weaknesses\": [\n\"Derivation from subjective obervations.\"\n]\n},\n\"cavaets\":\"\"\n},\n\"datasources\": [\n\"Observations\"\n]\n}",
        "output": "json",
        "x": 330,
        "y": 1060,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "538612c3.583bdc",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model -GFDI",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n\"type\":\"model\",\n\"rating\":\"7\",\n\"name\":\"GFDI\",\n\"abbr\":\"gfdi\",\n\"date\":\"6 December 2013\",\n\"title\":\"Grass Fire Danger Index\",\n\"href\":\"\",\n\"version\":\"1.0\",\n\"validated\":{\n\"validated\":true,\n\"references\": [\n{\n\"href\":\"\",\n\"authors\": [\n\"GFDI\"\n],\n\"date\":\"6 December 2013\"\n}\n]\n},\n\"description\":{\n\"author\":\"\",\n\"date\":\"\",\n\"abstract\":\"...\",\n\"range\":{\n\n},\n\"fuel\":{\n\n},\n\"metric\":\"\",\n\"index\":\"\",\n\"resolutions\":{\n\"minimum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n},\n\"optimum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n},\n\"maximum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n}\n},\n\"keywords\":{\n\"strengths\": [\n\"Comparison\"\n],\n\"weaknesses\": [\n\"Derivation from subjective observations.\"\n]\n},\n\"cavaets\":\"\"\n},\n\"datasources\": [\n\"Observations\"\n]\n}",
        "output": "json",
        "x": 330,
        "y": 1120,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "cb81a92b.307258",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 640,
        "wires": [
            [
                "aec731e9.0c27"
            ]
        ]
    },
    {
        "id": "175cb15a.6bc82f",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 700,
        "wires": [
            [
                "2d3a4a3e.c13266"
            ]
        ]
    },
    {
        "id": "c362a6f6.830d98",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 760,
        "wires": [
            [
                "98944325.0090a"
            ]
        ]
    },
    {
        "id": "b03e7602.956868",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 820,
        "wires": [
            [
                "828005e3.3cd768"
            ]
        ]
    },
    {
        "id": "59fd3396.188ebc",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 880,
        "wires": [
            [
                "bc7a50f6.a53da"
            ]
        ]
    },
    {
        "id": "1967166d.260f4a",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 940,
        "wires": [
            [
                "979e7c8c.f7cf"
            ]
        ]
    },
    {
        "id": "9da38dc3.f8f47",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1000,
        "wires": [
            [
                "4d0f3f0d.32c1a"
            ]
        ]
    },
    {
        "id": "3ec6d195.e905be",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1060,
        "wires": [
            [
                "cdede019.e95bc"
            ]
        ]
    },
    {
        "id": "7ea42c3e.c7c234",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1120,
        "wires": [
            [
                "538612c3.583bdc"
            ]
        ]
    },
    {
        "id": "ade41c44.8ab47",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model live_fuel",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n\"type\":\"model\",\n\"rating\":\"8\",\n\"name\":\"Live Fuels - Nolan et al.\",\n\"abbr\":\"live_fuel\",\n\"date\":\"9 September 2015\",\n\"title\":\"Predicting dead fine fuel moisture at regional scales using vapour pressure deficit from MODIS and gridded weather data\",\n\"href\":\"http://dx.doi.org/10.1016/j.rse.2015.12.010\",\n\"version\":\"1.0\",\n\"validated\":{\n\"validated\":true,\n\"references\": [\n{\n\"href\":\"\",\n\"authors\":\"Rachael H. Nolan, VÃ­ctor Resco de Dios, Matthias M. Boer, Gabriele Caccamo, Michael L. Goulden, Ross A. Bradstock\",\n\"date\":\"\"\n}\n]\n},\n\"description\":{\n\"date\":\"\",\n\"abstract\":\"Spatially explicit predictions of fuel moisture content are crucial for quantifying fire danger indices and as inputs to fire behaviour models. Remotely sensed predictions of fuel moisture have typically focused on live fuels; but regional estimates of dead fuel moisture have been less common. Here we develop and test the spatial application of a recently developed dead fuel moisture model, which is based on the exponential decline of fine fuel moisture with increasing vapour pressure deficit (D). We first compare the performance of two existing approaches to pre- dict D from satellite observations. We then use remotely sensed D, as well as D estimated from gridded daily weather observations, to predict dead fuel moisture. We calibrate and test the model at a woodland site in South East Australia, and then test the model at a range of sites in South East Australia and Southern California that vary in vegetation type, mean annual precipitation (129â1404 mm year â1 ) and leaf area index (0.1â5.7). We found that D modelled from remotely sensed land surface temperature performed slightly better than a model which also included total precipitable water (MAE b 1.16 kPa and 1.62 kPa respectively). D calculated with observations from the Moderate Resolution Imaging Spectroradiometer (MODIS) on the Terra satellite was under-predicted in areas with low leaf area index. Both D from remotely sensed data and gridded weather station data were good predictors of the moisture content of dead suspended fuels at validation sites, with mean absolute errors less than 3.9% and 6.0% respectively. The occurrence of data gaps in remotely sensed time series presents an obstacle to this approach, and assimilated or extrapolated meteorological observations may offer better continuity.\",\n\"range\":{\n\n},\n\"fuel\":{\n\n},\n\"metric\":\"\",\n\"index\":\"\",\n\"resolutions\":{\n\"minimum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"24\",\n\"units\":\"hour\"\n}\n},\n\"optimum\":{\n\"spatial\":{\n\"value\":\"9\",\n\"units\":\"km^2\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n},\n\"maximum\":{\n\"spatial\":{\n\"value\":\"\",\n\"units\":\"\"\n},\n\"temporal\":{\n\"value\":\"\",\n\"units\":\"\"\n}\n}\n},\n\"keywords\":{\n\"strengths\": [\n\"Remotely sensed.\",\n\"Accuracy of model.\"\n],\n\"weaknesses\": [\n\"MODIS being decommissioned soon.\"\n]\n},\n\"cavaets\":\"\"\n},\n\"datasources\": [\n\"MODIS\",\n\"AWAP\"\n]\n}",
        "output": "json",
        "x": 340,
        "y": 1180,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "f450922a.78b8e",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1180,
        "wires": [
            [
                "ade41c44.8ab47"
            ]
        ]
    },
    {
        "id": "b33322b5.994cd",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1170,
        "y": 1480,
        "wires": []
    },
    {
        "id": "23099678.bf6e1a",
        "type": "template",
        "z": "cc93ff07.e64b2",
        "name": "URL simulation",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "http://api:8002/v1/fuel?lat1={{payload.lat1}}&lon1={{payload.lon1}}&lat2={{payload.lat2}}&lon2={{payload.lon2}}&start={{payload.start}}&finish={{payload.finish}}&models={{payload.models}}",
        "output": "str",
        "x": 800,
        "y": 1480,
        "wires": [
            [
                "b33322b5.994cd"
            ]
        ]
    },
    {
        "id": "c7095301.fbf03",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "DAILY",
        "topic": "daily_cron_process",
        "payload": "",
        "payloadType": "date",
        "repeat": "86400",
        "crontab": "",
        "once": false,
        "x": 100,
        "y": 1620,
        "wires": [
            [
                "26c71637.27e59a"
            ]
        ]
    },
    {
        "id": "6a556f68.41143",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Daily CRON Data",
        "func": "function formatDate(date) {\nvar d = new Date(date),\nmonth = '' + (d.getMonth() + 1),\nday = '' + d.getDate(),\nyear = d.getFullYear();\n\nif (month.length < 2) month = '0' + month;\nif (day.length < 2) day = '0' + day;\n\nreturn [year, month, day].join('');\n}\n\nvar tnow = +new Date();\nvar tminus24 = tnow - (24 * 60 * 60 * 1000);\n\nmsg.payload = {\n\"models\": msg.payload[\"data\"].models,\n\"start\": formatDate(tminus24),\n\"finish\": formatDate(tnow),\n\"lon1\": 112.8500,\n\"lat1\": -9.8600,\n\"lon2\": 153.6900,\n\"lat2\": -43.7000\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 1480,
        "wires": [
            [
                "deed8dcc.d95c8",
                "23099678.bf6e1a"
            ]
        ]
    },
    {
        "id": "86e94ac3.36b358",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "Trigger",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 90,
        "y": 1480,
        "wires": [
            [
                "26c71637.27e59a"
            ]
        ]
    },
    {
        "id": "65928fc3.5809d",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload.models",
        "x": 820,
        "y": 1360,
        "wires": []
    },
    {
        "id": "91e6a114.86ac7",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 1050,
        "y": 1420,
        "wires": [
            [
                "b33322b5.994cd"
            ]
        ]
    },
    {
        "id": "26c71637.27e59a",
        "type": "http request",
        "z": "cc93ff07.e64b2",
        "name": "APIv1 models",
        "method": "GET",
        "ret": "txt",
        "url": "http://api:8002/v1/models",
        "tls": "",
        "x": 260,
        "y": 1480,
        "wires": [
            [
                "73740313.37db6c"
            ]
        ]
    },
    {
        "id": "73740313.37db6c",
        "type": "json",
        "z": "cc93ff07.e64b2",
        "name": "",
        "pretty": false,
        "x": 410,
        "y": 1480,
        "wires": [
            [
                "6a556f68.41143"
            ]
        ]
    },
    {
        "id": "4502cfc5.54c71",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "Synthesized Fuel Moisture as TimeSeries",
        "func": "// Test Data Example Defaults\n\nlet time_step =1000*60*60*1; // ie hourly in milliseconds\nvar samples_per_series = 24*7;\nlet noise_variation = Math.random()*0.5;\n // -6.73 per hour\n \nvar num_models = 3;\nvar model_names = ['Nolan', 'van Dijk', 'Boer', 'McArthur'];\n\nvar lat = 0;\nvar lng = 0;\n\nvar now = new Date();\nvar start = new Date(now.getTime() - (samples_per_series*time_step) );\nvar finish = new Date(now.getTime());\nvar timeseries = [];\n\n// Override if values supplied in request\nif(msg.req.params.models) {\n    var names = msg.req.params.models.split(',');\n    num_models = names.length;\n    model_names = names;\n}\nif(msg.req.params.lng) lng = msg.req.params.lng;\nif(msg.req.params.lat) lat = msg.req.params.lat;\nif(msg.req.params.start) start = msg.req.params.start;\nif(msg.req.params.finish) finish = msg.req.params.finish;\n\nfor(model=0;model<num_models;model++) {\n\n    var sample = {};\n    sample.name = model_names[model];\n    \n    \n    var meta = {};\n    meta.lat = lat;\n    meta.lng = lng;\n    meta.start = start;\n    meta.finish = finish;\n    meta.rainfall = \"Expressed as percentage gain in water saturation\";\n    meta.spatial_resolution = 'Average over 500 m^2';\n    meta.temporal_granularity = time_step + ' milliseconds';\n    // TODO - other metadata like applicable fuel types etc\n    \n    // Inject metadata\n    sample.meta = meta;\n    sample.series = [];\n    \n    var drying_acceleration = Math.random()*0.43;\n    \n    var raining = false;\n        \n    for(observation=0;observation<samples_per_series;observation++) {\n        var transpiration = (Math.random()*0.87235623);\n        // var time_noise = Math.random()*0.00125;\n        var time_noise = 0.0;\n        var exposure = Math.random()*0.363124;\n        var record={};\n        var fuel;\n        var loss=0;\n        var rain_chance = Math.random();\n        var rainfall = 0;\n        \n        \n        // First pass check\n        if(model===0) {\n            \n            // Lay down some randomness...\n            if(observation<1) {\n            // First Observation\n                fuel = Math.random() * 100;\n            } else {\n                fuel = sample.series[observation-1].value; // fill-forward and mutate later\n            }\n            \n            // in Model[0] we store rainfall\n            \n            if(!raining && rain_chance > 0.85) {\n                // Start raining\n                raining = true;\n                rainfall = (Math.random()*45); // % Saturation in one hour (downpour)\n            } else if(raining && rain_chance < 0.25) {\n                // Stop raining\n                raining = false;\n            } else if(raining) {\n                // Continue raining\n                rainfall = (Math.random()*15); // % Saturation in one hour (drizzle)\n            } else if (!raining) {\n                drying_acceleration += Math.random()*exposure;\n            }\n        \n        } else {\n            // Subsequent Models\n            \n            rainfall = timeseries[0].series[observation].rainfall;\n            if(rainfall===0) drying_acceleration += Math.random()*exposure;\n            // Observations are derived from their parameters \n            // Continue trend from Previous in series\n            \n            // Add noise and drift\n            if(observation<1) {\n                fuel = timeseries[0].series[observation].value;\n            } else {\n                fuel = sample.series[observation-1].value; // fill-forward and mutate later\n            }\n        }\n        \n        \n        \n        \n        \n        loss = (transpiration + drying_acceleration); // Fudge!!\n        \n        fuel += rainfall*(1 - Math.random()*0.1);\n        fuel -= loss*(1 - Math.random()*0.25);\n        \n        if(fuel > 100) {\n            fuel = 100;\n        } else if(fuel < 0) {\n            fuel = 0;\n        }\n        \n        var min = Math.max(0, fuel-loss);\n        var max = Math.min(100, fuel+rainfall);\n        \n        \n        \n        \n        // Flow *forwads* through time from most distant past observation to most recent\n        var date_time = new Date(now.getTime() - ((samples_per_series-observation)*time_step) );\n        \n        record.name= date_time;\n        record.rainfall = rainfall;\n        record.value = fuel;\n        \n        if(observation==samples_per_series-1) {\n            record.min = 0;\n            record.max = 100;\n        } else {\n            record.min = min;\n            record.max = max;\n        }\n        sample.series.push(record);\n        // console.log('Series for observation: '+observation+', of model('+model+'):'+model_names[model]+' generated.');\n    }\n    timeseries.push(sample);\n    \n    console.log(timeseries)\n    // console.log('Sample for model('+model+'):'+model_names[model]+' generated.');\n}\n\n\n\n\nmsg.payload = timeseries;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 919,
        "y": 1102,
        "wires": [
            [
                "3ee06ab4.66bf06",
                "e092431e.aa693"
            ]
        ]
    },
    {
        "id": "a9474016.659d3",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API Defaults (Testing only)",
        "url": "/api/fuel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 259,
        "y": 984,
        "wires": [
            [
                "ab67d457.754358"
            ]
        ]
    },
    {
        "id": "e092431e.aa693",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "false",
        "x": 1253,
        "y": 1118,
        "wires": []
    },
    {
        "id": "3ee06ab4.66bf06",
        "type": "http response",
        "z": "cc93ff07.e64b2",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1237,
        "y": 1023,
        "wires": []
    },
    {
        "id": "adfca794.6100b8",
        "type": "inject",
        "z": "cc93ff07.e64b2",
        "name": "",
        "topic": "",
        "payload": "{\"num_models\":4}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 561,
        "y": 928,
        "wires": [
            [
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "d0e1ee2f.9d94b",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API at Point (Testing only)",
        "url": "/api/fuel/:lng/:lat",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 268,
        "y": 1102,
        "wires": [
            [
                "4b589d79.b214c4"
            ]
        ]
    },
    {
        "id": "ab67d457.754358",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 558,
        "y": 1004,
        "wires": [
            [
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "4b589d79.b214c4",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 567,
        "y": 1069,
        "wires": [
            [
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "922bebf2.15ec78",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API at Point and Time (Testing only)",
        "url": "/api/fuel/:lng/:lat/time/:start/:finish",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 243,
        "y": 1167,
        "wires": [
            [
                "a836c425.5f58c8"
            ]
        ]
    },
    {
        "id": "a836c425.5f58c8",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 567,
        "y": 1123,
        "wires": [
            [
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "5c774599.d93cbc",
        "type": "http in",
        "z": "cc93ff07.e64b2",
        "name": "Fuel API at Point For Models (Testing only)",
        "url": "/api/fuel/:lng/:lat/models/:models",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 245,
        "y": 1248,
        "wires": [
            [
                "7c342503.d08ddc",
                "4502cfc5.54c71"
            ]
        ]
    },
    {
        "id": "7c342503.d08ddc",
        "type": "debug",
        "z": "cc93ff07.e64b2",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 664,
        "y": 1229,
        "wires": []
    },
    {
        "id": "2ceee608.058f1a",
        "type": "function",
        "z": "cc93ff07.e64b2",
        "name": "",
        "func": "// TODO - logic for model selection\n\n// Dead FM\nmsg.payload = 'DeadFMThreaded.py ' + msg.req.params.lng + ' ' + msg.req.params.lat + ' ' + msg.req.params.start + ' ' + msg.req.params.end;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 669,
        "y": 1271,
        "wires": [
            []
        ]
    },
    {
        "id": "1e7b8b8d.634644",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "4a74af17.e76e8",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "get",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 500,
        "y": 100,
        "wires": [
            [
                "d301daa2.c46688"
            ]
        ]
    },
    {
        "id": "d301daa2.c46688",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "RESPONSE",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "fe75511.5c383b",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "RUN TEST",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 100,
        "wires": [
            [
                "5ed63f30.b2eef"
            ]
        ]
    },
    {
        "id": "5ed63f30.b2eef",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "TEST CASE",
        "func": "msg.filename=\"register/bom023/rKCm6dbQ/adfd/IDV71199_VIC_WindMagKmh_1000mAMSL.nc.gz\";\nmsg.localFilename = \"/tmp/IDV71199_VIC_WindMagKmh_1000mAMSL.nc.gz\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "4a74af17.e76e8"
            ]
        ]
    },
    {
        "id": "9c2cacb8.9f915",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1910,
        "y": 240,
        "wires": []
    },
    {
        "id": "58cbaf3.cff095",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 560,
        "wires": [
            [
                "ca7dca3a.8f90d8"
            ]
        ]
    },
    {
        "id": "62c6943e.03631c",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "Filter for ALL",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload.filter(function(item) {\n    return (item.hasOwnProperty(\"name\"));\n});\n\nmsg.path = msg.filename;\n\nmsg.filename = object_shortlist.map(function(item) {\n    return msg.path + \"/\" + item.name;    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 280,
        "wires": [
            [
                "1e7b8b8d.634644",
                "bc51a0b1.9b47c"
            ]
        ]
    },
    {
        "id": "7e3f6d53.40dbd4",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1770,
        "y": 780,
        "wires": []
    },
    {
        "id": "3262dce8.4cfdd4",
        "type": "http request",
        "z": "f51feb57.6cd738",
        "name": "upload to weather",
        "method": "POST",
        "ret": "txt",
        "url": "localhost:1880/uploadsimple_post",
        "tls": "",
        "x": 2370,
        "y": 680,
        "wires": [
            [
                "190cdf9.7b9c72"
            ]
        ]
    },
    {
        "id": "8087c833.e549c8",
        "type": "split",
        "z": "f51feb57.6cd738",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1630,
        "y": 680,
        "wires": [
            [
                "b0b309ba.1938d8",
                "8701eb5d.710798"
            ]
        ]
    },
    {
        "id": "e88ce5b0.fd1338",
        "type": "split",
        "z": "f51feb57.6cd738",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1630,
        "y": 720,
        "wires": [
            [
                "7e3f6d53.40dbd4"
            ]
        ]
    },
    {
        "id": "b0b309ba.1938d8",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1770,
        "y": 620,
        "wires": []
    },
    {
        "id": "15cc88bc.ec4827",
        "type": "file in",
        "z": "f51feb57.6cd738",
        "name": "",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "x": 2050,
        "y": 680,
        "wires": [
            [
                "f9d7176b.dfa508",
                "8165e640.26b108"
            ]
        ]
    },
    {
        "id": "8701eb5d.710798",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "Local Filename",
        "func": "msg.payload = msg.directory + msg.payload.split(msg.path)[1];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1880,
        "y": 680,
        "wires": [
            [
                "15cc88bc.ec4827"
            ]
        ]
    },
    {
        "id": "190cdf9.7b9c72",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 2630,
        "y": 680,
        "wires": []
    },
    {
        "id": "30c6e72f.569af8",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "TEST",
        "topic": "",
        "payload": "/tmp/20180509/IDV71001_VIC_Td_SFC.grb",
        "payloadType": "str",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1750,
        "y": 560,
        "wires": [
            [
                "70e9bae4.156474"
            ]
        ]
    },
    {
        "id": "70e9bae4.156474",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.filename = msg.payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1890,
        "y": 560,
        "wires": [
            [
                "15cc88bc.ec4827"
            ]
        ]
    },
    {
        "id": "fe79e290.ffc2f",
        "type": "http in",
        "z": "18ce424.75127be",
        "name": "",
        "url": "/upload",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "1621daf0.c430d5"
            ]
        ]
    },
    {
        "id": "1621daf0.c430d5",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Upload a file here:</h1>\n\n<form action=\"/uploadsimple_post\" method=\"POST\" enctype=\"multipart/form-data\">\n    <input type=\"file\" name=\"myFile\" />\n    <input type=\"submit\" value=\"Submit\">\n</form>",
        "output": "str",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "5d282090.78895"
            ]
        ]
    },
    {
        "id": "5d282090.78895",
        "type": "http response",
        "z": "18ce424.75127be",
        "name": "",
        "x": 490,
        "y": 120,
        "wires": []
    },
    {
        "id": "74ea179c.2124b8",
        "type": "http response",
        "z": "18ce424.75127be",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "837451.f675abb",
        "type": "debug",
        "z": "18ce424.75127be",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "req.files",
        "x": 410,
        "y": 180,
        "wires": []
    },
    {
        "id": "cc252981.12b488",
        "type": "comment",
        "z": "18ce424.75127be",
        "name": "Simple file upload example",
        "info": "http://localhost:1880/upload",
        "x": 190,
        "y": 80,
        "wires": []
    },
    {
        "id": "10a3bc97.4dcfe3",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p>File {{originalname}} uploaded !</p>\n\n<h2>Contents:</h2>\n\n<pre>\n{{{payload}}}\n</pre>",
        "output": "str",
        "x": 730,
        "y": 240,
        "wires": [
            [
                "74ea179c.2124b8"
            ]
        ]
    },
    {
        "id": "a1cc4957.482b68",
        "type": "function",
        "z": "18ce424.75127be",
        "name": "",
        "func": "if (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.payload.toString('base64')}\">`;\n} else {\n    msg.payload = msg.payload.toString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 240,
        "wires": [
            [
                "10a3bc97.4dcfe3"
            ]
        ]
    },
    {
        "id": "f1d5cec2.e677",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "dropzone.js",
        "field": "dropzonejs",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  noop = function() {};\n\n  Emitter = (function() {\n    function Emitter() {}\n\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n    Emitter.prototype.on = function(event, fn) {\n      this._callbacks = this._callbacks || {};\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(fn);\n      return this;\n    };\n\n    Emitter.prototype.emit = function() {\n      var args, callback, callbacks, event, _i, _len;\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      this._callbacks = this._callbacks || {};\n      callbacks = this._callbacks[event];\n      if (callbacks) {\n        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n          callback = callbacks[_i];\n          callback.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n    Emitter.prototype.off = function(event, fn) {\n      var callback, callbacks, i, _i, _len;\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      }\n      callbacks = this._callbacks[event];\n      if (!callbacks) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      }\n      for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\n        callback = callbacks[i];\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    return Emitter;\n\n  })();\n\n  Dropzone = (function(_super) {\n    var extend, resolveOption;\n\n    __extends(Dropzone, _super);\n\n    Dropzone.prototype.Emitter = Emitter;\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 120,\n      thumbnailHeight: 120,\n      filesizeBase: 1000,\n      maxFiles: null,\n      params: {},\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      hiddenInputContainer: \"body\",\n      capture: null,\n      renameFilename: null,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      accept: function(file, done) {\n        return done();\n      },\n      init: function() {\n        return noop;\n      },\n      forceFallback: false,\n      fallback: function() {\n        var child, messageElement, span, _i, _len, _ref;\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\n        _ref = this.element.getElementsByTagName(\"div\");\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          if (span.textContent !== null) {\n            span.textContent = this.options.dictFallbackMessage;\n          } else if (span.innerText !== null) {\n            span.innerText = this.options.dictFallbackMessage;\n          }\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        info.optWidth = this.options.thumbnailWidth;\n        info.optHeight = this.options.thumbnailHeight;\n        if ((info.optWidth === null) && (info.optHeight === null)) {\n          info.optWidth = info.srcWidth;\n          info.optHeight = info.srcHeight;\n        } else if (info.optWidth === null) {\n          info.optWidth = srcRatio * info.optHeight;\n        } else if (info.optHeight === null) {\n          info.optHeight = (1 / srcRatio) * info.optWidth;\n        }\n        trgRatio = info.optWidth / info.optHeight;\n        if (file.height < info.optHeight || file.width < info.optWidth) {\n          info.trgHeight = info.srcHeight;\n          info.trgWidth = info.srcWidth;\n        } else {\n          if (srcRatio > trgRatio) {\n            info.srcHeight = file.height;\n            info.srcWidth = info.srcHeight * trgRatio;\n          } else {\n            info.srcWidth = file.width;\n            info.srcHeight = info.srcWidth / trgRatio;\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        return info;\n      },\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            node.textContent = this._renameFilename(file.name);\n          }\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            node = _ref1[_j];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          _results = [];\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            removeLink = _ref2[_k];\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return _results;\n        }\n      },\n      removedfile: function(file) {\n        var _ref;\n        if (file.previewElement) {\n          if ((_ref = file.previewElement) != null) {\n            _ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var thumbnailElement, _i, _len, _ref;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            thumbnailElement = _ref[_i];\n            thumbnailElement.alt = file.name;\n            thumbnailElement.src = dataUrl;\n          }\n          return setTimeout(((function(_this) {\n            return function() {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            };\n          })(this)), 1);\n        }\n      },\n      error: function(file, message) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            _results.push(node.textContent = message);\n          }\n          return _results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            if (node.nodeName === 'PROGRESS') {\n              _results.push(node.value = progress);\n            } else {\n              _results.push(node.style.width = \"\" + progress + \"%\");\n            }\n          }\n          return _results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-complete\");\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      queuecomplete: noop,\n      addedfiles: noop,\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\n    };\n\n    extend = function() {\n      var key, object, objects, target, val, _i, _len;\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {\n        object = objects[_i];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element, options) {\n      var elementOptions, fallback, _ref;\n      this.element = element;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (!file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === status) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getAddedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.ADDED);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            if (_this.options.capture != null) {\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, _i, _len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                  file = files[_i];\n                  _this.addFile(file);\n                }\n              }\n              _this.emit(\"addedfiles\", files);\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\n      _ref1 = this.events;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        eventName = _ref1[_i];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (_error) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  _this.hiddenFileInput.click();\n                }\n                return true;\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var _ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        _ref = this.getActiveFiles();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype._renameFilename = function(name) {\n      if (typeof this.options.renameFilename !== \"function\") {\n        return name;\n      }\n      return this.options.renameFilename(name);\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, tagName, _i, _len, _ref;\n      getFallback = function(elements) {\n        var el, _i, _len;\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      _ref = [\"div\", \"form\"];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        tagName = _ref[_i];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, _i, _len, _ref, _results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        _results.push(this.cancelUpload(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\n      selectedSize = 0;\n      selectedUnit = \"b\";\n      if (size > 0) {\n        units = ['TB', 'GB', 'MB', 'KB', 'b'];\n        for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\n          unit = units[i];\n          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n          if (size >= cutoff) {\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n            selectedUnit = unit;\n            break;\n          }\n        }\n        selectedSize = Math.round(10 * selectedSize) / 10;\n      }\n      return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      this.emit(\"addedfiles\", files);\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, _ref;\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        _results.push(this.addFile(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = items.length; _i < _len; _i++) {\n        item = items[_i];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            _results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            _results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            _results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            _results.push(this.addFile(item.getAsFile()));\n          } else {\n            _results.push(void 0);\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, errorHandler, readEntries;\n      dirReader = directory.createReader();\n      errorHandler = function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      };\n      readEntries = (function(_this) {\n        return function() {\n          return dirReader.readEntries(function(entries) {\n            var entry, _i, _len;\n            if (entries.length > 0) {\n              for (_i = 0, _len = entries.length; _i < _len; _i++) {\n                entry = entries[_i];\n                if (entry.isFile) {\n                  entry.file(function(file) {\n                    if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                      return;\n                    }\n                    file.fullPath = \"\" + path + \"/\" + file.name;\n                    return _this.addFile(file);\n                  });\n                } else if (entry.isDirectory) {\n                  _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\n                }\n              }\n              readEntries();\n            }\n            return null;\n          }, errorHandler);\n        };\n      })(this);\n      return readEntries();\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {\n        return function() {\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, _i, _len, _ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      _ref = this.files.slice();\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          if (file.type === \"image/svg+xml\") {\n            _this.emit(\"thumbnail\", file, fileReader.result);\n            if (callback != null) {\n              callback();\n            }\n            return;\n          }\n          return _this.createThumbnailFromUrl(file, fileReader.result, callback);\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback, crossOrigin) {\n      var img;\n      img = document.createElement(\"img\");\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n      img.onload = (function(_this) {\n        return function() {\n          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\n          file.width = img.width;\n          file.height = img.height;\n          resizeInfo = _this.options.resize.call(_this, file);\n          if (resizeInfo.trgWidth == null) {\n            resizeInfo.trgWidth = resizeInfo.optWidth;\n          }\n          if (resizeInfo.trgHeight == null) {\n            resizeInfo.trgHeight = resizeInfo.optHeight;\n          }\n          canvas = document.createElement(\"canvas\");\n          ctx = canvas.getContext(\"2d\");\n          canvas.width = resizeInfo.trgWidth;\n          canvas.height = resizeInfo.trgHeight;\n          drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n          thumbnail = canvas.toDataURL(\"image/png\");\n          _this.emit(\"thumbnail\", file, thumbnail);\n          if (callback != null) {\n            return callback();\n          }\n        };\n      })(this);\n      if (callback != null) {\n        img.onerror = callback;\n      }\n      return img.src = imageUrl;\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.files;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          if (file.xhr === xhr) {\n            _results.push(file);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\n          groupedFile = groupedFiles[_i];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\n          groupedFile = groupedFiles[_j];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    resolveOption = function() {\n      var args, option;\n      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof option === 'function') {\n        return option.apply(this, args);\n      }\n      return option;\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.xhr = xhr;\n      }\n      method = resolveOption(this.options.method, files);\n      url = resolveOption(this.options.url, files);\n      xhr.open(method, url, true);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var _j, _len1, _results;\n          _results = [];\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n            file = files[_j];\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return _results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n              file = files[_j];\n              file.upload = {\n                progress: progress,\n                total: e.total,\n                bytesSent: e.loaded\n              };\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\n              file = files[_k];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          _results = [];\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\n            file = files[_l];\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return _results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var _ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          response = xhr.responseText;\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {\n              response = JSON.parse(response);\n            } catch (_error) {\n              e = _error;\n              response = \"Invalid JSON response from server.\";\n            }\n          }\n          updateProgress();\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        if (headerValue) {\n          xhr.setRequestHeader(headerName, headerValue);\n        }\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        _ref1 = this.options.params;\n        for (key in _ref1) {\n          value = _ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n        file = files[_j];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          input = _ref2[_k];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            _ref3 = input.options;\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n              option = _ref3[_l];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], this._renameFilename(files[i].name));\n      }\n      return this.submitRequest(xhr, formData, files);\n    };\n\n    Dropzone.prototype.submitRequest = function(xhr, formData, files) {\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Emitter);\n\n  Dropzone.version = \"4.3.0\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = true;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, _i, _len, _results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            _results.push(dropzones.push(el));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    _results = [];\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\n      dropzone = dropzones[_i];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        _results.push(new Dropzone(dropzone));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, regex, _i, _len, _ref;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        _ref = Dropzone.blacklistedBrowsers;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          regex = _ref[_i];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  without = function(list, rejectedItem) {\n    var item, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = list.length; _i < _len; _i++) {\n      item = list[_i];\n      if (item !== rejectedItem) {\n        _results.push(item);\n      }\n    }\n    return _results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, _i, _j, _len, _len1, _ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (_i = 0, _len = els.length; _i < _len; _i++) {\n          el = els[_i];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (_error) {\n        e = _error;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      _ref = document.querySelectorAll(els);\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        el = _ref[_j];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, mimeType, validType, _i, _len;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\n      validType = acceptedFiles[_i];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(0, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e;\n      try {\n        root.doScroll(\"left\");\n      } catch (_error) {\n        e = _error;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (_error) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);",
        "output": "str",
        "x": 390,
        "y": 440,
        "wires": [
            [
                "ac373d13.9e69d"
            ]
        ]
    },
    {
        "id": "7e21f5e7.01ea5c",
        "type": "http in",
        "z": "18ce424.75127be",
        "name": "",
        "url": "/upload_pretty",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "f1d5cec2.e677"
            ]
        ]
    },
    {
        "id": "64037a57.a59e44",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<script>\n    {{{dropzonejs}}}\n</script>\n<style>\n    {{{css}}}\n</style>\n\n<script>\n    // \"myAwesomeDropzone\" is the camelized version of the HTML element's ID\n    Dropzone.options.myDropzone = {\n      paramName: \"myFile\", // The name that will be used to transfer the file\n      maxFilesize: 2, // MB\n      accept: function(file, done) {\n        if (file.name == \"justinbieber.jpg\") {\n          done(\"Naha, you don't.\");\n        }\n        else { done(); }\n      }\n    };\n</script>\n\n<h1>Upload a file here:</h1>\n\n<form action=\"/uploadpretty_post\" class=\"dropzone\" method=\"post\" enctype=\"multipart/form-data\" id=\"my-dropzone\">\n  <div class=\"fallback\">\n    <input name=\"myFile\" type=\"file\" />\n    <input type=\"submit\" value=\"Submit\">\n  </div>\n</form>",
        "output": "str",
        "x": 710,
        "y": 440,
        "wires": [
            [
                "9c2f3a6d.7409b8"
            ]
        ]
    },
    {
        "id": "9c2f3a6d.7409b8",
        "type": "http response",
        "z": "18ce424.75127be",
        "name": "",
        "x": 870,
        "y": 440,
        "wires": []
    },
    {
        "id": "ac373d13.9e69d",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "",
        "field": "css",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/*\n * The MIT License\n * Copyright (c) 2012 Matias Meno <m@tias.me>\n */\n@-webkit-keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@-moz-keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@-webkit-keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@-moz-keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@-webkit-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n@-moz-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n@keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n.dropzone, .dropzone * {\n  box-sizing: border-box; }\n\n.dropzone {\n  min-height: 150px;\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  background: white;\n  padding: 20px 20px; }\n  .dropzone.dz-clickable {\n    cursor: pointer; }\n    .dropzone.dz-clickable * {\n      cursor: default; }\n    .dropzone.dz-clickable .dz-message, .dropzone.dz-clickable .dz-message * {\n      cursor: pointer; }\n  .dropzone.dz-started .dz-message {\n    display: none; }\n  .dropzone.dz-drag-hover {\n    border-style: solid; }\n    .dropzone.dz-drag-hover .dz-message {\n      opacity: 0.5; }\n  .dropzone .dz-message {\n    text-align: center;\n    margin: 2em 0; }\n  .dropzone .dz-preview {\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    margin: 16px;\n    min-height: 100px; }\n    .dropzone .dz-preview:hover {\n      z-index: 1000; }\n      .dropzone .dz-preview:hover .dz-details {\n        opacity: 1; }\n    .dropzone .dz-preview.dz-file-preview .dz-image {\n      border-radius: 20px;\n      background: #999;\n      background: linear-gradient(to bottom, #eee, #ddd); }\n    .dropzone .dz-preview.dz-file-preview .dz-details {\n      opacity: 1; }\n    .dropzone .dz-preview.dz-image-preview {\n      background: white; }\n      .dropzone .dz-preview.dz-image-preview .dz-details {\n        -webkit-transition: opacity 0.2s linear;\n        -moz-transition: opacity 0.2s linear;\n        -ms-transition: opacity 0.2s linear;\n        -o-transition: opacity 0.2s linear;\n        transition: opacity 0.2s linear; }\n    .dropzone .dz-preview .dz-remove {\n      font-size: 14px;\n      text-align: center;\n      display: block;\n      cursor: pointer;\n      border: none; }\n      .dropzone .dz-preview .dz-remove:hover {\n        text-decoration: underline; }\n    .dropzone .dz-preview:hover .dz-details {\n      opacity: 1; }\n    .dropzone .dz-preview .dz-details {\n      z-index: 20;\n      position: absolute;\n      top: 0;\n      left: 0;\n      opacity: 0;\n      font-size: 13px;\n      min-width: 100%;\n      max-width: 100%;\n      padding: 2em 1em;\n      text-align: center;\n      color: rgba(0, 0, 0, 0.9);\n      line-height: 150%; }\n      .dropzone .dz-preview .dz-details .dz-size {\n        margin-bottom: 1em;\n        font-size: 16px; }\n      .dropzone .dz-preview .dz-details .dz-filename {\n        white-space: nowrap; }\n        .dropzone .dz-preview .dz-details .dz-filename:hover span {\n          border: 1px solid rgba(200, 200, 200, 0.8);\n          background-color: rgba(255, 255, 255, 0.8); }\n        .dropzone .dz-preview .dz-details .dz-filename:not(:hover) {\n          overflow: hidden;\n          text-overflow: ellipsis; }\n          .dropzone .dz-preview .dz-details .dz-filename:not(:hover) span {\n            border: 1px solid transparent; }\n      .dropzone .dz-preview .dz-details .dz-filename span, .dropzone .dz-preview .dz-details .dz-size span {\n        background-color: rgba(255, 255, 255, 0.4);\n        padding: 0 0.4em;\n        border-radius: 3px; }\n    .dropzone .dz-preview:hover .dz-image img {\n      -webkit-transform: scale(1.05, 1.05);\n      -moz-transform: scale(1.05, 1.05);\n      -ms-transform: scale(1.05, 1.05);\n      -o-transform: scale(1.05, 1.05);\n      transform: scale(1.05, 1.05);\n      -webkit-filter: blur(8px);\n      filter: blur(8px); }\n    .dropzone .dz-preview .dz-image {\n      border-radius: 20px;\n      overflow: hidden;\n      width: 120px;\n      height: 120px;\n      position: relative;\n      display: block;\n      z-index: 10; }\n      .dropzone .dz-preview .dz-image img {\n        display: block; }\n    .dropzone .dz-preview.dz-success .dz-success-mark {\n      -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -moz-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -ms-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -o-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1); }\n    .dropzone .dz-preview.dz-error .dz-error-mark {\n      opacity: 1;\n      -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -moz-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -ms-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -o-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1); }\n    .dropzone .dz-preview .dz-success-mark, .dropzone .dz-preview .dz-error-mark {\n      pointer-events: none;\n      opacity: 0;\n      z-index: 500;\n      position: absolute;\n      display: block;\n      top: 50%;\n      left: 50%;\n      margin-left: -27px;\n      margin-top: -27px; }\n      .dropzone .dz-preview .dz-success-mark svg, .dropzone .dz-preview .dz-error-mark svg {\n        display: block;\n        width: 54px;\n        height: 54px; }\n    .dropzone .dz-preview.dz-processing .dz-progress {\n      opacity: 1;\n      -webkit-transition: all 0.2s linear;\n      -moz-transition: all 0.2s linear;\n      -ms-transition: all 0.2s linear;\n      -o-transition: all 0.2s linear;\n      transition: all 0.2s linear; }\n    .dropzone .dz-preview.dz-complete .dz-progress {\n      opacity: 0;\n      -webkit-transition: opacity 0.4s ease-in;\n      -moz-transition: opacity 0.4s ease-in;\n      -ms-transition: opacity 0.4s ease-in;\n      -o-transition: opacity 0.4s ease-in;\n      transition: opacity 0.4s ease-in; }\n    .dropzone .dz-preview:not(.dz-processing) .dz-progress {\n      -webkit-animation: pulse 6s ease infinite;\n      -moz-animation: pulse 6s ease infinite;\n      -ms-animation: pulse 6s ease infinite;\n      -o-animation: pulse 6s ease infinite;\n      animation: pulse 6s ease infinite; }\n    .dropzone .dz-preview .dz-progress {\n      opacity: 1;\n      z-index: 1000;\n      pointer-events: none;\n      position: absolute;\n      height: 16px;\n      left: 50%;\n      top: 50%;\n      margin-top: -8px;\n      width: 80px;\n      margin-left: -40px;\n      background: rgba(255, 255, 255, 0.9);\n      -webkit-transform: scale(1);\n      border-radius: 8px;\n      overflow: hidden; }\n      .dropzone .dz-preview .dz-progress .dz-upload {\n        background: #333;\n        background: linear-gradient(to bottom, #666, #444);\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        width: 0;\n        -webkit-transition: width 300ms ease-in-out;\n        -moz-transition: width 300ms ease-in-out;\n        -ms-transition: width 300ms ease-in-out;\n        -o-transition: width 300ms ease-in-out;\n        transition: width 300ms ease-in-out; }\n    .dropzone .dz-preview.dz-error .dz-error-message {\n      display: block; }\n    .dropzone .dz-preview.dz-error:hover .dz-error-message {\n      opacity: 1;\n      pointer-events: auto; }\n    .dropzone .dz-preview .dz-error-message {\n      pointer-events: none;\n      z-index: 1000;\n      position: absolute;\n      display: block;\n      display: none;\n      opacity: 0;\n      -webkit-transition: opacity 0.3s ease;\n      -moz-transition: opacity 0.3s ease;\n      -ms-transition: opacity 0.3s ease;\n      -o-transition: opacity 0.3s ease;\n      transition: opacity 0.3s ease;\n      border-radius: 8px;\n      font-size: 13px;\n      top: 130px;\n      left: -10px;\n      width: 140px;\n      background: #be2626;\n      background: linear-gradient(to bottom, #be2626, #a92222);\n      padding: 0.5em 1.2em;\n      color: white; }\n      .dropzone .dz-preview .dz-error-message:after {\n        content: '';\n        position: absolute;\n        top: -6px;\n        left: 64px;\n        width: 0;\n        height: 0;\n        border-left: 6px solid transparent;\n        border-right: 6px solid transparent;\n        border-bottom: 6px solid #be2626; }",
        "output": "str",
        "x": 570,
        "y": 440,
        "wires": [
            [
                "64037a57.a59e44"
            ]
        ]
    },
    {
        "id": "cdc5d982.61f778",
        "type": "http in",
        "z": "18ce424.75127be",
        "name": "",
        "url": "/uploadsimple_post",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "837451.f675abb",
                "3886cc06.e700c4"
            ]
        ]
    },
    {
        "id": "3886cc06.e700c4",
        "type": "change",
        "z": "18ce424.75127be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.files[0].buffer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "a1cc4957.482b68"
            ]
        ]
    },
    {
        "id": "de98a0e4.c7958",
        "type": "http in",
        "z": "18ce424.75127be",
        "name": "",
        "url": "/uploadpretty_post",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "c6108a32.a4c518",
                "6fb82f0.c7e6bd"
            ]
        ]
    },
    {
        "id": "c6108a32.a4c518",
        "type": "http response",
        "z": "18ce424.75127be",
        "name": "",
        "x": 870,
        "y": 500,
        "wires": []
    },
    {
        "id": "541318da.e59518",
        "type": "comment",
        "z": "18ce424.75127be",
        "name": "More fancy example",
        "info": "http://localhost:1880/upload_pretty",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "6fb82f0.c7e6bd",
        "type": "debug",
        "z": "18ce424.75127be",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "req.files[0].buffer",
        "x": 440,
        "y": 540,
        "wires": []
    },
    {
        "id": "f9d7176b.dfa508",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 2270,
        "y": 580,
        "wires": []
    },
    {
        "id": "8165e640.26b108",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2190,
        "y": 680,
        "wires": [
            [
                "3262dce8.4cfdd4"
            ]
        ]
    },
    {
        "id": "9d24ea12.277e58",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "f208aea5.fd5ca",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 340,
        "wires": []
    },
    {
        "id": "9e17c995.b07e38",
        "type": "ftp-download",
        "z": "f51feb57.6cd738",
        "server": "5eb4cf6e.eb139",
        "files": "filename",
        "directory": "directory",
        "name": "",
        "output": "payload",
        "filesType": "msg",
        "directoryType": "msg",
        "x": 1160,
        "y": 240,
        "wires": [
            [
                "71ec623a.22c3dc",
                "1c553d9f.0c7002"
            ]
        ]
    },
    {
        "id": "9ee99725.4621f8",
        "type": "ftp-download",
        "z": "f51feb57.6cd738",
        "server": "5eb4cf6e.eb139",
        "files": "filename",
        "directory": "directory",
        "name": "",
        "output": "payload",
        "filesType": "msg",
        "directoryType": "msg",
        "x": 700,
        "y": 600,
        "wires": [
            [
                "ef3da2ad.b36e4"
            ]
        ]
    },
    {
        "id": "86a934ea.051b88",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1090,
        "y": 580,
        "wires": []
    },
    {
        "id": "edba8b4f.d37c78",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "RUN TEST",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 600,
        "wires": [
            [
                "e47e1200.776d"
            ]
        ]
    },
    {
        "id": "e47e1200.776d",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "TEST CASE",
        "func": "msg.filename= [\"register/bom023/rKCm6dbQ/adfd/IDV71199_VIC_WindMagKmh_1000mAMSL.nc.gz\"];\n\n\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear();\n\nif(dd<10) {\n    dd = '0'+dd;\n} \n\nif(mm<10) {\n    mm = '0'+mm;\n} \n\nmsg.today =  yyyy + mm + dd;\n\nmsg.directory = \"/mnt/data_dir/\" + msg.today\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 600,
        "wires": [
            [
                "90dd1846.c372d8",
                "a6dab755.a28928"
            ]
        ]
    },
    {
        "id": "871bb05f.ecfd4",
        "type": "file",
        "z": "f51feb57.6cd738",
        "name": "metadata",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "x": 720,
        "y": 340,
        "wires": []
    },
    {
        "id": "90dd1846.c372d8",
        "type": "delay",
        "z": "f51feb57.6cd738",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 500,
        "y": 600,
        "wires": [
            [
                "9ee99725.4621f8"
            ]
        ]
    },
    {
        "id": "a6dab755.a28928",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "mkdir",
        "func": "msg.payload= \"Mirrored from BOM FTP by LFMC Pipeline @ \" + msg.today;\nmsg.filename =  msg.directory + \"/meta.txt\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "871bb05f.ecfd4"
            ]
        ]
    },
    {
        "id": "12181318.ab80cd",
        "type": "delay",
        "z": "f51feb57.6cd738",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 580,
        "y": 240,
        "wires": [
            [
                "81b11c2b.2e155"
            ]
        ]
    },
    {
        "id": "52b38727.b3db88",
        "type": "delay",
        "z": "f51feb57.6cd738",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "66fde08e.33dc3"
            ]
        ]
    },
    {
        "id": "bc51a0b1.9b47c",
        "type": "ftp-download",
        "z": "f51feb57.6cd738",
        "server": "5eb4cf6e.eb139",
        "files": "filename",
        "directory": "directory",
        "name": "",
        "output": "payload",
        "filesType": "msg",
        "directoryType": "msg",
        "x": 1160,
        "y": 280,
        "wires": [
            [
                "71ec623a.22c3dc",
                "1c553d9f.0c7002"
            ]
        ]
    },
    {
        "id": "f1d1df7a.e3cf8",
        "type": "delay",
        "z": "f51feb57.6cd738",
        "name": "",
        "pauseType": "delay",
        "timeout": "3",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 240,
        "y": 280,
        "wires": [
            [
                "ca7dca3a.8f90d8"
            ]
        ]
    },
    {
        "id": "ef3da2ad.b36e4",
        "type": "exec",
        "z": "f51feb57.6cd738",
        "command": "gzip -d ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 890,
        "y": 600,
        "wires": [
            [
                "86a934ea.051b88"
            ],
            [],
            []
        ]
    },
    {
        "id": "4cd50c87.f69f54",
        "type": "exec",
        "z": "f51feb57.6cd738",
        "command": "gzip -d ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1750,
        "y": 260,
        "wires": [
            [
                "9c2cacb8.9f915"
            ],
            [],
            []
        ]
    },
    {
        "id": "71ec623a.22c3dc",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "Filter for GZ",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload.filter(function(item) {\n    return ( item.includes('.gz'));\n});\n\nmsg.payload = object_shortlist.map(function(item) {\n    return item.replace(msg.path, '');    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 260,
        "wires": [
            [
                "1c553d9f.0c7002",
                "78be030d.4a464c"
            ]
        ]
    },
    {
        "id": "1c553d9f.0c7002",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1450,
        "y": 160,
        "wires": []
    },
    {
        "id": "78be030d.4a464c",
        "type": "split",
        "z": "f51feb57.6cd738",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1590,
        "y": 260,
        "wires": [
            [
                "4cd50c87.f69f54"
            ]
        ]
    },
    {
        "id": "1e9d4b0c.74c355",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model - Matthews",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\n\"rating\":\"7\",\n\"name\":\"Matthews et al.\",\n\"abbr\":\"matthews\",\n\"date\":\"14 September 2016\",\n\"title\":\"Modelling fuel moisture across the landscape for fire management\",\n\"href\":\"http://dx.doi.org/10.13140/RG.2.2.36184.70403\",\n\"version\":\"1.0\",\n\"validated\":{\n    \"validated\":true,\n    \"references\": [\n        {\"href\":\"http://dx.doi.org/10.13140/RG.2.2.36184.70403\",\n        \"authors\": [\"S. Matthews, S. Loveday, R. Hurley, S. Roxburgh\"],\n        \"date\":\"14 September 2016\"}\n        ]},\n        \"description\":{\n            \"author\":\"\",\n            \"date\":\"\",\n            \"abstract\":\"Fuels consumed in bushfires are a mix of live and dead plant material, the water content of which plays an important role in determining fire behaviour. Knowledge of FMC is thus required to predict fire behaviour and almost all fire models include dead FMC as an input variable. Existing systems for fire danger rating and forest fire behaviour prediction used in Australia are based on the McArthur Forest Fire Danger Meter (FFDM). This system includes an extremely simple fuel moisture model based only on instantaneous values of temperature and relative humidity. The effect of rainfall on fuel moisture is not included explicitly but rather indirectly via the Drought Factor, which depends only on amount of rainfall and time since rain, i.e. that is drying rate is independent of weather during the drying phase, which is incorrect. Furthermore the FFDM takes no account of topography or fuel or forest structure in making fuel moisture predictions. This project addressed these limitations by applying a physically based moisture model across the landscape for spatial applications and validation using experimental measurements in native forest landscapes in New South Wales and Victoria.\",\n    \"range\":{},\n    \"fuel\":{},\n    \"metric\":\"\",\n    \"index\":\"\",\n    \"resolutions\":{\n        \"minimum\":{\n            \"spatial\":{\n                \"value\":\"\",\"units\":\"\"\n                \n            },\n            \"temporal\":{\n                \"value\":\"\",\"units\":\"\"\n                \n            }\n        },\n        \"optimum\":{\n            \"spatial\":{\"value\":\"\",\"units\":\"\"},\n            \"temporal\":{\"value\":\"\",\"units\":\"\"}\n        },\n        \"maximum\":{\n            \"spatial\":{\"value\":\"\",\"units\":\"\"},\n            \"temporal\":{\"value\":\"\",\"units\":\"\"}\n            \n        }\n        \n    },\n    \"keywords\":{\n        \"strengths\": [\"fuel moisture\",\"API\",\"Comparison\",\"profile\"],\n        \"weaknesses\": []},\n        \"cavaets\":\"\"},\n        \"datasources\": [\"Observations\",\"WaterDyn\",\"BOM\"]\n    \n}\n",
        "output": "json",
        "x": 350,
        "y": 1240,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "24828537.37e00a",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1240,
        "wires": [
            [
                "1e9d4b0c.74c355"
            ]
        ]
    },
    {
        "id": "c56ad8c8.895d38",
        "type": "debug",
        "z": "59601007.fe581",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "927ce9f7.1820e8",
        "type": "debug",
        "z": "ee6c3ad0.573538",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 730,
        "y": 360,
        "wires": []
    },
    {
        "id": "49f672a2.c2361c",
        "type": "http request",
        "z": "ee6c3ad0.573538",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "url": "http://www.bom.gov.au/jsp/awra/thredds/fileServer/AWRA/values/day/sm_pct_2018.nc",
        "tls": "",
        "x": 470,
        "y": 420,
        "wires": [
            [
                "927ce9f7.1820e8",
                "1834f583.79813a"
            ]
        ]
    },
    {
        "id": "577b4e30.34bef",
        "type": "inject",
        "z": "ee6c3ad0.573538",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 240,
        "y": 420,
        "wires": [
            [
                "49f672a2.c2361c"
            ]
        ]
    },
    {
        "id": "1834f583.79813a",
        "type": "file",
        "z": "ee6c3ad0.573538",
        "name": "Save to AWRA folder",
        "filename": "/mnt/awra_dir/sm_pct_2018.nc",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "x": 790,
        "y": 440,
        "wires": []
    },
    {
        "id": "3aab2fac.f0b15",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "4PM",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 16 * * *",
        "once": false,
        "x": 90,
        "y": 220,
        "wires": [
            [
                "f1d1df7a.e3cf8",
                "7badd851.9e4b38"
            ]
        ]
    },
    {
        "id": "82cb3513.7e9b18",
        "type": "template",
        "z": "a9caf749.eb5048",
        "name": "Single Model - Matthews",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\"type\":\"model\",\n\"rating\":\"7\",\n\"name\":\"Drought Factor\",\n\"abbr\":\"df\",\n\"date\":\"14 September 2016\",\n\"title\":\"Drought Factor\",\n\"href\":\"http://dx.doi.org/10.13140/RG.2.2.36184.70403\",\n\"version\":\"1.0\",\n\"validated\":{\n    \"validated\":true,\n    \"references\": [\n        {\"href\":\"http://dx.doi.org/10.13140/RG.2.2.36184.70403\",\n        \"authors\": [\"McArthur\"],\n        \"date\":\"14 September 1950\"}\n        ]},\n        \"description\":{\n            \"author\":\"\",\n            \"date\":\"\",\n            \"abstract\":\"Drought Factor abstract\",\n    \"range\":{},\n    \"fuel\":{},\n    \"metric\":\"\",\n    \"index\":\"\",\n    \"resolutions\":{\n        \"minimum\":{\n            \"spatial\":{\n                \"value\":\"\",\"units\":\"\"\n                \n            },\n            \"temporal\":{\n                \"value\":\"\",\"units\":\"\"\n                \n            }\n        },\n        \"optimum\":{\n            \"spatial\":{\"value\":\"\",\"units\":\"\"},\n            \"temporal\":{\"value\":\"\",\"units\":\"\"}\n        },\n        \"maximum\":{\n            \"spatial\":{\"value\":\"\",\"units\":\"\"},\n            \"temporal\":{\"value\":\"\",\"units\":\"\"}\n            \n        }\n        \n    },\n    \"keywords\":{\n        \"strengths\": [\"fuel moisture\",\"API\",\"Comparison\",\"profile\"],\n        \"weaknesses\": []},\n        \"cavaets\":\"\"},\n        \"datasources\": [\"Observations\",\"BOM\"]\n    \n}\n",
        "output": "json",
        "x": 350,
        "y": 1300,
        "wires": [
            [
                "1722bc97.40aaa3"
            ]
        ]
    },
    {
        "id": "f5f07515.6cda08",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 1300,
        "wires": [
            [
                "82cb3513.7e9b18"
            ]
        ]
    },
    {
        "id": "2d52e84b.8dbf78",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1060,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "2e3110e4.50b8",
        "type": "switch",
        "z": "a9caf749.eb5048",
        "name": "wasSuccessful",
        "property": "payload.sendMessage",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Successful",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "Successful",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 700,
        "y": 160,
        "wires": [
            [
                "e029bf10.6fc9a",
                "386edb7c.509784"
            ],
            [
                "4518fe2.7ae9d",
                "386edb7c.509784"
            ]
        ],
        "outputLabels": [
            "Successful",
            null
        ]
    },
    {
        "id": "e029bf10.6fc9a",
        "type": "switch",
        "z": "a9caf749.eb5048",
        "name": "Matching Extensions for SHP File Grouping",
        "property": "test.originalname",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": ".shp",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": ".dbf",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": ".prj",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": ".sbn",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": ".sbx",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": ".shp.xml",
                "vt": "str"
            },
            {
                "t": "cont",
                "v": ".shx",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 8,
        "x": 1030,
        "y": 140,
        "wires": [
            [
                "d72902ea.bb778"
            ],
            [
                "d72902ea.bb778"
            ],
            [
                "d72902ea.bb778"
            ],
            [
                "d72902ea.bb778"
            ],
            [
                "d72902ea.bb778"
            ],
            [
                "d72902ea.bb778"
            ],
            [
                "d72902ea.bb778"
            ],
            [
                "29ff02aa.00896e"
            ]
        ]
    },
    {
        "id": "29ff02aa.00896e",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1370,
        "y": 260,
        "wires": []
    },
    {
        "id": "3d0ab8a7.154e48",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1810,
        "y": 60,
        "wires": []
    },
    {
        "id": "d72902ea.bb778",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "move params",
        "func": "msg.payload = msg.test.path + ' /mnt/queries/' + msg.test.originalname;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1360,
        "y": 80,
        "wires": [
            [
                "4447d249.ac11ac"
            ]
        ]
    },
    {
        "id": "4447d249.ac11ac",
        "type": "exec",
        "z": "a9caf749.eb5048",
        "command": "mv ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": true,
        "name": "",
        "x": 1570,
        "y": 80,
        "wires": [
            [
                "3d0ab8a7.154e48",
                "cead2179.9401c"
            ],
            [
                "3d0ab8a7.154e48"
            ],
            [
                "3d0ab8a7.154e48"
            ]
        ]
    },
    {
        "id": "60de278e.1a2368",
        "type": "exec",
        "z": "a9caf749.eb5048",
        "command": "ls -al /mnt/queries/",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": true,
        "name": "",
        "x": 1670,
        "y": 200,
        "wires": [
            [
                "b3a7d6d5.247b28"
            ],
            [
                "b3a7d6d5.247b28"
            ],
            [
                "b3a7d6d5.247b28"
            ]
        ]
    },
    {
        "id": "abb97cb7.ac833",
        "type": "inject",
        "z": "a9caf749.eb5048",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 1440,
        "y": 200,
        "wires": [
            [
                "60de278e.1a2368"
            ]
        ]
    },
    {
        "id": "b3a7d6d5.247b28",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 2030,
        "y": 200,
        "wires": []
    },
    {
        "id": "9ac3dded.08cfa",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg.payload = {'shp': msg.test.originalname};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 120,
        "wires": [
            [
                "e53eb21b.80183"
            ]
        ]
    },
    {
        "id": "cead2179.9401c",
        "type": "switch",
        "z": "a9caf749.eb5048",
        "name": "has .shp",
        "property": "test.originalname",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": ".shp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1520,
        "y": 140,
        "wires": [
            [
                "d760f3e2.bd768"
            ],
            []
        ]
    },
    {
        "id": "d760f3e2.bd768",
        "type": "switch",
        "z": "a9caf749.eb5048",
        "name": "not .xml",
        "property": "test.originalname",
        "propertyType": "msg",
        "rules": [
            {
                "t": "cont",
                "v": ".shp.xml",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 1660,
        "y": 140,
        "wires": [
            [],
            [
                "9ac3dded.08cfa"
            ]
        ]
    },
    {
        "id": "e53eb21b.80183",
        "type": "http request",
        "z": "a9caf749.eb5048",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "http://api:8002/v1/convert.json",
        "tls": "",
        "x": 1970,
        "y": 120,
        "wires": [
            [
                "b3a7d6d5.247b28",
                "9b40ec30.f158d"
            ]
        ]
    },
    {
        "id": "be37f377.f4312",
        "type": "http in",
        "z": "59601007.fe581",
        "name": "",
        "url": "/errorlogger",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "c56ad8c8.895d38",
                "785b2f88.80508",
                "e6c389cf.9c2938"
            ]
        ]
    },
    {
        "id": "785b2f88.80508",
        "type": "e-mail",
        "z": "59601007.fe581",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "name": "anthony.rawlins@unimelb.edu.au",
        "dname": "",
        "x": 634,
        "y": 165,
        "wires": []
    },
    {
        "id": "20de281a.8bee08",
        "type": "http in",
        "z": "59601007.fe581",
        "name": "",
        "url": "/errorlogger",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "c56ad8c8.895d38",
                "785b2f88.80508",
                "e6c389cf.9c2938"
            ]
        ]
    },
    {
        "id": "737949a4.9b09b8",
        "type": "inject",
        "z": "59601007.fe581",
        "name": "TEST",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "63254b7c.028794"
            ]
        ]
    },
    {
        "id": "e6c389cf.9c2938",
        "type": "http response",
        "z": "59601007.fe581",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 571,
        "y": 42,
        "wires": []
    },
    {
        "id": "124e4a22.2672b6",
        "type": "http request",
        "z": "59601007.fe581",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "http://localhost:1880/errorlogger",
        "tls": "",
        "x": 570,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "63254b7c.028794",
        "type": "function",
        "z": "59601007.fe581",
        "name": "",
        "func": "msg.payload = {err: \"Error was:âµ'var_name'\", code: 500, time_of_report: \"Monday, May 28, 2018 2:37 PM\", metadata: \"LFMC API v0.6.9\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "124e4a22.2672b6"
            ]
        ]
    },
    {
        "id": "e8c6bcdd.f3143",
        "type": "http in",
        "z": "59601007.fe581",
        "name": "",
        "url": "/github",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 60,
        "wires": [
            [
                "c56ad8c8.895d38",
                "785b2f88.80508",
                "e6c389cf.9c2938"
            ]
        ]
    },
    {
        "id": "a651388c.781128",
        "type": "inject",
        "z": "23c27659.cdbbca",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 100,
        "y": 40,
        "wires": [
            [
                "c77452b5.3f09d"
            ]
        ]
    },
    {
        "id": "e02337f.287f5c8",
        "type": "debug",
        "z": "23c27659.cdbbca",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 870,
        "y": 100,
        "wires": []
    },
    {
        "id": "c77452b5.3f09d",
        "type": "function",
        "z": "23c27659.cdbbca",
        "name": "",
        "func": "msg.filename = \"/mingonn/HeadsUp\";\n\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear();\nvar h = today.getHours();\nvar m = today.getMinutes();\nvar meridian = '';\n\nif(h < 12 || (h==12 && m===0)) {\n    meridian ='AM';\n}\nif(h > 12) {\n    meridian = 'PM';\n}\n\nif(dd<10) {\n    dd = '0'+dd;\n}\n\nif(mm<10) {\n    mm = '0'+mm;\n} \n\nmsg.today =  yyyy + mm + dd + meridian;\n\nmsg.directory = \"/data/\" + msg.today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 40,
        "wires": [
            [
                "304955b.0960eaa",
                "845ebb65.e192e8"
            ]
        ]
    },
    {
        "id": "fcfb1d94.0408",
        "type": "function",
        "z": "23c27659.cdbbca",
        "name": "Filter for Items",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload;\n\n// .filter(function(item) {\n// return (\n//     item.hasOwnProperty(\"name\") &&\n//     ((item.name).includes('IDV')  // Victoria <-- Only Data we have access to with DELWP\n    //  (item.name).includes('IDN') || // NSW/ACT\n    //  (item.name).includes('IDQ') || // Queensland\n    //  (item.name).includes('IDT') || // Tasmania\n    //  (item.name).includes('IDW') || // Western Australia\n    //  (item.name).includes('IDS') || // South Australia\n    //  (item.name).includes('IDD')    // Northern Territory\n//     )\n//     );\n// });\n\nmsg.path = msg.filename;\n\nmsg.filename = object_shortlist.map(function(item) {\n    return msg.path +\"/\"+ item.name;    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 100,
        "wires": [
            [
                "e02337f.287f5c8"
            ]
        ]
    },
    {
        "id": "7882398f.be2058",
        "type": "debug",
        "z": "23c27659.cdbbca",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 770,
        "y": 40,
        "wires": []
    },
    {
        "id": "24e17d5f.a82372",
        "type": "file",
        "z": "23c27659.cdbbca",
        "name": "metadata",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "x": 480,
        "y": 220,
        "wires": []
    },
    {
        "id": "304955b.0960eaa",
        "type": "function",
        "z": "23c27659.cdbbca",
        "name": "mkdir",
        "func": "msg.payload= \"Mirrored from HeadsUp FTP Site by Node-Red @ \" + msg.today;\nmsg.filename =  msg.directory + \"/meta.txt\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 160,
        "wires": [
            [
                "24e17d5f.a82372"
            ]
        ]
    },
    {
        "id": "81c15ec4.7bfef",
        "type": "debug",
        "z": "23c27659.cdbbca",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 160,
        "wires": []
    },
    {
        "id": "54258460.808bac",
        "type": "inject",
        "z": "23c27659.cdbbca",
        "name": "Every 10 mins",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "600",
        "crontab": "",
        "once": false,
        "x": 120,
        "y": 80,
        "wires": [
            [
                "c77452b5.3f09d"
            ]
        ]
    },
    {
        "id": "845ebb65.e192e8",
        "type": "delay",
        "z": "23c27659.cdbbca",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 460,
        "y": 40,
        "wires": [
            [
                "dfcb992c.eb08c8"
            ]
        ]
    },
    {
        "id": "42a46de4.ddfd04",
        "type": "inject",
        "z": "23c27659.cdbbca",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 420,
        "wires": [
            [
                "29515827.91fee8"
            ]
        ]
    },
    {
        "id": "29515827.91fee8",
        "type": "function",
        "z": "23c27659.cdbbca",
        "name": "",
        "func": "msg.filename = \"/mingonn/HeadsUp\";\n\nvar today = new Date();\nvar dd = today.getDate();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear();\nvar h = today.getHours();\nvar m = today.getMinutes();\nvar meridian = '';\n\nif(h < 12 || (h==12 && m===0)) {\n    meridian ='AM';\n}\nif(h > 12) {\n    meridian = 'PM';\n}\n\nif(dd<10) {\n    dd = '0'+dd;\n}\n\nif(mm<10) {\n    mm = '0'+mm;\n} \n\nmsg.today =  yyyy + mm + dd + meridian;\n\nmsg.directory = \"/mnt/data_dir/headsup\" + msg.today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 420,
        "wires": [
            [
                "1e6eb2e.5bf384d",
                "4428232d.64335c",
                "ac97cb49.9dc7e8"
            ]
        ]
    },
    {
        "id": "1e6eb2e.5bf384d",
        "type": "debug",
        "z": "23c27659.cdbbca",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 870,
        "y": 580,
        "wires": []
    },
    {
        "id": "4a11171c.dfda38",
        "type": "function",
        "z": "23c27659.cdbbca",
        "name": "Filter for Items",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload;\n\n// .filter(function(item) {\n// return (\n//     item.hasOwnProperty(\"name\") &&\n//     ((item.name).includes('IDV')  // Victoria <-- Only Data we have access to with DELWP\n    //  (item.name).includes('IDN') || // NSW/ACT\n    //  (item.name).includes('IDQ') || // Queensland\n    //  (item.name).includes('IDT') || // Tasmania\n    //  (item.name).includes('IDW') || // Western Australia\n    //  (item.name).includes('IDS') || // South Australia\n    //  (item.name).includes('IDD')    // Northern Territory\n//     )\n//     );\n// });\n\nmsg.path = msg.filename;\n\nmsg.filename = object_shortlist.map(function(item) {\n    return msg.path + item.name;    \n});\n\nmsg.localFilename = object_shortlist.map(function(item) {\n    return msg.directory + \"/\" + item.name;    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 900,
        "y": 420,
        "wires": [
            [
                "315f1e11.8b3c72",
                "1e6eb2e.5bf384d"
            ]
        ]
    },
    {
        "id": "dfcb992c.eb08c8",
        "type": "ftp in",
        "z": "23c27659.cdbbca",
        "ftp": "ec0c7e55.88cd8",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 620,
        "y": 40,
        "wires": [
            [
                "fcfb1d94.0408",
                "7882398f.be2058"
            ]
        ]
    },
    {
        "id": "1bff3070.0586f",
        "type": "ftp in",
        "z": "23c27659.cdbbca",
        "ftp": "ec0c7e55.88cd8",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 660,
        "y": 420,
        "wires": [
            [
                "4a11171c.dfda38",
                "1e6eb2e.5bf384d"
            ]
        ]
    },
    {
        "id": "315f1e11.8b3c72",
        "type": "ftp in",
        "z": "23c27659.cdbbca",
        "ftp": "ec0c7e55.88cd8",
        "operation": "get",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 1100,
        "y": 420,
        "wires": [
            [
                "1e6eb2e.5bf384d"
            ]
        ]
    },
    {
        "id": "a7a72db4.bc219",
        "type": "file",
        "z": "23c27659.cdbbca",
        "name": "metadata",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "x": 460,
        "y": 580,
        "wires": []
    },
    {
        "id": "4428232d.64335c",
        "type": "function",
        "z": "23c27659.cdbbca",
        "name": "mkdir",
        "func": "msg.payload= \"Mirrored from HeadsUp FTP Site by Node-Red @ \" + msg.today;\nmsg.filename =  msg.directory + \"/meta.txt\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 580,
        "wires": [
            [
                "a7a72db4.bc219"
            ]
        ]
    },
    {
        "id": "ac97cb49.9dc7e8",
        "type": "delay",
        "z": "23c27659.cdbbca",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 480,
        "y": 420,
        "wires": [
            [
                "1bff3070.0586f"
            ]
        ]
    },
    {
        "id": "9b40ec30.f158d",
        "type": "function",
        "z": "a9caf749.eb5048",
        "name": "",
        "func": "msg.payload = msg.payload.replace('/FuelModels/queries/', '/mnt/queries/');\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2210,
        "y": 80,
        "wires": [
            [
                "c67201f2.8956d"
            ]
        ]
    },
    {
        "id": "e971561a.afcde8",
        "type": "debug",
        "z": "a9caf749.eb5048",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2610,
        "y": 80,
        "wires": []
    },
    {
        "id": "c67201f2.8956d",
        "type": "json",
        "z": "a9caf749.eb5048",
        "name": "",
        "pretty": false,
        "x": 2390,
        "y": 80,
        "wires": [
            [
                "e971561a.afcde8"
            ]
        ]
    },
    {
        "id": "e8c4e9a.b5a1d18",
        "type": "inject",
        "z": "df36f755.465bf8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 200,
        "y": 300,
        "wires": [
            [
                "2a627d7.59e7682"
            ]
        ]
    },
    {
        "id": "19e7f493.3ee01b",
        "type": "debug",
        "z": "df36f755.465bf8",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 770,
        "y": 260,
        "wires": []
    },
    {
        "id": "2a627d7.59e7682",
        "type": "function",
        "z": "df36f755.465bf8",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 300,
        "wires": [
            [
                "b12f3072.08e4e"
            ]
        ]
    },
    {
        "id": "b12f3072.08e4e",
        "type": "http request",
        "z": "df36f755.465bf8",
        "name": "GET: LayerGroups",
        "method": "GET",
        "ret": "txt",
        "url": "http://geoserver:8080/geoserver/rest/workspaces/lfmc/layergroups.json",
        "tls": "",
        "x": 530,
        "y": 300,
        "wires": [
            [
                "19e7f493.3ee01b"
            ]
        ]
    },
    {
        "id": "e40b1012.e32e8",
        "type": "function",
        "z": "df36f755.465bf8",
        "name": "",
        "func": "var name = '';\nvar path_to_file = '';\n\n\ncoverageStore = {\n  \"coverageStore\": {\n    \"name\": name,\n    \"url\": path_to_file // \"file:/path/to/file.tiff\"\n  }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 500,
        "y": 434,
        "wires": [
            []
        ]
    },
    {
        "id": "cda4beeb.2e2aa",
        "type": "http request",
        "z": "df36f755.465bf8",
        "name": "GET: Layers",
        "method": "GET",
        "ret": "txt",
        "url": "http://geoserver:8080/geoserver/rest/layers.json",
        "tls": "",
        "x": 510,
        "y": 240,
        "wires": [
            [
                "19e7f493.3ee01b"
            ]
        ]
    },
    {
        "id": "910acd34.60efb",
        "type": "inject",
        "z": "df36f755.465bf8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 200,
        "y": 240,
        "wires": [
            [
                "f257b4ee.574348"
            ]
        ]
    },
    {
        "id": "f257b4ee.574348",
        "type": "function",
        "z": "df36f755.465bf8",
        "name": "",
        "func": "\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 240,
        "wires": [
            [
                "cda4beeb.2e2aa"
            ]
        ]
    },
    {
        "id": "83e945db.13da38",
        "type": "http response",
        "z": "52e16c81.960bb4",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1410,
        "y": 1260,
        "wires": []
    },
    {
        "id": "54b63391.c68c4c",
        "type": "http request",
        "z": "52e16c81.960bb4",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "http://geoserver:8080/geoserver/rest/workspaces/lfmc/layergroups.json",
        "tls": "",
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "54e5c13a.47aa5"
            ]
        ]
    },
    {
        "id": "663fb322.744ffc",
        "type": "http in",
        "z": "52e16c81.960bb4",
        "name": "",
        "url": "/availability",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1280,
        "wires": [
            [
                "54b63391.c68c4c"
            ]
        ]
    },
    {
        "id": "6d64d5de.6e268c",
        "type": "inject",
        "z": "52e16c81.960bb4",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 180,
        "y": 620,
        "wires": [
            [
                "54b63391.c68c4c"
            ]
        ]
    },
    {
        "id": "54e5c13a.47aa5",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "if(msg.payload.layerGroups) {\n    msg.payload = msg.payload.layerGroups.layerGroup;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 1200,
        "wires": [
            [
                "5d42da90.82b564"
            ]
        ]
    },
    {
        "id": "309160b3.cb7f",
        "type": "http request",
        "z": "52e16c81.960bb4",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1270,
        "y": 180,
        "wires": [
            [
                "dfd41d3.5d1c5e"
            ]
        ]
    },
    {
        "id": "7346a900.09c008",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "Extract the data we need",
        "func": "var obj = {};\nvar pay = msg.payload;\n\nif(pay.Domains &&\n    pay.Domains.DimensionDomain &&\n    pay.Domains.DimensionDomain[0]['ows:Identifier'][0] == 'time') {\n    \n    obj.time = pay.Domains.DimensionDomain[0].Domain[0].split(',');\n    obj.space = msg.payload.Domains.SpaceDomain[0].BoundingBox[0]['$'];\n}\n\nmsg.payload = obj;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1630,
        "y": 200,
        "wires": [
            [
                "46fe169.8d2b2e8"
            ]
        ]
    },
    {
        "id": "dfd41d3.5d1c5e",
        "type": "xml",
        "z": "52e16c81.960bb4",
        "name": "",
        "attr": "",
        "chr": "",
        "x": 1410,
        "y": 180,
        "wires": [
            [
                "7346a900.09c008",
                "be4b6da0.f559c"
            ]
        ]
    },
    {
        "id": "9af60de8.aeb44",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "Build WMTS Dimensions Query",
        "func": "layer_name = msg.payload;\nmsg.url = 'http://geoserver:8080/geoserver/gwc/service/wmts?REQUEST=DescribeDomains&Version=1.0.0&Layer=lfmc:'+ layer_name +'&TileMatrixSet=EPSG:4326';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 180,
        "wires": [
            [
                "309160b3.cb7f"
            ]
        ]
    },
    {
        "id": "f089465e.aa9848",
        "type": "http in",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "url": "/parallel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "f468fa9f.5ee938"
            ]
        ]
    },
    {
        "id": "f468fa9f.5ee938",
        "type": "change",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"httpbin\":\"http://httpbin.org/get\",\"anything\":\"http://httpbin.org/anything/get\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 362,
        "y": 139,
        "wires": [
            [
                "e9da59ed.bd2f58"
            ]
        ]
    },
    {
        "id": "e9da59ed.bd2f58",
        "type": "split",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "splt": "\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "4612f594.6e5e7c"
            ]
        ]
    },
    {
        "id": "4612f594.6e5e7c",
        "type": "switch",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "httpbin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "anything",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 661,
        "y": 139,
        "wires": [
            [
                "9a42e467.e561f8"
            ],
            [
                "560aae05.bea08"
            ]
        ]
    },
    {
        "id": "9a42e467.e561f8",
        "type": "http request",
        "z": "d00e8f9b.7ce64",
        "name": "REST Service 1",
        "method": "GET",
        "ret": "obj",
        "url": "{{{payload}}}",
        "tls": "",
        "x": 839,
        "y": 98,
        "wires": [
            [
                "5c393943.966308"
            ]
        ]
    },
    {
        "id": "560aae05.bea08",
        "type": "http request",
        "z": "d00e8f9b.7ce64",
        "name": "REST Service 2",
        "method": "GET",
        "ret": "obj",
        "url": "http://httpbin.org/anything/get",
        "tls": "",
        "x": 839.5,
        "y": 180,
        "wires": [
            [
                "5c393943.966308"
            ]
        ]
    },
    {
        "id": "5c393943.966308",
        "type": "join",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "x": 1021,
        "y": 134,
        "wires": [
            [
                "b8a64f55.c6905"
            ]
        ]
    },
    {
        "id": "b8a64f55.c6905",
        "type": "http response",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1167.5,
        "y": 134,
        "wires": []
    },
    {
        "id": "cc299b79.d88d48",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "single granule",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "name",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "granule",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "layer",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 3,
        "x": 680,
        "y": 80,
        "wires": [
            [
                "6e488c3b.a61324"
            ],
            [
                "872db7e2.0bdf58",
                "48391313.2edb6c"
            ],
            [
                "6e488c3b.a61324"
            ]
        ]
    },
    {
        "id": "41b25b44.699844",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "Each LayerGroup",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 490,
        "y": 940,
        "wires": [
            [
                "cf4a2bc3.d20d28"
            ]
        ]
    },
    {
        "id": "6ff8d184.18092",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "Layers + Names",
        "func": "msg.payload = {'layers': msg.payload, 'name': 'lfmc'};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 240,
        "y": 1080,
        "wires": [
            [
                "4b59587e.24bb28"
            ]
        ]
    },
    {
        "id": "4b59587e.24bb28",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 410,
        "y": 1080,
        "wires": [
            [
                "782c5edb.fe4d5"
            ]
        ]
    },
    {
        "id": "782c5edb.fe4d5",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "Layers",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "layers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "name",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 530,
        "y": 1080,
        "wires": [
            [
                "53c0309.86f18d"
            ],
            [
                "1221b3d6.f55e9c"
            ]
        ]
    },
    {
        "id": "5d42da90.82b564",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "AllLayers + Name",
        "func": "msg.payload = {'all_layers': msg.payload, 'name': 'AllLayers'};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 230,
        "y": 1160,
        "wires": [
            [
                "b8212754.5b3288"
            ]
        ]
    },
    {
        "id": "b8212754.5b3288",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 390,
        "y": 1160,
        "wires": [
            [
                "830a3ce.ad440c"
            ]
        ]
    },
    {
        "id": "830a3ce.ad440c",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "All Layers",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "all_layers",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "name",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 520,
        "y": 1160,
        "wires": [
            [
                "6ff8d184.18092"
            ],
            [
                "82e9f3ac.70ccc"
            ]
        ]
    },
    {
        "id": "82e9f3ac.70ccc",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "Combine AllLayers",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1270,
        "y": 1220,
        "wires": [
            [
                "6f668fa7.f52ae"
            ]
        ]
    },
    {
        "id": "6f668fa7.f52ae",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1530,
        "y": 1220,
        "wires": []
    },
    {
        "id": "1221b3d6.f55e9c",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "Combine Layers + Names",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1290,
        "y": 1140,
        "wires": [
            [
                "82e9f3ac.70ccc"
            ]
        ]
    },
    {
        "id": "be4b6da0.f559c",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 1590,
        "y": 160,
        "wires": []
    },
    {
        "id": "53c0309.86f18d",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.payload = {'layergroups': msg.payload, 'layergroup_name': msg.payload.name}; \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 1000,
        "wires": [
            [
                "a2e1afc1.b6a37"
            ]
        ]
    },
    {
        "id": "cf4a2bc3.d20d28",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "LayerGroup's Layer Metadata",
        "func": "msg.url = msg.payload.href;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 170,
        "y": 880,
        "wires": [
            [
                "cc4fefa3.00171"
            ]
        ]
    },
    {
        "id": "a2e1afc1.b6a37",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 410,
        "y": 1000,
        "wires": [
            [
                "b9fa2669.d5d308"
            ]
        ]
    },
    {
        "id": "b9fa2669.d5d308",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "layergroups",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "layergroup_name",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 530,
        "y": 1000,
        "wires": [
            [
                "41b25b44.699844"
            ],
            [
                "433db664.ec7198"
            ]
        ]
    },
    {
        "id": "433db664.ec7198",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "Combine LayerGroup",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1280,
        "y": 1060,
        "wires": [
            [
                "1445bc65.a22eb4"
            ]
        ]
    },
    {
        "id": "cc4fefa3.00171",
        "type": "http request",
        "z": "52e16c81.960bb4",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 390,
        "y": 880,
        "wires": [
            [
                "593cfe36.f5251"
            ]
        ]
    },
    {
        "id": "593cfe36.f5251",
        "type": "json",
        "z": "52e16c81.960bb4",
        "name": "",
        "pretty": false,
        "x": 530,
        "y": 880,
        "wires": [
            [
                "885b59f2.0405d8"
            ]
        ]
    },
    {
        "id": "2b04b5f9.2c533a",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.topic = 'layergroups';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 1020,
        "wires": [
            [
                "433db664.ec7198"
            ]
        ]
    },
    {
        "id": "1445bc65.a22eb4",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.topic = 'layers'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1260,
        "y": 1102,
        "wires": [
            [
                "1221b3d6.f55e9c"
            ]
        ]
    },
    {
        "id": "c05f56c.17617a8",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2030,
        "y": 140,
        "wires": []
    },
    {
        "id": "f91a1ca3.f791f",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1270,
        "y": 720,
        "wires": [
            [
                "e3fdb8a7.b230e8",
                "18d4de01.a428b2"
            ]
        ]
    },
    {
        "id": "885b59f2.0405d8",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.payload = {\n    'layerGroup': msg.payload.layerGroup,\n    'bounds': msg.payload.layerGroup.bounds\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 720,
        "wires": [
            [
                "7397c958.ea99a8"
            ]
        ]
    },
    {
        "id": "7397c958.ea99a8",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 330,
        "y": 720,
        "wires": [
            [
                "d7e9b5ac.2bb768"
            ]
        ]
    },
    {
        "id": "d7e9b5ac.2bb768",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "LayerGroups",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "layerGroup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "bounds",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 470,
        "y": 720,
        "wires": [
            [
                "e2b2461e.c3aed8",
                "916846b2.499ea8"
            ],
            [
                "f91a1ca3.f791f"
            ]
        ]
    },
    {
        "id": "63a4a023.1e29",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "Single or Multiple?",
        "func": "\nif (msg.payload.publishables.published.name) {\n    msg.payload = {\n        'name': msg.payload.publishables.published.name,\n        'granule': msg.payload.publishables.published.name,\n        'layer': msg.payload.name,\n        'multipart': false\n    };\n    return msg;\n} else if(msg.payload.publishables.published && msg.payload.publishables.published[0]) {\n    var domains = [];\n    var oldpayload = msg.payload;\n    \n    for (var n = 0; n < oldpayload.publishables.published.length; n++) {\n        domains.push({\n            'name': oldpayload.publishables.published[n].name,\n            'granule': oldpayload.publishables.published[n].name\n        });\n    }\n    msg.payload = {\n        'layer': oldpayload.name,\n        'multipart': true,\n        'domains': domains\n    }\n    \n    return msg;\n}",
        "outputs": "1",
        "noerr": 0,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "b69b4bb6.477068",
                "d7db6736.813da8"
            ]
        ],
        "outputLabels": [
            "single"
        ]
    },
    {
        "id": "379396d1.6c3f0a",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 530,
        "y": 80,
        "wires": [
            [
                "cc299b79.d88d48"
            ]
        ]
    },
    {
        "id": "6e488c3b.a61324",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1830,
        "y": 140,
        "wires": [
            [
                "c05f56c.17617a8",
                "349144ad.14d88c"
            ]
        ]
    },
    {
        "id": "e3fdb8a7.b230e8",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 1590,
        "y": 720,
        "wires": []
    },
    {
        "id": "18d4de01.a428b2",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1230,
        "y": 980,
        "wires": [
            [
                "2b04b5f9.2c533a"
            ]
        ]
    },
    {
        "id": "1f65076e.04c9c9",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "b424b387.edcf4",
                "d7e43007.9eec1"
            ]
        ]
    },
    {
        "id": "df28af3.b6b2c5",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "granule domains",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "granule",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "name",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "9af60de8.aeb44",
                "31da7db3.9208c2"
            ],
            [
                "73bb14fc.21c94c",
                "cd6f6fb.6217d9"
            ]
        ]
    },
    {
        "id": "73bb14fc.21c94c",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1830,
        "y": 240,
        "wires": [
            [
                "e45d90a2.5132b",
                "e2e14c1.77513b"
            ]
        ]
    },
    {
        "id": "e45d90a2.5132b",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 2030,
        "y": 240,
        "wires": []
    },
    {
        "id": "89f065d4.dc67f8",
        "type": "http request",
        "z": "52e16c81.960bb4",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 1270,
        "y": 80,
        "wires": [
            [
                "50f841ee.5b5d5"
            ]
        ]
    },
    {
        "id": "d1b7c14c.5664d",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "Extract the data we need",
        "func": "var obj = {};\nvar pay = msg.payload;\n\nif(pay.Domains &&\n    pay.Domains.DimensionDomain &&\n    pay.Domains.DimensionDomain[0]['ows:Identifier'][0] == 'time') {\n    \n    obj.time = pay.Domains.DimensionDomain[0].Domain[0].split(',');\n    obj.space = msg.payload.Domains.SpaceDomain[0].BoundingBox[0]['$'];\n    msg.payload = obj;\n    return msg;\n}\nreturn;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 1630,
        "y": 100,
        "wires": [
            [
                "beaf357e.34ebc8"
            ]
        ]
    },
    {
        "id": "50f841ee.5b5d5",
        "type": "xml",
        "z": "52e16c81.960bb4",
        "name": "",
        "attr": "",
        "chr": "",
        "x": 1410,
        "y": 80,
        "wires": [
            [
                "d1b7c14c.5664d",
                "526007a6.40ef08"
            ]
        ]
    },
    {
        "id": "872db7e2.0bdf58",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "Build WMTS Dimensions Query",
        "func": "layer_name = msg.payload;\nmsg.url = 'http://geoserver:8080/geoserver/gwc/service/wmts?REQUEST=DescribeDomains&Version=1.0.0&Layer=lfmc:'+ layer_name +'&TileMatrixSet=EPSG:4326';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1030,
        "y": 80,
        "wires": [
            [
                "89f065d4.dc67f8"
            ]
        ]
    },
    {
        "id": "526007a6.40ef08",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1590,
        "y": 60,
        "wires": []
    },
    {
        "id": "beaf357e.34ebc8",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.topic = 'granule';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 100,
        "wires": [
            [
                "6e488c3b.a61324",
                "dd2652bc.12dc6"
            ]
        ]
    },
    {
        "id": "7e48984f.6fa3e8",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 1590,
        "y": 580,
        "wires": []
    },
    {
        "id": "dca10516.326828",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 330,
        "y": 560,
        "wires": [
            [
                "e00d4fd5.e88c2"
            ]
        ]
    },
    {
        "id": "1034f4a2.e1be1b",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1270,
        "y": 580,
        "wires": [
            [
                "7e48984f.6fa3e8",
                "f91a1ca3.f791f"
            ]
        ]
    },
    {
        "id": "e2b2461e.c3aed8",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.payload = {\n    'granules': {\n        'publishables': msg.payload.publishables,\n        'name': msg.payload.name,\n    },\n    'meta': {\n        'mode': msg.payload.mode,\n        'workspace': msg.payload.workspace,\n        'styles': msg.payload.styles,\n        'bounds': msg.payload.bounds,\n        'attribution': msg.payload.attribution\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 660,
        "wires": [
            [
                "dca10516.326828",
                "234166f7.8278fa"
            ]
        ]
    },
    {
        "id": "916846b2.499ea8",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 830,
        "y": 760,
        "wires": []
    },
    {
        "id": "234166f7.8278fa",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 830,
        "y": 660,
        "wires": []
    },
    {
        "id": "e00d4fd5.e88c2",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "LayerGroup",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "granules",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "meta",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "618b5716.c0cb48",
                "63a4a023.1e29"
            ],
            [
                "1034f4a2.e1be1b"
            ]
        ]
    },
    {
        "id": "618b5716.c0cb48",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 830,
        "y": 540,
        "wires": []
    },
    {
        "id": "349144ad.14d88c",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.topic = 'granules';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1270,
        "y": 520,
        "wires": [
            [
                "1034f4a2.e1be1b"
            ]
        ]
    },
    {
        "id": "b69b4bb6.477068",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "",
        "property": "payload.multipart",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "379396d1.6c3f0a"
            ],
            [
                "50aadba5.3f6fb4",
                "cde5c32b.08a8d"
            ]
        ]
    },
    {
        "id": "e3c21eaf.3deca",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 2030,
        "y": 400,
        "wires": []
    },
    {
        "id": "f2c5da76.025038",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1830,
        "y": 400,
        "wires": [
            [
                "349144ad.14d88c",
                "e3c21eaf.3deca"
            ]
        ]
    },
    {
        "id": "46fe169.8d2b2e8",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.topic = 'granule';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 200,
        "wires": [
            [
                "73bb14fc.21c94c",
                "a4f6d34d.a863f"
            ]
        ]
    },
    {
        "id": "a4f6d34d.a863f",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 2030,
        "y": 200,
        "wires": []
    },
    {
        "id": "50aadba5.3f6fb4",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 310,
        "y": 260,
        "wires": [
            [
                "b2cac434.a82e28"
            ]
        ]
    },
    {
        "id": "b2cac434.a82e28",
        "type": "switch",
        "z": "52e16c81.960bb4",
        "name": "multi granule",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "domains",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "layer",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 450,
        "y": 260,
        "wires": [
            [
                "1f65076e.04c9c9",
                "4dafd131.340d"
            ],
            [
                "f2c5da76.025038"
            ]
        ]
    },
    {
        "id": "d7db6736.813da8",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 830,
        "y": 460,
        "wires": []
    },
    {
        "id": "4dafd131.340d",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 650,
        "y": 300,
        "wires": []
    },
    {
        "id": "cde5c32b.08a8d",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 170,
        "y": 320,
        "wires": []
    },
    {
        "id": "31da7db3.9208c2",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 990,
        "y": 140,
        "wires": []
    },
    {
        "id": "cd6f6fb.6217d9",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "true",
        "x": 990,
        "y": 240,
        "wires": []
    },
    {
        "id": "b424b387.edcf4",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 650,
        "y": 260,
        "wires": []
    },
    {
        "id": "d7e43007.9eec1",
        "type": "split",
        "z": "52e16c81.960bb4",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 470,
        "y": 180,
        "wires": [
            [
                "df28af3.b6b2c5",
                "1330becd.52cd11"
            ]
        ]
    },
    {
        "id": "1330becd.52cd11",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "e2e14c1.77513b",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.topic = 'domains';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 280,
        "wires": [
            [
                "242622a.adcfade"
            ]
        ]
    },
    {
        "id": "3adfd272.ae6dae",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": false,
        "console": "false",
        "complete": "payload",
        "x": 2030,
        "y": 320,
        "wires": []
    },
    {
        "id": "242622a.adcfade",
        "type": "join",
        "z": "52e16c81.960bb4",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "x": 1833,
        "y": 320,
        "wires": [
            [
                "3adfd272.ae6dae",
                "a08ed3.5be2513"
            ]
        ]
    },
    {
        "id": "48391313.2edb6c",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "payload",
        "x": 970,
        "y": 20,
        "wires": []
    },
    {
        "id": "dd2652bc.12dc6",
        "type": "debug",
        "z": "52e16c81.960bb4",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 2030,
        "y": 100,
        "wires": []
    },
    {
        "id": "a08ed3.5be2513",
        "type": "function",
        "z": "52e16c81.960bb4",
        "name": "",
        "func": "msg.topic = 'domains';\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 360,
        "wires": [
            [
                "f2c5da76.025038"
            ]
        ]
    }
]