[
    {
        "id": "f51feb57.6cd738",
        "type": "tab",
        "label": "BoM Scraper",
        "disabled": false,
        "info": ""
    },
    {
        "id": "18ce424.75127be",
        "type": "tab",
        "label": "File Upload Examples",
        "disabled": false,
        "info": ""
    },
    {
        "id": "59601007.fe581",
        "type": "tab",
        "label": "Error Reporting API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ee6c3ad0.573538",
        "type": "tab",
        "label": "AWRA-L",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1c278495.e2b9eb",
        "type": "tab",
        "label": "JASMIN",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3ead8668.6bfe7a",
        "type": "tab",
        "label": "Yebra",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4fa05f41.e5ec6",
        "type": "tab",
        "label": "Temporal Data Availability",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d00e8f9b.7ce64",
        "type": "tab",
        "label": "Example Parallel",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1b36fe01.5f7492",
        "type": "tab",
        "label": "Query Monitor",
        "disabled": false,
        "info": ""
    },
    {
        "id": "671e12d5.6bd4fc",
        "type": "mongodb2",
        "z": "",
        "uri": "mongodb://nosql:27017/",
        "name": "",
        "options": "",
        "parallelism": "-1"
    },
    {
        "id": "9e4c7c6a.4728a",
        "type": "ftp",
        "z": "",
        "host": "ftp.bom.gov.au",
        "port": "",
        "secureOptions": "",
        "user": "anonymous",
        "connTimeout": "",
        "pasvTimeout": "",
        "keepalive": ""
    },
    {
        "id": "5eb4cf6e.eb139",
        "type": "ftp-download-server",
        "z": "",
        "host": "ftp.bom.gov.au",
        "port": "21",
        "user": "anonymous",
        "connTimeout": "10000",
        "pasvTimeout": "10000",
        "keepalive": "10000",
        "name": ""
    },
    {
        "id": "78ac3a84.edb3d4",
        "type": "redis-config",
        "z": "",
        "host": "{{REDIS_HOST}}",
        "port": "{{REDIS_PORT}}",
        "dbase": "{{REDIS_DB}}",
        "pass": "{{REDIS_PASSWORD}}"
    },
    {
        "id": "5f2dd4b6.73f8ec",
        "type": "websocket-client",
        "z": "",
        "path": "ws://flower:5555/api/task/events/task-succeeded/",
        "tls": "",
        "wholemsg": "false"
    },
    {
        "id": "c6396aca.851408",
        "type": "websocket-listener",
        "z": "",
        "path": "/ws/completed",
        "wholemsg": "false"
    },
    {
        "id": "dd8c14dd.ac8808",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "7badd851.9e4b38"
            ]
        ]
    },
    {
        "id": "1188b08f.0b673f",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1150,
        "y": 180,
        "wires": []
    },
    {
        "id": "f6d491d8.1c757",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "730AM",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "30 7 * * *",
        "once": false,
        "x": 100,
        "y": 260,
        "wires": [
            [
                "7badd851.9e4b38",
                "f1d1df7a.e3cf8"
            ]
        ]
    },
    {
        "id": "7badd851.9e4b38",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.filename = \"register/bom023/rKCm6dbQ/adfd\";\n\nvar today = new Date();\nvar dd = today.getDate().toString();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear().toString();\nvar h = today.getHours();\nvar m = today.getMinutes();\nvar meridian = '';\n\nif(h < 12 || (h==12 && m===0)) {\n    meridian ='AM';\n}\nif(h > 12) {\n    meridian = 'PM';\n}\n\nif(dd<10) {\n    dd = '0'+dd;\n}\n\nif(mm<10) {\n    mm = '0'+mm;\n} \n\nmsg.today = ''+ yyyy + mm + dd + meridian;\n\nmsg.directory = \"/mnt/data_dir/\" + msg.today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 240,
        "wires": [
            [
                "12181318.ab80cd",
                "a6dab755.a28928",
                "4d422dd1.ab4934"
            ]
        ]
    },
    {
        "id": "ca7dca3a.8f90d8",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.filename = \"register/bom023/rKCm6dbQ/fwo\";\n\nvar today = new Date();\nvar dd = today.getDate().toString();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear().toString();\nvar h = today.getHours();\nvar m = today.getMinutes();\nvar meridian = '';\n\nif(h < 12 || (h==12 && m===0)) {\n    meridian ='AM';\n}\nif(h > 12) {\n    meridian = 'PM';\n}\n\nif(dd<10) {\n    dd = '0'+dd;\n}\n\nif(mm<10) {\n    mm = '0'+mm;\n} \n\nmsg.today = ''+ yyyy + mm + dd + meridian;\n\nmsg.directory = \"/mnt/data_dir/\" + msg.today + \"/fwo\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "a6dab755.a28928",
                "52b38727.b3db88"
            ]
        ]
    },
    {
        "id": "81b11c2b.2e155",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 740,
        "y": 240,
        "wires": [
            [
                "e18b8be0.048448",
                "9d24ea12.277e58"
            ]
        ]
    },
    {
        "id": "66fde08e.33dc3",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "list",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 740,
        "y": 280,
        "wires": [
            [
                "62c6943e.03631c",
                "f208aea5.fd5ca"
            ]
        ]
    },
    {
        "id": "e18b8be0.048448",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "Filter for ADFD",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload.filter(function(item) {\nreturn (\n    item.hasOwnProperty(\"name\") &&\n    ((item.name).includes('IDV')  // Victoria <-- Only Data we have access to with DELWP\n    //  (item.name).includes('IDN') || // NSW/ACT\n    //  (item.name).includes('IDQ') || // Queensland\n    //  (item.name).includes('IDT') || // Tasmania\n    //  (item.name).includes('IDW') || // Western Australia\n    //  (item.name).includes('IDS') || // South Australia\n    //  (item.name).includes('IDD')    // Northern Territory\n    )\n    );\n});\n\nmsg.path = msg.filename;\n\nmsg.filename = object_shortlist.map(function(item) {\n    return msg.path +\"/\"+ item.name;    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 940,
        "y": 240,
        "wires": [
            [
                "1188b08f.0b673f",
                "9e17c995.b07e38"
            ]
        ]
    },
    {
        "id": "1e7b8b8d.634644",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1150,
        "y": 340,
        "wires": []
    },
    {
        "id": "4a74af17.e76e8",
        "type": "ftp in",
        "z": "f51feb57.6cd738",
        "ftp": "9e4c7c6a.4728a",
        "operation": "get",
        "filename": "",
        "localFilename": "",
        "name": "Anon User FTP",
        "x": 500,
        "y": 100,
        "wires": [
            [
                "d301daa2.c46688"
            ]
        ]
    },
    {
        "id": "d301daa2.c46688",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "RESPONSE",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 690,
        "y": 100,
        "wires": []
    },
    {
        "id": "fe75511.5c383b",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "RUN TEST",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 140,
        "y": 100,
        "wires": [
            [
                "5ed63f30.b2eef"
            ]
        ]
    },
    {
        "id": "5ed63f30.b2eef",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "TEST CASE",
        "func": "msg.filename=\"register/bom023/rKCm6dbQ/adfd/IDV71199_VIC_WindMagKmh_1000mAMSL.nc.gz\";\nmsg.localFilename = \"/tmp/IDV71199_VIC_WindMagKmh_1000mAMSL.nc.gz\";\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 310,
        "y": 100,
        "wires": [
            [
                "4a74af17.e76e8"
            ]
        ]
    },
    {
        "id": "9c2cacb8.9f915",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1910,
        "y": 240,
        "wires": []
    },
    {
        "id": "62c6943e.03631c",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "Filter for ALL",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload.filter(function(item) {\n    return (item.hasOwnProperty(\"name\"));\n});\n\nmsg.path = msg.filename;\n\nmsg.filename = object_shortlist.map(function(item) {\n    return msg.path + \"/\" + item.name;    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 280,
        "wires": [
            [
                "1e7b8b8d.634644",
                "bc51a0b1.9b47c"
            ]
        ]
    },
    {
        "id": "fe79e290.ffc2f",
        "type": "http in",
        "z": "18ce424.75127be",
        "name": "",
        "url": "/upload",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 120,
        "wires": [
            [
                "1621daf0.c430d5"
            ]
        ]
    },
    {
        "id": "1621daf0.c430d5",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<h1>Upload a file here:</h1>\n\n<form action=\"/uploadsimple_post\" method=\"POST\" enctype=\"multipart/form-data\">\n    <input type=\"file\" name=\"myFile\" />\n    <input type=\"submit\" value=\"Submit\">\n</form>",
        "output": "str",
        "x": 330,
        "y": 120,
        "wires": [
            [
                "5d282090.78895"
            ]
        ]
    },
    {
        "id": "5d282090.78895",
        "type": "http response",
        "z": "18ce424.75127be",
        "name": "",
        "x": 490,
        "y": 120,
        "wires": []
    },
    {
        "id": "74ea179c.2124b8",
        "type": "http response",
        "z": "18ce424.75127be",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 890,
        "y": 240,
        "wires": []
    },
    {
        "id": "837451.f675abb",
        "type": "debug",
        "z": "18ce424.75127be",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "req.files",
        "x": 410,
        "y": 180,
        "wires": []
    },
    {
        "id": "cc252981.12b488",
        "type": "comment",
        "z": "18ce424.75127be",
        "name": "Simple file upload example",
        "info": "http://localhost:1880/upload",
        "x": 190,
        "y": 80,
        "wires": []
    },
    {
        "id": "10a3bc97.4dcfe3",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<p>File {{originalname}} uploaded !</p>\n\n<h2>Contents:</h2>\n\n<pre>\n{{{payload}}}\n</pre>",
        "output": "str",
        "x": 730,
        "y": 240,
        "wires": [
            [
                "74ea179c.2124b8"
            ]
        ]
    },
    {
        "id": "a1cc4957.482b68",
        "type": "function",
        "z": "18ce424.75127be",
        "name": "",
        "func": "if (msg.req.files[0].mimetype.includes('image')) {\n    msg.payload = `<img src=\"data:image/gif;base64,${msg.payload.toString('base64')}\">`;\n} else {\n    msg.payload = msg.payload.toString();\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 590,
        "y": 240,
        "wires": [
            [
                "10a3bc97.4dcfe3"
            ]
        ]
    },
    {
        "id": "f1d5cec2.e677",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "dropzone.js",
        "field": "dropzonejs",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "\n/*\n *\n * More info at [www.dropzonejs.com](http://www.dropzonejs.com)\n *\n * Copyright (c) 2012, Matias Meno\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n */\n\n(function() {\n  var Dropzone, Emitter, camelize, contentLoaded, detectVerticalSquash, drawImageIOSFix, noop, without,\n    __slice = [].slice,\n    __hasProp = {}.hasOwnProperty,\n    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };\n\n  noop = function() {};\n\n  Emitter = (function() {\n    function Emitter() {}\n\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n\n    Emitter.prototype.on = function(event, fn) {\n      this._callbacks = this._callbacks || {};\n      if (!this._callbacks[event]) {\n        this._callbacks[event] = [];\n      }\n      this._callbacks[event].push(fn);\n      return this;\n    };\n\n    Emitter.prototype.emit = function() {\n      var args, callback, callbacks, event, _i, _len;\n      event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      this._callbacks = this._callbacks || {};\n      callbacks = this._callbacks[event];\n      if (callbacks) {\n        for (_i = 0, _len = callbacks.length; _i < _len; _i++) {\n          callback = callbacks[_i];\n          callback.apply(this, args);\n        }\n      }\n      return this;\n    };\n\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n\n    Emitter.prototype.off = function(event, fn) {\n      var callback, callbacks, i, _i, _len;\n      if (!this._callbacks || arguments.length === 0) {\n        this._callbacks = {};\n        return this;\n      }\n      callbacks = this._callbacks[event];\n      if (!callbacks) {\n        return this;\n      }\n      if (arguments.length === 1) {\n        delete this._callbacks[event];\n        return this;\n      }\n      for (i = _i = 0, _len = callbacks.length; _i < _len; i = ++_i) {\n        callback = callbacks[i];\n        if (callback === fn) {\n          callbacks.splice(i, 1);\n          break;\n        }\n      }\n      return this;\n    };\n\n    return Emitter;\n\n  })();\n\n  Dropzone = (function(_super) {\n    var extend, resolveOption;\n\n    __extends(Dropzone, _super);\n\n    Dropzone.prototype.Emitter = Emitter;\n\n\n    /*\n    This is a list of all available events you can register on a dropzone object.\n    \n    You can register an event handler like this:\n    \n        dropzone.on(\"dragEnter\", function() { });\n     */\n\n    Dropzone.prototype.events = [\"drop\", \"dragstart\", \"dragend\", \"dragenter\", \"dragover\", \"dragleave\", \"addedfile\", \"addedfiles\", \"removedfile\", \"thumbnail\", \"error\", \"errormultiple\", \"processing\", \"processingmultiple\", \"uploadprogress\", \"totaluploadprogress\", \"sending\", \"sendingmultiple\", \"success\", \"successmultiple\", \"canceled\", \"canceledmultiple\", \"complete\", \"completemultiple\", \"reset\", \"maxfilesexceeded\", \"maxfilesreached\", \"queuecomplete\"];\n\n    Dropzone.prototype.defaultOptions = {\n      url: null,\n      method: \"post\",\n      withCredentials: false,\n      parallelUploads: 2,\n      uploadMultiple: false,\n      maxFilesize: 256,\n      paramName: \"file\",\n      createImageThumbnails: true,\n      maxThumbnailFilesize: 10,\n      thumbnailWidth: 120,\n      thumbnailHeight: 120,\n      filesizeBase: 1000,\n      maxFiles: null,\n      params: {},\n      clickable: true,\n      ignoreHiddenFiles: true,\n      acceptedFiles: null,\n      acceptedMimeTypes: null,\n      autoProcessQueue: true,\n      autoQueue: true,\n      addRemoveLinks: false,\n      previewsContainer: null,\n      hiddenInputContainer: \"body\",\n      capture: null,\n      renameFilename: null,\n      dictDefaultMessage: \"Drop files here to upload\",\n      dictFallbackMessage: \"Your browser does not support drag'n'drop file uploads.\",\n      dictFallbackText: \"Please use the fallback form below to upload your files like in the olden days.\",\n      dictFileTooBig: \"File is too big ({{filesize}}MiB). Max filesize: {{maxFilesize}}MiB.\",\n      dictInvalidFileType: \"You can't upload files of this type.\",\n      dictResponseError: \"Server responded with {{statusCode}} code.\",\n      dictCancelUpload: \"Cancel upload\",\n      dictCancelUploadConfirmation: \"Are you sure you want to cancel this upload?\",\n      dictRemoveFile: \"Remove file\",\n      dictRemoveFileConfirmation: null,\n      dictMaxFilesExceeded: \"You can not upload any more files.\",\n      accept: function(file, done) {\n        return done();\n      },\n      init: function() {\n        return noop;\n      },\n      forceFallback: false,\n      fallback: function() {\n        var child, messageElement, span, _i, _len, _ref;\n        this.element.className = \"\" + this.element.className + \" dz-browser-not-supported\";\n        _ref = this.element.getElementsByTagName(\"div\");\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          child = _ref[_i];\n          if (/(^| )dz-message($| )/.test(child.className)) {\n            messageElement = child;\n            child.className = \"dz-message\";\n            continue;\n          }\n        }\n        if (!messageElement) {\n          messageElement = Dropzone.createElement(\"<div class=\\\"dz-message\\\"><span></span></div>\");\n          this.element.appendChild(messageElement);\n        }\n        span = messageElement.getElementsByTagName(\"span\")[0];\n        if (span) {\n          if (span.textContent !== null) {\n            span.textContent = this.options.dictFallbackMessage;\n          } else if (span.innerText !== null) {\n            span.innerText = this.options.dictFallbackMessage;\n          }\n        }\n        return this.element.appendChild(this.getFallbackForm());\n      },\n      resize: function(file) {\n        var info, srcRatio, trgRatio;\n        info = {\n          srcX: 0,\n          srcY: 0,\n          srcWidth: file.width,\n          srcHeight: file.height\n        };\n        srcRatio = file.width / file.height;\n        info.optWidth = this.options.thumbnailWidth;\n        info.optHeight = this.options.thumbnailHeight;\n        if ((info.optWidth === null) && (info.optHeight === null)) {\n          info.optWidth = info.srcWidth;\n          info.optHeight = info.srcHeight;\n        } else if (info.optWidth === null) {\n          info.optWidth = srcRatio * info.optHeight;\n        } else if (info.optHeight === null) {\n          info.optHeight = (1 / srcRatio) * info.optWidth;\n        }\n        trgRatio = info.optWidth / info.optHeight;\n        if (file.height < info.optHeight || file.width < info.optWidth) {\n          info.trgHeight = info.srcHeight;\n          info.trgWidth = info.srcWidth;\n        } else {\n          if (srcRatio > trgRatio) {\n            info.srcHeight = file.height;\n            info.srcWidth = info.srcHeight * trgRatio;\n          } else {\n            info.srcWidth = file.width;\n            info.srcHeight = info.srcWidth / trgRatio;\n          }\n        }\n        info.srcX = (file.width - info.srcWidth) / 2;\n        info.srcY = (file.height - info.srcHeight) / 2;\n        return info;\n      },\n\n      /*\n      Those functions register themselves to the events on init and handle all\n      the user interface specific stuff. Overwriting them won't break the upload\n      but can break the way it's displayed.\n      You can overwrite them if you don't like the default behavior. If you just\n      want to add an additional event handler, register it on the dropzone object\n      and don't overwrite those options.\n       */\n      drop: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragstart: noop,\n      dragend: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      dragenter: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragover: function(e) {\n        return this.element.classList.add(\"dz-drag-hover\");\n      },\n      dragleave: function(e) {\n        return this.element.classList.remove(\"dz-drag-hover\");\n      },\n      paste: noop,\n      reset: function() {\n        return this.element.classList.remove(\"dz-started\");\n      },\n      addedfile: function(file) {\n        var node, removeFileEvent, removeLink, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _results;\n        if (this.element === this.previewsContainer) {\n          this.element.classList.add(\"dz-started\");\n        }\n        if (this.previewsContainer) {\n          file.previewElement = Dropzone.createElement(this.options.previewTemplate.trim());\n          file.previewTemplate = file.previewElement;\n          this.previewsContainer.appendChild(file.previewElement);\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-name]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            node.textContent = this._renameFilename(file.name);\n          }\n          _ref1 = file.previewElement.querySelectorAll(\"[data-dz-size]\");\n          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {\n            node = _ref1[_j];\n            node.innerHTML = this.filesize(file.size);\n          }\n          if (this.options.addRemoveLinks) {\n            file._removeLink = Dropzone.createElement(\"<a class=\\\"dz-remove\\\" href=\\\"javascript:undefined;\\\" data-dz-remove>\" + this.options.dictRemoveFile + \"</a>\");\n            file.previewElement.appendChild(file._removeLink);\n          }\n          removeFileEvent = (function(_this) {\n            return function(e) {\n              e.preventDefault();\n              e.stopPropagation();\n              if (file.status === Dropzone.UPLOADING) {\n                return Dropzone.confirm(_this.options.dictCancelUploadConfirmation, function() {\n                  return _this.removeFile(file);\n                });\n              } else {\n                if (_this.options.dictRemoveFileConfirmation) {\n                  return Dropzone.confirm(_this.options.dictRemoveFileConfirmation, function() {\n                    return _this.removeFile(file);\n                  });\n                } else {\n                  return _this.removeFile(file);\n                }\n              }\n            };\n          })(this);\n          _ref2 = file.previewElement.querySelectorAll(\"[data-dz-remove]\");\n          _results = [];\n          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n            removeLink = _ref2[_k];\n            _results.push(removeLink.addEventListener(\"click\", removeFileEvent));\n          }\n          return _results;\n        }\n      },\n      removedfile: function(file) {\n        var _ref;\n        if (file.previewElement) {\n          if ((_ref = file.previewElement) != null) {\n            _ref.parentNode.removeChild(file.previewElement);\n          }\n        }\n        return this._updateMaxFilesReachedClass();\n      },\n      thumbnail: function(file, dataUrl) {\n        var thumbnailElement, _i, _len, _ref;\n        if (file.previewElement) {\n          file.previewElement.classList.remove(\"dz-file-preview\");\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-thumbnail]\");\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            thumbnailElement = _ref[_i];\n            thumbnailElement.alt = file.name;\n            thumbnailElement.src = dataUrl;\n          }\n          return setTimeout(((function(_this) {\n            return function() {\n              return file.previewElement.classList.add(\"dz-image-preview\");\n            };\n          })(this)), 1);\n        }\n      },\n      error: function(file, message) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-error\");\n          if (typeof message !== \"String\" && message.error) {\n            message = message.error;\n          }\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-errormessage]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            _results.push(node.textContent = message);\n          }\n          return _results;\n        }\n      },\n      errormultiple: noop,\n      processing: function(file) {\n        if (file.previewElement) {\n          file.previewElement.classList.add(\"dz-processing\");\n          if (file._removeLink) {\n            return file._removeLink.textContent = this.options.dictCancelUpload;\n          }\n        }\n      },\n      processingmultiple: noop,\n      uploadprogress: function(file, progress, bytesSent) {\n        var node, _i, _len, _ref, _results;\n        if (file.previewElement) {\n          _ref = file.previewElement.querySelectorAll(\"[data-dz-uploadprogress]\");\n          _results = [];\n          for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n            node = _ref[_i];\n            if (node.nodeName === 'PROGRESS') {\n              _results.push(node.value = progress);\n            } else {\n              _results.push(node.style.width = \"\" + progress + \"%\");\n            }\n          }\n          return _results;\n        }\n      },\n      totaluploadprogress: noop,\n      sending: noop,\n      sendingmultiple: noop,\n      success: function(file) {\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-success\");\n        }\n      },\n      successmultiple: noop,\n      canceled: function(file) {\n        return this.emit(\"error\", file, \"Upload canceled.\");\n      },\n      canceledmultiple: noop,\n      complete: function(file) {\n        if (file._removeLink) {\n          file._removeLink.textContent = this.options.dictRemoveFile;\n        }\n        if (file.previewElement) {\n          return file.previewElement.classList.add(\"dz-complete\");\n        }\n      },\n      completemultiple: noop,\n      maxfilesexceeded: noop,\n      maxfilesreached: noop,\n      queuecomplete: noop,\n      addedfiles: noop,\n      previewTemplate: \"<div class=\\\"dz-preview dz-file-preview\\\">\\n  <div class=\\\"dz-image\\\"><img data-dz-thumbnail /></div>\\n  <div class=\\\"dz-details\\\">\\n    <div class=\\\"dz-size\\\"><span data-dz-size></span></div>\\n    <div class=\\\"dz-filename\\\"><span data-dz-name></span></div>\\n  </div>\\n  <div class=\\\"dz-progress\\\"><span class=\\\"dz-upload\\\" data-dz-uploadprogress></span></div>\\n  <div class=\\\"dz-error-message\\\"><span data-dz-errormessage></span></div>\\n  <div class=\\\"dz-success-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Check</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <path d=\\\"M23.5,31.8431458 L17.5852419,25.9283877 C16.0248253,24.3679711 13.4910294,24.366835 11.9289322,25.9289322 C10.3700136,27.4878508 10.3665912,30.0234455 11.9283877,31.5852419 L20.4147581,40.0716123 C20.5133999,40.1702541 20.6159315,40.2626649 20.7218615,40.3488435 C22.2835669,41.8725651 24.794234,41.8626202 26.3461564,40.3106978 L43.3106978,23.3461564 C44.8771021,21.7797521 44.8758057,19.2483887 43.3137085,17.6862915 C41.7547899,16.1273729 39.2176035,16.1255422 37.6538436,17.6893022 L23.5,31.8431458 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" stroke-opacity=\\\"0.198794158\\\" stroke=\\\"#747474\\\" fill-opacity=\\\"0.816519475\\\" fill=\\\"#FFFFFF\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n      </g>\\n    </svg>\\n  </div>\\n  <div class=\\\"dz-error-mark\\\">\\n    <svg width=\\\"54px\\\" height=\\\"54px\\\" viewBox=\\\"0 0 54 54\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" xmlns:sketch=\\\"http://www.bohemiancoding.com/sketch/ns\\\">\\n      <title>Error</title>\\n      <defs></defs>\\n      <g id=\\\"Page-1\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\" sketch:type=\\\"MSPage\\\">\\n        <g id=\\\"Check-+-Oval-2\\\" sketch:type=\\\"MSLayerGroup\\\" stroke=\\\"#747474\\\" stroke-opacity=\\\"0.198794158\\\" fill=\\\"#FFFFFF\\\" fill-opacity=\\\"0.816519475\\\">\\n          <path d=\\\"M32.6568542,29 L38.3106978,23.3461564 C39.8771021,21.7797521 39.8758057,19.2483887 38.3137085,17.6862915 C36.7547899,16.1273729 34.2176035,16.1255422 32.6538436,17.6893022 L27,23.3431458 L21.3461564,17.6893022 C19.7823965,16.1255422 17.2452101,16.1273729 15.6862915,17.6862915 C14.1241943,19.2483887 14.1228979,21.7797521 15.6893022,23.3461564 L21.3431458,29 L15.6893022,34.6538436 C14.1228979,36.2202479 14.1241943,38.7516113 15.6862915,40.3137085 C17.2452101,41.8726271 19.7823965,41.8744578 21.3461564,40.3106978 L27,34.6568542 L32.6538436,40.3106978 C34.2176035,41.8744578 36.7547899,41.8726271 38.3137085,40.3137085 C39.8758057,38.7516113 39.8771021,36.2202479 38.3106978,34.6538436 L32.6568542,29 Z M27,53 C41.3594035,53 53,41.3594035 53,27 C53,12.6405965 41.3594035,1 27,1 C12.6405965,1 1,12.6405965 1,27 C1,41.3594035 12.6405965,53 27,53 Z\\\" id=\\\"Oval-2\\\" sketch:type=\\\"MSShapeGroup\\\"></path>\\n        </g>\\n      </g>\\n    </svg>\\n  </div>\\n</div>\"\n    };\n\n    extend = function() {\n      var key, object, objects, target, val, _i, _len;\n      target = arguments[0], objects = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      for (_i = 0, _len = objects.length; _i < _len; _i++) {\n        object = objects[_i];\n        for (key in object) {\n          val = object[key];\n          target[key] = val;\n        }\n      }\n      return target;\n    };\n\n    function Dropzone(element, options) {\n      var elementOptions, fallback, _ref;\n      this.element = element;\n      this.version = Dropzone.version;\n      this.defaultOptions.previewTemplate = this.defaultOptions.previewTemplate.replace(/\\n*/g, \"\");\n      this.clickableElements = [];\n      this.listeners = [];\n      this.files = [];\n      if (typeof this.element === \"string\") {\n        this.element = document.querySelector(this.element);\n      }\n      if (!(this.element && (this.element.nodeType != null))) {\n        throw new Error(\"Invalid dropzone element.\");\n      }\n      if (this.element.dropzone) {\n        throw new Error(\"Dropzone already attached.\");\n      }\n      Dropzone.instances.push(this);\n      this.element.dropzone = this;\n      elementOptions = (_ref = Dropzone.optionsForElement(this.element)) != null ? _ref : {};\n      this.options = extend({}, this.defaultOptions, elementOptions, options != null ? options : {});\n      if (this.options.forceFallback || !Dropzone.isBrowserSupported()) {\n        return this.options.fallback.call(this);\n      }\n      if (this.options.url == null) {\n        this.options.url = this.element.getAttribute(\"action\");\n      }\n      if (!this.options.url) {\n        throw new Error(\"No URL provided.\");\n      }\n      if (this.options.acceptedFiles && this.options.acceptedMimeTypes) {\n        throw new Error(\"You can't provide both 'acceptedFiles' and 'acceptedMimeTypes'. 'acceptedMimeTypes' is deprecated.\");\n      }\n      if (this.options.acceptedMimeTypes) {\n        this.options.acceptedFiles = this.options.acceptedMimeTypes;\n        delete this.options.acceptedMimeTypes;\n      }\n      this.options.method = this.options.method.toUpperCase();\n      if ((fallback = this.getExistingFallback()) && fallback.parentNode) {\n        fallback.parentNode.removeChild(fallback);\n      }\n      if (this.options.previewsContainer !== false) {\n        if (this.options.previewsContainer) {\n          this.previewsContainer = Dropzone.getElement(this.options.previewsContainer, \"previewsContainer\");\n        } else {\n          this.previewsContainer = this.element;\n        }\n      }\n      if (this.options.clickable) {\n        if (this.options.clickable === true) {\n          this.clickableElements = [this.element];\n        } else {\n          this.clickableElements = Dropzone.getElements(this.options.clickable, \"clickable\");\n        }\n      }\n      this.init();\n    }\n\n    Dropzone.prototype.getAcceptedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getRejectedFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (!file.accepted) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getFilesWithStatus = function(status) {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === status) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.getQueuedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.QUEUED);\n    };\n\n    Dropzone.prototype.getUploadingFiles = function() {\n      return this.getFilesWithStatus(Dropzone.UPLOADING);\n    };\n\n    Dropzone.prototype.getAddedFiles = function() {\n      return this.getFilesWithStatus(Dropzone.ADDED);\n    };\n\n    Dropzone.prototype.getActiveFiles = function() {\n      var file, _i, _len, _ref, _results;\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status === Dropzone.UPLOADING || file.status === Dropzone.QUEUED) {\n          _results.push(file);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.init = function() {\n      var eventName, noPropagation, setupHiddenFileInput, _i, _len, _ref, _ref1;\n      if (this.element.tagName === \"form\") {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n      }\n      if (this.element.classList.contains(\"dropzone\") && !this.element.querySelector(\".dz-message\")) {\n        this.element.appendChild(Dropzone.createElement(\"<div class=\\\"dz-default dz-message\\\"><span>\" + this.options.dictDefaultMessage + \"</span></div>\"));\n      }\n      if (this.clickableElements.length) {\n        setupHiddenFileInput = (function(_this) {\n          return function() {\n            if (_this.hiddenFileInput) {\n              _this.hiddenFileInput.parentNode.removeChild(_this.hiddenFileInput);\n            }\n            _this.hiddenFileInput = document.createElement(\"input\");\n            _this.hiddenFileInput.setAttribute(\"type\", \"file\");\n            if ((_this.options.maxFiles == null) || _this.options.maxFiles > 1) {\n              _this.hiddenFileInput.setAttribute(\"multiple\", \"multiple\");\n            }\n            _this.hiddenFileInput.className = \"dz-hidden-input\";\n            if (_this.options.acceptedFiles != null) {\n              _this.hiddenFileInput.setAttribute(\"accept\", _this.options.acceptedFiles);\n            }\n            if (_this.options.capture != null) {\n              _this.hiddenFileInput.setAttribute(\"capture\", _this.options.capture);\n            }\n            _this.hiddenFileInput.style.visibility = \"hidden\";\n            _this.hiddenFileInput.style.position = \"absolute\";\n            _this.hiddenFileInput.style.top = \"0\";\n            _this.hiddenFileInput.style.left = \"0\";\n            _this.hiddenFileInput.style.height = \"0\";\n            _this.hiddenFileInput.style.width = \"0\";\n            document.querySelector(_this.options.hiddenInputContainer).appendChild(_this.hiddenFileInput);\n            return _this.hiddenFileInput.addEventListener(\"change\", function() {\n              var file, files, _i, _len;\n              files = _this.hiddenFileInput.files;\n              if (files.length) {\n                for (_i = 0, _len = files.length; _i < _len; _i++) {\n                  file = files[_i];\n                  _this.addFile(file);\n                }\n              }\n              _this.emit(\"addedfiles\", files);\n              return setupHiddenFileInput();\n            });\n          };\n        })(this);\n        setupHiddenFileInput();\n      }\n      this.URL = (_ref = window.URL) != null ? _ref : window.webkitURL;\n      _ref1 = this.events;\n      for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n        eventName = _ref1[_i];\n        this.on(eventName, this.options[eventName]);\n      }\n      this.on(\"uploadprogress\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"removedfile\", (function(_this) {\n        return function() {\n          return _this.updateTotalUploadProgress();\n        };\n      })(this));\n      this.on(\"canceled\", (function(_this) {\n        return function(file) {\n          return _this.emit(\"complete\", file);\n        };\n      })(this));\n      this.on(\"complete\", (function(_this) {\n        return function(file) {\n          if (_this.getAddedFiles().length === 0 && _this.getUploadingFiles().length === 0 && _this.getQueuedFiles().length === 0) {\n            return setTimeout((function() {\n              return _this.emit(\"queuecomplete\");\n            }), 0);\n          }\n        };\n      })(this));\n      noPropagation = function(e) {\n        e.stopPropagation();\n        if (e.preventDefault) {\n          return e.preventDefault();\n        } else {\n          return e.returnValue = false;\n        }\n      };\n      this.listeners = [\n        {\n          element: this.element,\n          events: {\n            \"dragstart\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragstart\", e);\n              };\n            })(this),\n            \"dragenter\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.emit(\"dragenter\", e);\n              };\n            })(this),\n            \"dragover\": (function(_this) {\n              return function(e) {\n                var efct;\n                try {\n                  efct = e.dataTransfer.effectAllowed;\n                } catch (_error) {}\n                e.dataTransfer.dropEffect = 'move' === efct || 'linkMove' === efct ? 'move' : 'copy';\n                noPropagation(e);\n                return _this.emit(\"dragover\", e);\n              };\n            })(this),\n            \"dragleave\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragleave\", e);\n              };\n            })(this),\n            \"drop\": (function(_this) {\n              return function(e) {\n                noPropagation(e);\n                return _this.drop(e);\n              };\n            })(this),\n            \"dragend\": (function(_this) {\n              return function(e) {\n                return _this.emit(\"dragend\", e);\n              };\n            })(this)\n          }\n        }\n      ];\n      this.clickableElements.forEach((function(_this) {\n        return function(clickableElement) {\n          return _this.listeners.push({\n            element: clickableElement,\n            events: {\n              \"click\": function(evt) {\n                if ((clickableElement !== _this.element) || (evt.target === _this.element || Dropzone.elementInside(evt.target, _this.element.querySelector(\".dz-message\")))) {\n                  _this.hiddenFileInput.click();\n                }\n                return true;\n              }\n            }\n          });\n        };\n      })(this));\n      this.enable();\n      return this.options.init.call(this);\n    };\n\n    Dropzone.prototype.destroy = function() {\n      var _ref;\n      this.disable();\n      this.removeAllFiles(true);\n      if ((_ref = this.hiddenFileInput) != null ? _ref.parentNode : void 0) {\n        this.hiddenFileInput.parentNode.removeChild(this.hiddenFileInput);\n        this.hiddenFileInput = null;\n      }\n      delete this.element.dropzone;\n      return Dropzone.instances.splice(Dropzone.instances.indexOf(this), 1);\n    };\n\n    Dropzone.prototype.updateTotalUploadProgress = function() {\n      var activeFiles, file, totalBytes, totalBytesSent, totalUploadProgress, _i, _len, _ref;\n      totalBytesSent = 0;\n      totalBytes = 0;\n      activeFiles = this.getActiveFiles();\n      if (activeFiles.length) {\n        _ref = this.getActiveFiles();\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          totalBytesSent += file.upload.bytesSent;\n          totalBytes += file.upload.total;\n        }\n        totalUploadProgress = 100 * totalBytesSent / totalBytes;\n      } else {\n        totalUploadProgress = 100;\n      }\n      return this.emit(\"totaluploadprogress\", totalUploadProgress, totalBytes, totalBytesSent);\n    };\n\n    Dropzone.prototype._getParamName = function(n) {\n      if (typeof this.options.paramName === \"function\") {\n        return this.options.paramName(n);\n      } else {\n        return \"\" + this.options.paramName + (this.options.uploadMultiple ? \"[\" + n + \"]\" : \"\");\n      }\n    };\n\n    Dropzone.prototype._renameFilename = function(name) {\n      if (typeof this.options.renameFilename !== \"function\") {\n        return name;\n      }\n      return this.options.renameFilename(name);\n    };\n\n    Dropzone.prototype.getFallbackForm = function() {\n      var existingFallback, fields, fieldsString, form;\n      if (existingFallback = this.getExistingFallback()) {\n        return existingFallback;\n      }\n      fieldsString = \"<div class=\\\"dz-fallback\\\">\";\n      if (this.options.dictFallbackText) {\n        fieldsString += \"<p>\" + this.options.dictFallbackText + \"</p>\";\n      }\n      fieldsString += \"<input type=\\\"file\\\" name=\\\"\" + (this._getParamName(0)) + \"\\\" \" + (this.options.uploadMultiple ? 'multiple=\"multiple\"' : void 0) + \" /><input type=\\\"submit\\\" value=\\\"Upload!\\\"></div>\";\n      fields = Dropzone.createElement(fieldsString);\n      if (this.element.tagName !== \"FORM\") {\n        form = Dropzone.createElement(\"<form action=\\\"\" + this.options.url + \"\\\" enctype=\\\"multipart/form-data\\\" method=\\\"\" + this.options.method + \"\\\"></form>\");\n        form.appendChild(fields);\n      } else {\n        this.element.setAttribute(\"enctype\", \"multipart/form-data\");\n        this.element.setAttribute(\"method\", this.options.method);\n      }\n      return form != null ? form : fields;\n    };\n\n    Dropzone.prototype.getExistingFallback = function() {\n      var fallback, getFallback, tagName, _i, _len, _ref;\n      getFallback = function(elements) {\n        var el, _i, _len;\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )fallback($| )/.test(el.className)) {\n            return el;\n          }\n        }\n      };\n      _ref = [\"div\", \"form\"];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        tagName = _ref[_i];\n        if (fallback = getFallback(this.element.getElementsByTagName(tagName))) {\n          return fallback;\n        }\n      }\n    };\n\n    Dropzone.prototype.setupEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.addEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.removeEventListeners = function() {\n      var elementListeners, event, listener, _i, _len, _ref, _results;\n      _ref = this.listeners;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        elementListeners = _ref[_i];\n        _results.push((function() {\n          var _ref1, _results1;\n          _ref1 = elementListeners.events;\n          _results1 = [];\n          for (event in _ref1) {\n            listener = _ref1[event];\n            _results1.push(elementListeners.element.removeEventListener(event, listener, false));\n          }\n          return _results1;\n        })());\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.disable = function() {\n      var file, _i, _len, _ref, _results;\n      this.clickableElements.forEach(function(element) {\n        return element.classList.remove(\"dz-clickable\");\n      });\n      this.removeEventListeners();\n      _ref = this.files;\n      _results = [];\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        _results.push(this.cancelUpload(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype.enable = function() {\n      this.clickableElements.forEach(function(element) {\n        return element.classList.add(\"dz-clickable\");\n      });\n      return this.setupEventListeners();\n    };\n\n    Dropzone.prototype.filesize = function(size) {\n      var cutoff, i, selectedSize, selectedUnit, unit, units, _i, _len;\n      selectedSize = 0;\n      selectedUnit = \"b\";\n      if (size > 0) {\n        units = ['TB', 'GB', 'MB', 'KB', 'b'];\n        for (i = _i = 0, _len = units.length; _i < _len; i = ++_i) {\n          unit = units[i];\n          cutoff = Math.pow(this.options.filesizeBase, 4 - i) / 10;\n          if (size >= cutoff) {\n            selectedSize = size / Math.pow(this.options.filesizeBase, 4 - i);\n            selectedUnit = unit;\n            break;\n          }\n        }\n        selectedSize = Math.round(10 * selectedSize) / 10;\n      }\n      return \"<strong>\" + selectedSize + \"</strong> \" + selectedUnit;\n    };\n\n    Dropzone.prototype._updateMaxFilesReachedClass = function() {\n      if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        if (this.getAcceptedFiles().length === this.options.maxFiles) {\n          this.emit('maxfilesreached', this.files);\n        }\n        return this.element.classList.add(\"dz-max-files-reached\");\n      } else {\n        return this.element.classList.remove(\"dz-max-files-reached\");\n      }\n    };\n\n    Dropzone.prototype.drop = function(e) {\n      var files, items;\n      if (!e.dataTransfer) {\n        return;\n      }\n      this.emit(\"drop\", e);\n      files = e.dataTransfer.files;\n      this.emit(\"addedfiles\", files);\n      if (files.length) {\n        items = e.dataTransfer.items;\n        if (items && items.length && (items[0].webkitGetAsEntry != null)) {\n          this._addFilesFromItems(items);\n        } else {\n          this.handleFiles(files);\n        }\n      }\n    };\n\n    Dropzone.prototype.paste = function(e) {\n      var items, _ref;\n      if ((e != null ? (_ref = e.clipboardData) != null ? _ref.items : void 0 : void 0) == null) {\n        return;\n      }\n      this.emit(\"paste\", e);\n      items = e.clipboardData.items;\n      if (items.length) {\n        return this._addFilesFromItems(items);\n      }\n    };\n\n    Dropzone.prototype.handleFiles = function(files) {\n      var file, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        _results.push(this.addFile(file));\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromItems = function(items) {\n      var entry, item, _i, _len, _results;\n      _results = [];\n      for (_i = 0, _len = items.length; _i < _len; _i++) {\n        item = items[_i];\n        if ((item.webkitGetAsEntry != null) && (entry = item.webkitGetAsEntry())) {\n          if (entry.isFile) {\n            _results.push(this.addFile(item.getAsFile()));\n          } else if (entry.isDirectory) {\n            _results.push(this._addFilesFromDirectory(entry, entry.name));\n          } else {\n            _results.push(void 0);\n          }\n        } else if (item.getAsFile != null) {\n          if ((item.kind == null) || item.kind === \"file\") {\n            _results.push(this.addFile(item.getAsFile()));\n          } else {\n            _results.push(void 0);\n          }\n        } else {\n          _results.push(void 0);\n        }\n      }\n      return _results;\n    };\n\n    Dropzone.prototype._addFilesFromDirectory = function(directory, path) {\n      var dirReader, errorHandler, readEntries;\n      dirReader = directory.createReader();\n      errorHandler = function(error) {\n        return typeof console !== \"undefined\" && console !== null ? typeof console.log === \"function\" ? console.log(error) : void 0 : void 0;\n      };\n      readEntries = (function(_this) {\n        return function() {\n          return dirReader.readEntries(function(entries) {\n            var entry, _i, _len;\n            if (entries.length > 0) {\n              for (_i = 0, _len = entries.length; _i < _len; _i++) {\n                entry = entries[_i];\n                if (entry.isFile) {\n                  entry.file(function(file) {\n                    if (_this.options.ignoreHiddenFiles && file.name.substring(0, 1) === '.') {\n                      return;\n                    }\n                    file.fullPath = \"\" + path + \"/\" + file.name;\n                    return _this.addFile(file);\n                  });\n                } else if (entry.isDirectory) {\n                  _this._addFilesFromDirectory(entry, \"\" + path + \"/\" + entry.name);\n                }\n              }\n              readEntries();\n            }\n            return null;\n          }, errorHandler);\n        };\n      })(this);\n      return readEntries();\n    };\n\n    Dropzone.prototype.accept = function(file, done) {\n      if (file.size > this.options.maxFilesize * 1024 * 1024) {\n        return done(this.options.dictFileTooBig.replace(\"{{filesize}}\", Math.round(file.size / 1024 / 10.24) / 100).replace(\"{{maxFilesize}}\", this.options.maxFilesize));\n      } else if (!Dropzone.isValidFile(file, this.options.acceptedFiles)) {\n        return done(this.options.dictInvalidFileType);\n      } else if ((this.options.maxFiles != null) && this.getAcceptedFiles().length >= this.options.maxFiles) {\n        done(this.options.dictMaxFilesExceeded.replace(\"{{maxFiles}}\", this.options.maxFiles));\n        return this.emit(\"maxfilesexceeded\", file);\n      } else {\n        return this.options.accept.call(this, file, done);\n      }\n    };\n\n    Dropzone.prototype.addFile = function(file) {\n      file.upload = {\n        progress: 0,\n        total: file.size,\n        bytesSent: 0\n      };\n      this.files.push(file);\n      file.status = Dropzone.ADDED;\n      this.emit(\"addedfile\", file);\n      this._enqueueThumbnail(file);\n      return this.accept(file, (function(_this) {\n        return function(error) {\n          if (error) {\n            file.accepted = false;\n            _this._errorProcessing([file], error);\n          } else {\n            file.accepted = true;\n            if (_this.options.autoQueue) {\n              _this.enqueueFile(file);\n            }\n          }\n          return _this._updateMaxFilesReachedClass();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.enqueueFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        this.enqueueFile(file);\n      }\n      return null;\n    };\n\n    Dropzone.prototype.enqueueFile = function(file) {\n      if (file.status === Dropzone.ADDED && file.accepted === true) {\n        file.status = Dropzone.QUEUED;\n        if (this.options.autoProcessQueue) {\n          return setTimeout(((function(_this) {\n            return function() {\n              return _this.processQueue();\n            };\n          })(this)), 0);\n        }\n      } else {\n        throw new Error(\"This file can't be queued because it has already been processed or was rejected.\");\n      }\n    };\n\n    Dropzone.prototype._thumbnailQueue = [];\n\n    Dropzone.prototype._processingThumbnail = false;\n\n    Dropzone.prototype._enqueueThumbnail = function(file) {\n      if (this.options.createImageThumbnails && file.type.match(/image.*/) && file.size <= this.options.maxThumbnailFilesize * 1024 * 1024) {\n        this._thumbnailQueue.push(file);\n        return setTimeout(((function(_this) {\n          return function() {\n            return _this._processThumbnailQueue();\n          };\n        })(this)), 0);\n      }\n    };\n\n    Dropzone.prototype._processThumbnailQueue = function() {\n      if (this._processingThumbnail || this._thumbnailQueue.length === 0) {\n        return;\n      }\n      this._processingThumbnail = true;\n      return this.createThumbnail(this._thumbnailQueue.shift(), (function(_this) {\n        return function() {\n          _this._processingThumbnail = false;\n          return _this._processThumbnailQueue();\n        };\n      })(this));\n    };\n\n    Dropzone.prototype.removeFile = function(file) {\n      if (file.status === Dropzone.UPLOADING) {\n        this.cancelUpload(file);\n      }\n      this.files = without(this.files, file);\n      this.emit(\"removedfile\", file);\n      if (this.files.length === 0) {\n        return this.emit(\"reset\");\n      }\n    };\n\n    Dropzone.prototype.removeAllFiles = function(cancelIfNecessary) {\n      var file, _i, _len, _ref;\n      if (cancelIfNecessary == null) {\n        cancelIfNecessary = false;\n      }\n      _ref = this.files.slice();\n      for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n        file = _ref[_i];\n        if (file.status !== Dropzone.UPLOADING || cancelIfNecessary) {\n          this.removeFile(file);\n        }\n      }\n      return null;\n    };\n\n    Dropzone.prototype.createThumbnail = function(file, callback) {\n      var fileReader;\n      fileReader = new FileReader;\n      fileReader.onload = (function(_this) {\n        return function() {\n          if (file.type === \"image/svg+xml\") {\n            _this.emit(\"thumbnail\", file, fileReader.result);\n            if (callback != null) {\n              callback();\n            }\n            return;\n          }\n          return _this.createThumbnailFromUrl(file, fileReader.result, callback);\n        };\n      })(this);\n      return fileReader.readAsDataURL(file);\n    };\n\n    Dropzone.prototype.createThumbnailFromUrl = function(file, imageUrl, callback, crossOrigin) {\n      var img;\n      img = document.createElement(\"img\");\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n      img.onload = (function(_this) {\n        return function() {\n          var canvas, ctx, resizeInfo, thumbnail, _ref, _ref1, _ref2, _ref3;\n          file.width = img.width;\n          file.height = img.height;\n          resizeInfo = _this.options.resize.call(_this, file);\n          if (resizeInfo.trgWidth == null) {\n            resizeInfo.trgWidth = resizeInfo.optWidth;\n          }\n          if (resizeInfo.trgHeight == null) {\n            resizeInfo.trgHeight = resizeInfo.optHeight;\n          }\n          canvas = document.createElement(\"canvas\");\n          ctx = canvas.getContext(\"2d\");\n          canvas.width = resizeInfo.trgWidth;\n          canvas.height = resizeInfo.trgHeight;\n          drawImageIOSFix(ctx, img, (_ref = resizeInfo.srcX) != null ? _ref : 0, (_ref1 = resizeInfo.srcY) != null ? _ref1 : 0, resizeInfo.srcWidth, resizeInfo.srcHeight, (_ref2 = resizeInfo.trgX) != null ? _ref2 : 0, (_ref3 = resizeInfo.trgY) != null ? _ref3 : 0, resizeInfo.trgWidth, resizeInfo.trgHeight);\n          thumbnail = canvas.toDataURL(\"image/png\");\n          _this.emit(\"thumbnail\", file, thumbnail);\n          if (callback != null) {\n            return callback();\n          }\n        };\n      })(this);\n      if (callback != null) {\n        img.onerror = callback;\n      }\n      return img.src = imageUrl;\n    };\n\n    Dropzone.prototype.processQueue = function() {\n      var i, parallelUploads, processingLength, queuedFiles;\n      parallelUploads = this.options.parallelUploads;\n      processingLength = this.getUploadingFiles().length;\n      i = processingLength;\n      if (processingLength >= parallelUploads) {\n        return;\n      }\n      queuedFiles = this.getQueuedFiles();\n      if (!(queuedFiles.length > 0)) {\n        return;\n      }\n      if (this.options.uploadMultiple) {\n        return this.processFiles(queuedFiles.slice(0, parallelUploads - processingLength));\n      } else {\n        while (i < parallelUploads) {\n          if (!queuedFiles.length) {\n            return;\n          }\n          this.processFile(queuedFiles.shift());\n          i++;\n        }\n      }\n    };\n\n    Dropzone.prototype.processFile = function(file) {\n      return this.processFiles([file]);\n    };\n\n    Dropzone.prototype.processFiles = function(files) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.processing = true;\n        file.status = Dropzone.UPLOADING;\n        this.emit(\"processing\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"processingmultiple\", files);\n      }\n      return this.uploadFiles(files);\n    };\n\n    Dropzone.prototype._getFilesWithXhr = function(xhr) {\n      var file, files;\n      return files = (function() {\n        var _i, _len, _ref, _results;\n        _ref = this.files;\n        _results = [];\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          file = _ref[_i];\n          if (file.xhr === xhr) {\n            _results.push(file);\n          }\n        }\n        return _results;\n      }).call(this);\n    };\n\n    Dropzone.prototype.cancelUpload = function(file) {\n      var groupedFile, groupedFiles, _i, _j, _len, _len1, _ref;\n      if (file.status === Dropzone.UPLOADING) {\n        groupedFiles = this._getFilesWithXhr(file.xhr);\n        for (_i = 0, _len = groupedFiles.length; _i < _len; _i++) {\n          groupedFile = groupedFiles[_i];\n          groupedFile.status = Dropzone.CANCELED;\n        }\n        file.xhr.abort();\n        for (_j = 0, _len1 = groupedFiles.length; _j < _len1; _j++) {\n          groupedFile = groupedFiles[_j];\n          this.emit(\"canceled\", groupedFile);\n        }\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", groupedFiles);\n        }\n      } else if ((_ref = file.status) === Dropzone.ADDED || _ref === Dropzone.QUEUED) {\n        file.status = Dropzone.CANCELED;\n        this.emit(\"canceled\", file);\n        if (this.options.uploadMultiple) {\n          this.emit(\"canceledmultiple\", [file]);\n        }\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    resolveOption = function() {\n      var args, option;\n      option = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];\n      if (typeof option === 'function') {\n        return option.apply(this, args);\n      }\n      return option;\n    };\n\n    Dropzone.prototype.uploadFile = function(file) {\n      return this.uploadFiles([file]);\n    };\n\n    Dropzone.prototype.uploadFiles = function(files) {\n      var file, formData, handleError, headerName, headerValue, headers, i, input, inputName, inputType, key, method, option, progressObj, response, updateProgress, url, value, xhr, _i, _j, _k, _l, _len, _len1, _len2, _len3, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;\n      xhr = new XMLHttpRequest();\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.xhr = xhr;\n      }\n      method = resolveOption(this.options.method, files);\n      url = resolveOption(this.options.url, files);\n      xhr.open(method, url, true);\n      xhr.withCredentials = !!this.options.withCredentials;\n      response = null;\n      handleError = (function(_this) {\n        return function() {\n          var _j, _len1, _results;\n          _results = [];\n          for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n            file = files[_j];\n            _results.push(_this._errorProcessing(files, response || _this.options.dictResponseError.replace(\"{{statusCode}}\", xhr.status), xhr));\n          }\n          return _results;\n        };\n      })(this);\n      updateProgress = (function(_this) {\n        return function(e) {\n          var allFilesFinished, progress, _j, _k, _l, _len1, _len2, _len3, _results;\n          if (e != null) {\n            progress = 100 * e.loaded / e.total;\n            for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n              file = files[_j];\n              file.upload = {\n                progress: progress,\n                total: e.total,\n                bytesSent: e.loaded\n              };\n            }\n          } else {\n            allFilesFinished = true;\n            progress = 100;\n            for (_k = 0, _len2 = files.length; _k < _len2; _k++) {\n              file = files[_k];\n              if (!(file.upload.progress === 100 && file.upload.bytesSent === file.upload.total)) {\n                allFilesFinished = false;\n              }\n              file.upload.progress = progress;\n              file.upload.bytesSent = file.upload.total;\n            }\n            if (allFilesFinished) {\n              return;\n            }\n          }\n          _results = [];\n          for (_l = 0, _len3 = files.length; _l < _len3; _l++) {\n            file = files[_l];\n            _results.push(_this.emit(\"uploadprogress\", file, progress, file.upload.bytesSent));\n          }\n          return _results;\n        };\n      })(this);\n      xhr.onload = (function(_this) {\n        return function(e) {\n          var _ref;\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          if (xhr.readyState !== 4) {\n            return;\n          }\n          response = xhr.responseText;\n          if (xhr.getResponseHeader(\"content-type\") && ~xhr.getResponseHeader(\"content-type\").indexOf(\"application/json\")) {\n            try {\n              response = JSON.parse(response);\n            } catch (_error) {\n              e = _error;\n              response = \"Invalid JSON response from server.\";\n            }\n          }\n          updateProgress();\n          if (!((200 <= (_ref = xhr.status) && _ref < 300))) {\n            return handleError();\n          } else {\n            return _this._finished(files, response, e);\n          }\n        };\n      })(this);\n      xhr.onerror = (function(_this) {\n        return function() {\n          if (files[0].status === Dropzone.CANCELED) {\n            return;\n          }\n          return handleError();\n        };\n      })(this);\n      progressObj = (_ref = xhr.upload) != null ? _ref : xhr;\n      progressObj.onprogress = updateProgress;\n      headers = {\n        \"Accept\": \"application/json\",\n        \"Cache-Control\": \"no-cache\",\n        \"X-Requested-With\": \"XMLHttpRequest\"\n      };\n      if (this.options.headers) {\n        extend(headers, this.options.headers);\n      }\n      for (headerName in headers) {\n        headerValue = headers[headerName];\n        if (headerValue) {\n          xhr.setRequestHeader(headerName, headerValue);\n        }\n      }\n      formData = new FormData();\n      if (this.options.params) {\n        _ref1 = this.options.params;\n        for (key in _ref1) {\n          value = _ref1[key];\n          formData.append(key, value);\n        }\n      }\n      for (_j = 0, _len1 = files.length; _j < _len1; _j++) {\n        file = files[_j];\n        this.emit(\"sending\", file, xhr, formData);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"sendingmultiple\", files, xhr, formData);\n      }\n      if (this.element.tagName === \"FORM\") {\n        _ref2 = this.element.querySelectorAll(\"input, textarea, select, button\");\n        for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {\n          input = _ref2[_k];\n          inputName = input.getAttribute(\"name\");\n          inputType = input.getAttribute(\"type\");\n          if (input.tagName === \"SELECT\" && input.hasAttribute(\"multiple\")) {\n            _ref3 = input.options;\n            for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {\n              option = _ref3[_l];\n              if (option.selected) {\n                formData.append(inputName, option.value);\n              }\n            }\n          } else if (!inputType || ((_ref4 = inputType.toLowerCase()) !== \"checkbox\" && _ref4 !== \"radio\") || input.checked) {\n            formData.append(inputName, input.value);\n          }\n        }\n      }\n      for (i = _m = 0, _ref5 = files.length - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; i = 0 <= _ref5 ? ++_m : --_m) {\n        formData.append(this._getParamName(i), files[i], this._renameFilename(files[i].name));\n      }\n      return this.submitRequest(xhr, formData, files);\n    };\n\n    Dropzone.prototype.submitRequest = function(xhr, formData, files) {\n      return xhr.send(formData);\n    };\n\n    Dropzone.prototype._finished = function(files, responseText, e) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.SUCCESS;\n        this.emit(\"success\", file, responseText, e);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"successmultiple\", files, responseText, e);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    Dropzone.prototype._errorProcessing = function(files, message, xhr) {\n      var file, _i, _len;\n      for (_i = 0, _len = files.length; _i < _len; _i++) {\n        file = files[_i];\n        file.status = Dropzone.ERROR;\n        this.emit(\"error\", file, message, xhr);\n        this.emit(\"complete\", file);\n      }\n      if (this.options.uploadMultiple) {\n        this.emit(\"errormultiple\", files, message, xhr);\n        this.emit(\"completemultiple\", files);\n      }\n      if (this.options.autoProcessQueue) {\n        return this.processQueue();\n      }\n    };\n\n    return Dropzone;\n\n  })(Emitter);\n\n  Dropzone.version = \"4.3.0\";\n\n  Dropzone.options = {};\n\n  Dropzone.optionsForElement = function(element) {\n    if (element.getAttribute(\"id\")) {\n      return Dropzone.options[camelize(element.getAttribute(\"id\"))];\n    } else {\n      return void 0;\n    }\n  };\n\n  Dropzone.instances = [];\n\n  Dropzone.forElement = function(element) {\n    if (typeof element === \"string\") {\n      element = document.querySelector(element);\n    }\n    if ((element != null ? element.dropzone : void 0) == null) {\n      throw new Error(\"No Dropzone found for given element. This is probably because you're trying to access it before Dropzone had the time to initialize. Use the `init` option to setup any additional observers on your Dropzone.\");\n    }\n    return element.dropzone;\n  };\n\n  Dropzone.autoDiscover = true;\n\n  Dropzone.discover = function() {\n    var checkElements, dropzone, dropzones, _i, _len, _results;\n    if (document.querySelectorAll) {\n      dropzones = document.querySelectorAll(\".dropzone\");\n    } else {\n      dropzones = [];\n      checkElements = function(elements) {\n        var el, _i, _len, _results;\n        _results = [];\n        for (_i = 0, _len = elements.length; _i < _len; _i++) {\n          el = elements[_i];\n          if (/(^| )dropzone($| )/.test(el.className)) {\n            _results.push(dropzones.push(el));\n          } else {\n            _results.push(void 0);\n          }\n        }\n        return _results;\n      };\n      checkElements(document.getElementsByTagName(\"div\"));\n      checkElements(document.getElementsByTagName(\"form\"));\n    }\n    _results = [];\n    for (_i = 0, _len = dropzones.length; _i < _len; _i++) {\n      dropzone = dropzones[_i];\n      if (Dropzone.optionsForElement(dropzone) !== false) {\n        _results.push(new Dropzone(dropzone));\n      } else {\n        _results.push(void 0);\n      }\n    }\n    return _results;\n  };\n\n  Dropzone.blacklistedBrowsers = [/opera.*Macintosh.*version\\/12/i];\n\n  Dropzone.isBrowserSupported = function() {\n    var capableBrowser, regex, _i, _len, _ref;\n    capableBrowser = true;\n    if (window.File && window.FileReader && window.FileList && window.Blob && window.FormData && document.querySelector) {\n      if (!(\"classList\" in document.createElement(\"a\"))) {\n        capableBrowser = false;\n      } else {\n        _ref = Dropzone.blacklistedBrowsers;\n        for (_i = 0, _len = _ref.length; _i < _len; _i++) {\n          regex = _ref[_i];\n          if (regex.test(navigator.userAgent)) {\n            capableBrowser = false;\n            continue;\n          }\n        }\n      }\n    } else {\n      capableBrowser = false;\n    }\n    return capableBrowser;\n  };\n\n  without = function(list, rejectedItem) {\n    var item, _i, _len, _results;\n    _results = [];\n    for (_i = 0, _len = list.length; _i < _len; _i++) {\n      item = list[_i];\n      if (item !== rejectedItem) {\n        _results.push(item);\n      }\n    }\n    return _results;\n  };\n\n  camelize = function(str) {\n    return str.replace(/[\\-_](\\w)/g, function(match) {\n      return match.charAt(1).toUpperCase();\n    });\n  };\n\n  Dropzone.createElement = function(string) {\n    var div;\n    div = document.createElement(\"div\");\n    div.innerHTML = string;\n    return div.childNodes[0];\n  };\n\n  Dropzone.elementInside = function(element, container) {\n    if (element === container) {\n      return true;\n    }\n    while (element = element.parentNode) {\n      if (element === container) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  Dropzone.getElement = function(el, name) {\n    var element;\n    if (typeof el === \"string\") {\n      element = document.querySelector(el);\n    } else if (el.nodeType != null) {\n      element = el;\n    }\n    if (element == null) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector or a plain HTML element.\");\n    }\n    return element;\n  };\n\n  Dropzone.getElements = function(els, name) {\n    var e, el, elements, _i, _j, _len, _len1, _ref;\n    if (els instanceof Array) {\n      elements = [];\n      try {\n        for (_i = 0, _len = els.length; _i < _len; _i++) {\n          el = els[_i];\n          elements.push(this.getElement(el, name));\n        }\n      } catch (_error) {\n        e = _error;\n        elements = null;\n      }\n    } else if (typeof els === \"string\") {\n      elements = [];\n      _ref = document.querySelectorAll(els);\n      for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {\n        el = _ref[_j];\n        elements.push(el);\n      }\n    } else if (els.nodeType != null) {\n      elements = [els];\n    }\n    if (!((elements != null) && elements.length)) {\n      throw new Error(\"Invalid `\" + name + \"` option provided. Please provide a CSS selector, a plain HTML element or a list of those.\");\n    }\n    return elements;\n  };\n\n  Dropzone.confirm = function(question, accepted, rejected) {\n    if (window.confirm(question)) {\n      return accepted();\n    } else if (rejected != null) {\n      return rejected();\n    }\n  };\n\n  Dropzone.isValidFile = function(file, acceptedFiles) {\n    var baseMimeType, mimeType, validType, _i, _len;\n    if (!acceptedFiles) {\n      return true;\n    }\n    acceptedFiles = acceptedFiles.split(\",\");\n    mimeType = file.type;\n    baseMimeType = mimeType.replace(/\\/.*$/, \"\");\n    for (_i = 0, _len = acceptedFiles.length; _i < _len; _i++) {\n      validType = acceptedFiles[_i];\n      validType = validType.trim();\n      if (validType.charAt(0) === \".\") {\n        if (file.name.toLowerCase().indexOf(validType.toLowerCase(), file.name.length - validType.length) !== -1) {\n          return true;\n        }\n      } else if (/\\/\\*$/.test(validType)) {\n        if (baseMimeType === validType.replace(/\\/.*$/, \"\")) {\n          return true;\n        }\n      } else {\n        if (mimeType === validType) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  if (typeof jQuery !== \"undefined\" && jQuery !== null) {\n    jQuery.fn.dropzone = function(options) {\n      return this.each(function() {\n        return new Dropzone(this, options);\n      });\n    };\n  }\n\n  if (typeof module !== \"undefined\" && module !== null) {\n    module.exports = Dropzone;\n  } else {\n    window.Dropzone = Dropzone;\n  }\n\n  Dropzone.ADDED = \"added\";\n\n  Dropzone.QUEUED = \"queued\";\n\n  Dropzone.ACCEPTED = Dropzone.QUEUED;\n\n  Dropzone.UPLOADING = \"uploading\";\n\n  Dropzone.PROCESSING = Dropzone.UPLOADING;\n\n  Dropzone.CANCELED = \"canceled\";\n\n  Dropzone.ERROR = \"error\";\n\n  Dropzone.SUCCESS = \"success\";\n\n\n  /*\n  \n  Bugfix for iOS 6 and 7\n  Source: http://stackoverflow.com/questions/11929099/html5-canvas-drawimage-ratio-bug-ios\n  based on the work of https://github.com/stomita/ios-imagefile-megapixel\n   */\n\n  detectVerticalSquash = function(img) {\n    var alpha, canvas, ctx, data, ey, ih, iw, py, ratio, sy;\n    iw = img.naturalWidth;\n    ih = img.naturalHeight;\n    canvas = document.createElement(\"canvas\");\n    canvas.width = 1;\n    canvas.height = ih;\n    ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    data = ctx.getImageData(0, 0, 1, ih).data;\n    sy = 0;\n    ey = ih;\n    py = ih;\n    while (py > sy) {\n      alpha = data[(py - 1) * 4 + 3];\n      if (alpha === 0) {\n        ey = py;\n      } else {\n        sy = py;\n      }\n      py = (ey + sy) >> 1;\n    }\n    ratio = py / ih;\n    if (ratio === 0) {\n      return 1;\n    } else {\n      return ratio;\n    }\n  };\n\n  drawImageIOSFix = function(ctx, img, sx, sy, sw, sh, dx, dy, dw, dh) {\n    var vertSquashRatio;\n    vertSquashRatio = detectVerticalSquash(img);\n    return ctx.drawImage(img, sx, sy, sw, sh, dx, dy, dw, dh / vertSquashRatio);\n  };\n\n\n  /*\n   * contentloaded.js\n   *\n   * Author: Diego Perini (diego.perini at gmail.com)\n   * Summary: cross-browser wrapper for DOMContentLoaded\n   * Updated: 20101020\n   * License: MIT\n   * Version: 1.2\n   *\n   * URL:\n   * http://javascript.nwbox.com/ContentLoaded/\n   * http://javascript.nwbox.com/ContentLoaded/MIT-LICENSE\n   */\n\n  contentLoaded = function(win, fn) {\n    var add, doc, done, init, poll, pre, rem, root, top;\n    done = false;\n    top = true;\n    doc = win.document;\n    root = doc.documentElement;\n    add = (doc.addEventListener ? \"addEventListener\" : \"attachEvent\");\n    rem = (doc.addEventListener ? \"removeEventListener\" : \"detachEvent\");\n    pre = (doc.addEventListener ? \"\" : \"on\");\n    init = function(e) {\n      if (e.type === \"readystatechange\" && doc.readyState !== \"complete\") {\n        return;\n      }\n      (e.type === \"load\" ? win : doc)[rem](pre + e.type, init, false);\n      if (!done && (done = true)) {\n        return fn.call(win, e.type || e);\n      }\n    };\n    poll = function() {\n      var e;\n      try {\n        root.doScroll(\"left\");\n      } catch (_error) {\n        e = _error;\n        setTimeout(poll, 50);\n        return;\n      }\n      return init(\"poll\");\n    };\n    if (doc.readyState !== \"complete\") {\n      if (doc.createEventObject && root.doScroll) {\n        try {\n          top = !win.frameElement;\n        } catch (_error) {}\n        if (top) {\n          poll();\n        }\n      }\n      doc[add](pre + \"DOMContentLoaded\", init, false);\n      doc[add](pre + \"readystatechange\", init, false);\n      return win[add](pre + \"load\", init, false);\n    }\n  };\n\n  Dropzone._autoDiscoverFunction = function() {\n    if (Dropzone.autoDiscover) {\n      return Dropzone.discover();\n    }\n  };\n\n  contentLoaded(window, Dropzone._autoDiscoverFunction);\n\n}).call(this);",
        "output": "str",
        "x": 390,
        "y": 440,
        "wires": [
            [
                "ac373d13.9e69d"
            ]
        ]
    },
    {
        "id": "7e21f5e7.01ea5c",
        "type": "http in",
        "z": "18ce424.75127be",
        "name": "",
        "url": "/upload_pretty",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "f1d5cec2.e677"
            ]
        ]
    },
    {
        "id": "64037a57.a59e44",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "html",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<script>\n    {{{dropzonejs}}}\n</script>\n<style>\n    {{{css}}}\n</style>\n\n<script>\n    // \"myAwesomeDropzone\" is the camelized version of the HTML element's ID\n    Dropzone.options.myDropzone = {\n      paramName: \"myFile\", // The name that will be used to transfer the file\n      maxFilesize: 2, // MB\n      accept: function(file, done) {\n        if (file.name == \"justinbieber.jpg\") {\n          done(\"Naha, you don't.\");\n        }\n        else { done(); }\n      }\n    };\n</script>\n\n<h1>Upload a file here:</h1>\n\n<form action=\"/uploadpretty_post\" class=\"dropzone\" method=\"post\" enctype=\"multipart/form-data\" id=\"my-dropzone\">\n  <div class=\"fallback\">\n    <input name=\"myFile\" type=\"file\" />\n    <input type=\"submit\" value=\"Submit\">\n  </div>\n</form>",
        "output": "str",
        "x": 710,
        "y": 440,
        "wires": [
            [
                "9c2f3a6d.7409b8"
            ]
        ]
    },
    {
        "id": "9c2f3a6d.7409b8",
        "type": "http response",
        "z": "18ce424.75127be",
        "name": "",
        "x": 870,
        "y": 440,
        "wires": []
    },
    {
        "id": "ac373d13.9e69d",
        "type": "template",
        "z": "18ce424.75127be",
        "name": "",
        "field": "css",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "/*\n * The MIT License\n * Copyright (c) 2012 Matias Meno <m@tias.me>\n */\n@-webkit-keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@-moz-keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@keyframes passing-through {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30%, 70% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); }\n  100% {\n    opacity: 0;\n    -webkit-transform: translateY(-40px);\n    -moz-transform: translateY(-40px);\n    -ms-transform: translateY(-40px);\n    -o-transform: translateY(-40px);\n    transform: translateY(-40px); } }\n@-webkit-keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@-moz-keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@keyframes slide-in {\n  0% {\n    opacity: 0;\n    -webkit-transform: translateY(40px);\n    -moz-transform: translateY(40px);\n    -ms-transform: translateY(40px);\n    -o-transform: translateY(40px);\n    transform: translateY(40px); }\n  30% {\n    opacity: 1;\n    -webkit-transform: translateY(0px);\n    -moz-transform: translateY(0px);\n    -ms-transform: translateY(0px);\n    -o-transform: translateY(0px);\n    transform: translateY(0px); } }\n@-webkit-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n@-moz-keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n@keyframes pulse {\n  0% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); }\n  10% {\n    -webkit-transform: scale(1.1);\n    -moz-transform: scale(1.1);\n    -ms-transform: scale(1.1);\n    -o-transform: scale(1.1);\n    transform: scale(1.1); }\n  20% {\n    -webkit-transform: scale(1);\n    -moz-transform: scale(1);\n    -ms-transform: scale(1);\n    -o-transform: scale(1);\n    transform: scale(1); } }\n.dropzone, .dropzone * {\n  box-sizing: border-box; }\n\n.dropzone {\n  min-height: 150px;\n  border: 2px solid rgba(0, 0, 0, 0.3);\n  background: white;\n  padding: 20px 20px; }\n  .dropzone.dz-clickable {\n    cursor: pointer; }\n    .dropzone.dz-clickable * {\n      cursor: default; }\n    .dropzone.dz-clickable .dz-message, .dropzone.dz-clickable .dz-message * {\n      cursor: pointer; }\n  .dropzone.dz-started .dz-message {\n    display: none; }\n  .dropzone.dz-drag-hover {\n    border-style: solid; }\n    .dropzone.dz-drag-hover .dz-message {\n      opacity: 0.5; }\n  .dropzone .dz-message {\n    text-align: center;\n    margin: 2em 0; }\n  .dropzone .dz-preview {\n    position: relative;\n    display: inline-block;\n    vertical-align: top;\n    margin: 16px;\n    min-height: 100px; }\n    .dropzone .dz-preview:hover {\n      z-index: 1000; }\n      .dropzone .dz-preview:hover .dz-details {\n        opacity: 1; }\n    .dropzone .dz-preview.dz-file-preview .dz-image {\n      border-radius: 20px;\n      background: #999;\n      background: linear-gradient(to bottom, #eee, #ddd); }\n    .dropzone .dz-preview.dz-file-preview .dz-details {\n      opacity: 1; }\n    .dropzone .dz-preview.dz-image-preview {\n      background: white; }\n      .dropzone .dz-preview.dz-image-preview .dz-details {\n        -webkit-transition: opacity 0.2s linear;\n        -moz-transition: opacity 0.2s linear;\n        -ms-transition: opacity 0.2s linear;\n        -o-transition: opacity 0.2s linear;\n        transition: opacity 0.2s linear; }\n    .dropzone .dz-preview .dz-remove {\n      font-size: 14px;\n      text-align: center;\n      display: block;\n      cursor: pointer;\n      border: none; }\n      .dropzone .dz-preview .dz-remove:hover {\n        text-decoration: underline; }\n    .dropzone .dz-preview:hover .dz-details {\n      opacity: 1; }\n    .dropzone .dz-preview .dz-details {\n      z-index: 20;\n      position: absolute;\n      top: 0;\n      left: 0;\n      opacity: 0;\n      font-size: 13px;\n      min-width: 100%;\n      max-width: 100%;\n      padding: 2em 1em;\n      text-align: center;\n      color: rgba(0, 0, 0, 0.9);\n      line-height: 150%; }\n      .dropzone .dz-preview .dz-details .dz-size {\n        margin-bottom: 1em;\n        font-size: 16px; }\n      .dropzone .dz-preview .dz-details .dz-filename {\n        white-space: nowrap; }\n        .dropzone .dz-preview .dz-details .dz-filename:hover span {\n          border: 1px solid rgba(200, 200, 200, 0.8);\n          background-color: rgba(255, 255, 255, 0.8); }\n        .dropzone .dz-preview .dz-details .dz-filename:not(:hover) {\n          overflow: hidden;\n          text-overflow: ellipsis; }\n          .dropzone .dz-preview .dz-details .dz-filename:not(:hover) span {\n            border: 1px solid transparent; }\n      .dropzone .dz-preview .dz-details .dz-filename span, .dropzone .dz-preview .dz-details .dz-size span {\n        background-color: rgba(255, 255, 255, 0.4);\n        padding: 0 0.4em;\n        border-radius: 3px; }\n    .dropzone .dz-preview:hover .dz-image img {\n      -webkit-transform: scale(1.05, 1.05);\n      -moz-transform: scale(1.05, 1.05);\n      -ms-transform: scale(1.05, 1.05);\n      -o-transform: scale(1.05, 1.05);\n      transform: scale(1.05, 1.05);\n      -webkit-filter: blur(8px);\n      filter: blur(8px); }\n    .dropzone .dz-preview .dz-image {\n      border-radius: 20px;\n      overflow: hidden;\n      width: 120px;\n      height: 120px;\n      position: relative;\n      display: block;\n      z-index: 10; }\n      .dropzone .dz-preview .dz-image img {\n        display: block; }\n    .dropzone .dz-preview.dz-success .dz-success-mark {\n      -webkit-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -moz-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -ms-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -o-animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1);\n      animation: passing-through 3s cubic-bezier(0.77, 0, 0.175, 1); }\n    .dropzone .dz-preview.dz-error .dz-error-mark {\n      opacity: 1;\n      -webkit-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -moz-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -ms-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      -o-animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1);\n      animation: slide-in 3s cubic-bezier(0.77, 0, 0.175, 1); }\n    .dropzone .dz-preview .dz-success-mark, .dropzone .dz-preview .dz-error-mark {\n      pointer-events: none;\n      opacity: 0;\n      z-index: 500;\n      position: absolute;\n      display: block;\n      top: 50%;\n      left: 50%;\n      margin-left: -27px;\n      margin-top: -27px; }\n      .dropzone .dz-preview .dz-success-mark svg, .dropzone .dz-preview .dz-error-mark svg {\n        display: block;\n        width: 54px;\n        height: 54px; }\n    .dropzone .dz-preview.dz-processing .dz-progress {\n      opacity: 1;\n      -webkit-transition: all 0.2s linear;\n      -moz-transition: all 0.2s linear;\n      -ms-transition: all 0.2s linear;\n      -o-transition: all 0.2s linear;\n      transition: all 0.2s linear; }\n    .dropzone .dz-preview.dz-complete .dz-progress {\n      opacity: 0;\n      -webkit-transition: opacity 0.4s ease-in;\n      -moz-transition: opacity 0.4s ease-in;\n      -ms-transition: opacity 0.4s ease-in;\n      -o-transition: opacity 0.4s ease-in;\n      transition: opacity 0.4s ease-in; }\n    .dropzone .dz-preview:not(.dz-processing) .dz-progress {\n      -webkit-animation: pulse 6s ease infinite;\n      -moz-animation: pulse 6s ease infinite;\n      -ms-animation: pulse 6s ease infinite;\n      -o-animation: pulse 6s ease infinite;\n      animation: pulse 6s ease infinite; }\n    .dropzone .dz-preview .dz-progress {\n      opacity: 1;\n      z-index: 1000;\n      pointer-events: none;\n      position: absolute;\n      height: 16px;\n      left: 50%;\n      top: 50%;\n      margin-top: -8px;\n      width: 80px;\n      margin-left: -40px;\n      background: rgba(255, 255, 255, 0.9);\n      -webkit-transform: scale(1);\n      border-radius: 8px;\n      overflow: hidden; }\n      .dropzone .dz-preview .dz-progress .dz-upload {\n        background: #333;\n        background: linear-gradient(to bottom, #666, #444);\n        position: absolute;\n        top: 0;\n        left: 0;\n        bottom: 0;\n        width: 0;\n        -webkit-transition: width 300ms ease-in-out;\n        -moz-transition: width 300ms ease-in-out;\n        -ms-transition: width 300ms ease-in-out;\n        -o-transition: width 300ms ease-in-out;\n        transition: width 300ms ease-in-out; }\n    .dropzone .dz-preview.dz-error .dz-error-message {\n      display: block; }\n    .dropzone .dz-preview.dz-error:hover .dz-error-message {\n      opacity: 1;\n      pointer-events: auto; }\n    .dropzone .dz-preview .dz-error-message {\n      pointer-events: none;\n      z-index: 1000;\n      position: absolute;\n      display: block;\n      display: none;\n      opacity: 0;\n      -webkit-transition: opacity 0.3s ease;\n      -moz-transition: opacity 0.3s ease;\n      -ms-transition: opacity 0.3s ease;\n      -o-transition: opacity 0.3s ease;\n      transition: opacity 0.3s ease;\n      border-radius: 8px;\n      font-size: 13px;\n      top: 130px;\n      left: -10px;\n      width: 140px;\n      background: #be2626;\n      background: linear-gradient(to bottom, #be2626, #a92222);\n      padding: 0.5em 1.2em;\n      color: white; }\n      .dropzone .dz-preview .dz-error-message:after {\n        content: '';\n        position: absolute;\n        top: -6px;\n        left: 64px;\n        width: 0;\n        height: 0;\n        border-left: 6px solid transparent;\n        border-right: 6px solid transparent;\n        border-bottom: 6px solid #be2626; }",
        "output": "str",
        "x": 570,
        "y": 440,
        "wires": [
            [
                "64037a57.a59e44"
            ]
        ]
    },
    {
        "id": "cdc5d982.61f778",
        "type": "http in",
        "z": "18ce424.75127be",
        "name": "",
        "url": "/uploadsimple_post",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 190,
        "y": 240,
        "wires": [
            [
                "837451.f675abb",
                "3886cc06.e700c4"
            ]
        ]
    },
    {
        "id": "3886cc06.e700c4",
        "type": "change",
        "z": "18ce424.75127be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.files[0].buffer",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 240,
        "wires": [
            [
                "a1cc4957.482b68"
            ]
        ]
    },
    {
        "id": "de98a0e4.c7958",
        "type": "http in",
        "z": "18ce424.75127be",
        "name": "",
        "url": "/uploadpretty_post",
        "method": "post",
        "upload": true,
        "swaggerDoc": "",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "c6108a32.a4c518",
                "6fb82f0.c7e6bd"
            ]
        ]
    },
    {
        "id": "c6108a32.a4c518",
        "type": "http response",
        "z": "18ce424.75127be",
        "name": "",
        "x": 870,
        "y": 500,
        "wires": []
    },
    {
        "id": "541318da.e59518",
        "type": "comment",
        "z": "18ce424.75127be",
        "name": "More fancy example",
        "info": "http://localhost:1880/upload_pretty",
        "x": 170,
        "y": 400,
        "wires": []
    },
    {
        "id": "6fb82f0.c7e6bd",
        "type": "debug",
        "z": "18ce424.75127be",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "req.files[0].buffer",
        "x": 440,
        "y": 540,
        "wires": []
    },
    {
        "id": "9d24ea12.277e58",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 180,
        "wires": []
    },
    {
        "id": "f208aea5.fd5ca",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 930,
        "y": 340,
        "wires": []
    },
    {
        "id": "9e17c995.b07e38",
        "type": "ftp-download",
        "z": "f51feb57.6cd738",
        "server": "5eb4cf6e.eb139",
        "files": "filename",
        "directory": "directory",
        "name": "",
        "output": "payload",
        "filesType": "msg",
        "directoryType": "msg",
        "x": 1160,
        "y": 240,
        "wires": [
            [
                "71ec623a.22c3dc",
                "1c553d9f.0c7002"
            ]
        ]
    },
    {
        "id": "871bb05f.ecfd4",
        "type": "file",
        "z": "f51feb57.6cd738",
        "name": "metadata",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "x": 720,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "a6dab755.a28928",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "mkdir",
        "func": "msg.payload= \"Mirrored from BOM FTP by LFMC Pipeline @ \" + msg.today;\nmsg.filename =  msg.directory + \"/meta.txt\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 570,
        "y": 340,
        "wires": [
            [
                "871bb05f.ecfd4"
            ]
        ]
    },
    {
        "id": "12181318.ab80cd",
        "type": "delay",
        "z": "f51feb57.6cd738",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 580,
        "y": 240,
        "wires": [
            [
                "81b11c2b.2e155"
            ]
        ]
    },
    {
        "id": "52b38727.b3db88",
        "type": "delay",
        "z": "f51feb57.6cd738",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 580,
        "y": 280,
        "wires": [
            [
                "66fde08e.33dc3"
            ]
        ]
    },
    {
        "id": "bc51a0b1.9b47c",
        "type": "ftp-download",
        "z": "f51feb57.6cd738",
        "server": "5eb4cf6e.eb139",
        "files": "filename",
        "directory": "directory",
        "name": "",
        "output": "payload",
        "filesType": "msg",
        "directoryType": "msg",
        "x": 1160,
        "y": 280,
        "wires": [
            [
                "71ec623a.22c3dc",
                "1c553d9f.0c7002"
            ]
        ]
    },
    {
        "id": "f1d1df7a.e3cf8",
        "type": "delay",
        "z": "f51feb57.6cd738",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 240,
        "y": 280,
        "wires": [
            [
                "ca7dca3a.8f90d8"
            ]
        ]
    },
    {
        "id": "4cd50c87.f69f54",
        "type": "exec",
        "z": "f51feb57.6cd738",
        "command": "gzip -d ",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1750,
        "y": 260,
        "wires": [
            [
                "9c2cacb8.9f915"
            ],
            [],
            []
        ]
    },
    {
        "id": "71ec623a.22c3dc",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "Filter for GZ",
        "func": "// ID strings from http://www.bom.gov.au/catalogue/anon-ftp.shtml\n\nvar object_shortlist = msg.payload.filter(function(item) {\n    return ( item.includes('.gz'));\n});\n\nmsg.payload = object_shortlist.map(function(item) {\n    return item.replace(msg.path, '');    \n});\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1390,
        "y": 260,
        "wires": [
            [
                "1c553d9f.0c7002",
                "78be030d.4a464c"
            ]
        ]
    },
    {
        "id": "1c553d9f.0c7002",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 1450,
        "y": 160,
        "wires": []
    },
    {
        "id": "78be030d.4a464c",
        "type": "split",
        "z": "f51feb57.6cd738",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1590,
        "y": 260,
        "wires": [
            [
                "4cd50c87.f69f54"
            ]
        ]
    },
    {
        "id": "c56ad8c8.895d38",
        "type": "debug",
        "z": "59601007.fe581",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "true",
        "x": 530,
        "y": 100,
        "wires": []
    },
    {
        "id": "3aab2fac.f0b15",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "4PM",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 16 * * *",
        "once": false,
        "x": 90,
        "y": 220,
        "wires": [
            [
                "f1d1df7a.e3cf8",
                "7badd851.9e4b38"
            ]
        ]
    },
    {
        "id": "2d52e84b.8dbf78",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 436,
        "y": 147,
        "wires": [
            [
                "4d422dd1.ab4934"
            ]
        ]
    },
    {
        "id": "be37f377.f4312",
        "type": "http in",
        "z": "59601007.fe581",
        "name": "",
        "url": "/errorlogger",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "c56ad8c8.895d38",
                "785b2f88.80508",
                "e6c389cf.9c2938"
            ]
        ]
    },
    {
        "id": "785b2f88.80508",
        "type": "e-mail",
        "z": "59601007.fe581",
        "server": "smtp.gmail.com",
        "port": "465",
        "secure": true,
        "name": "anthony.rawlins@unimelb.edu.au",
        "dname": "",
        "x": 634,
        "y": 165,
        "wires": []
    },
    {
        "id": "20de281a.8bee08",
        "type": "http in",
        "z": "59601007.fe581",
        "name": "",
        "url": "/errorlogger",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 140,
        "wires": [
            [
                "c56ad8c8.895d38",
                "785b2f88.80508",
                "e6c389cf.9c2938"
            ]
        ]
    },
    {
        "id": "737949a4.9b09b8",
        "type": "inject",
        "z": "59601007.fe581",
        "name": "TEST",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "x": 170,
        "y": 380,
        "wires": [
            [
                "63254b7c.028794"
            ]
        ]
    },
    {
        "id": "e6c389cf.9c2938",
        "type": "http response",
        "z": "59601007.fe581",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 571,
        "y": 42,
        "wires": []
    },
    {
        "id": "124e4a22.2672b6",
        "type": "http request",
        "z": "59601007.fe581",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "url": "http://localhost:1880/errorlogger",
        "tls": "",
        "x": 570,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "63254b7c.028794",
        "type": "function",
        "z": "59601007.fe581",
        "name": "",
        "func": "msg.payload = {err: \"Error was:↵'var_name'\", code: 500, time_of_report: \"Monday, May 28, 2018 2:37 PM\", metadata: \"LFMC API v0.6.9\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 370,
        "y": 380,
        "wires": [
            [
                "124e4a22.2672b6"
            ]
        ]
    },
    {
        "id": "e8c6bcdd.f3143",
        "type": "http in",
        "z": "59601007.fe581",
        "name": "",
        "url": "/github",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 60,
        "wires": [
            [
                "c56ad8c8.895d38",
                "785b2f88.80508",
                "e6c389cf.9c2938"
            ]
        ]
    },
    {
        "id": "f089465e.aa9848",
        "type": "http in",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "url": "/parallel",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "f468fa9f.5ee938"
            ]
        ]
    },
    {
        "id": "f468fa9f.5ee938",
        "type": "change",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"httpbin\":\"http://httpbin.org/get\",\"anything\":\"http://httpbin.org/anything/get\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 362,
        "y": 139,
        "wires": [
            [
                "e9da59ed.bd2f58"
            ]
        ]
    },
    {
        "id": "e9da59ed.bd2f58",
        "type": "split",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "splt": "\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "topic",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "4612f594.6e5e7c"
            ]
        ]
    },
    {
        "id": "4612f594.6e5e7c",
        "type": "switch",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "httpbin",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "anything",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "outputs": 2,
        "x": 661,
        "y": 139,
        "wires": [
            [
                "9a42e467.e561f8"
            ],
            [
                "560aae05.bea08"
            ]
        ]
    },
    {
        "id": "9a42e467.e561f8",
        "type": "http request",
        "z": "d00e8f9b.7ce64",
        "name": "REST Service 1",
        "method": "GET",
        "ret": "obj",
        "url": "{{{payload}}}",
        "tls": "",
        "x": 839,
        "y": 98,
        "wires": [
            [
                "5c393943.966308"
            ]
        ]
    },
    {
        "id": "560aae05.bea08",
        "type": "http request",
        "z": "d00e8f9b.7ce64",
        "name": "REST Service 2",
        "method": "GET",
        "ret": "obj",
        "url": "http://httpbin.org/anything/get",
        "tls": "",
        "x": 839.5,
        "y": 180,
        "wires": [
            [
                "5c393943.966308"
            ]
        ]
    },
    {
        "id": "5c393943.966308",
        "type": "join",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "x": 1021,
        "y": 134,
        "wires": [
            [
                "b8a64f55.c6905",
                "baab402d.b2574"
            ]
        ]
    },
    {
        "id": "b8a64f55.c6905",
        "type": "http response",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1167.5,
        "y": 134,
        "wires": []
    },
    {
        "id": "4d422dd1.ab4934",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "console": "false",
        "complete": "false",
        "x": 648,
        "y": 188,
        "wires": []
    },
    {
        "id": "f3527d21.601e1",
        "type": "websocket in",
        "z": "1b36fe01.5f7492",
        "name": "",
        "server": "",
        "client": "5f2dd4b6.73f8ec",
        "x": 220,
        "y": 40,
        "wires": [
            [
                "6243a200.758fc"
            ]
        ]
    },
    {
        "id": "3a05cd66.8274f2",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 370,
        "y": 140,
        "wires": []
    },
    {
        "id": "10e3a28.49bfe5e",
        "type": "http in",
        "z": "1b36fe01.5f7492",
        "name": "",
        "url": "/submit",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 290,
        "y": 340,
        "wires": [
            [
                "52c890a9.8fb37"
            ]
        ]
    },
    {
        "id": "96ef7d6a.3c788",
        "type": "switch",
        "z": "1b36fe01.5f7492",
        "name": "",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "PENDING",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "STARTED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "RETRY",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "REVOKED",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "FAILURE",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 6,
        "x": 890,
        "y": 180,
        "wires": [
            [
                "5b138450.7340cc",
                "796f1b06.08bd74"
            ],
            [
                "f3324e1.05425b"
            ],
            [
                "f3324e1.05425b"
            ],
            [
                "f3324e1.05425b"
            ],
            [
                "359acd71.d88782"
            ],
            [
                "359acd71.d88782"
            ]
        ]
    },
    {
        "id": "69819ecb.953c2",
        "type": "delay",
        "z": "1b36fe01.5f7492",
        "name": "",
        "pauseType": "random",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "100",
        "randomLast": "300",
        "randomUnits": "milliseconds",
        "drop": false,
        "x": 1140,
        "y": 200,
        "wires": [
            [
                "54d16091.cf2ef"
            ]
        ]
    },
    {
        "id": "54d16091.cf2ef",
        "type": "switch",
        "z": "1b36fe01.5f7492",
        "name": "MAX RETRIES",
        "property": "retries",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "10",
                "vt": "str"
            },
            {
                "t": "lt",
                "v": "10",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 360,
        "wires": [
            [
                "359acd71.d88782"
            ],
            [
                "77f22e8f.6ac9d"
            ]
        ]
    },
    {
        "id": "27e7d33d.72466c",
        "type": "join",
        "z": "1b36fe01.5f7492",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1530,
        "y": 120,
        "wires": [
            [
                "ee9aeb35.9fcf38"
            ]
        ]
    },
    {
        "id": "6243a200.758fc",
        "type": "json",
        "z": "1b36fe01.5f7492",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "3a05cd66.8274f2",
                "d7c2da36.611d98"
            ]
        ]
    },
    {
        "id": "f3324e1.05425b",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "DELAY & UUID",
        "func": "if (msg.payload.id) {\n    msg.payload.uuid = msg.payload.id;\n}\n\nif (msg.delay) {\n    msg.delay += 1;\n} else {\n    msg.delay = 2;\n}\n\nif(msg.retries) {\n    msg.retries += 1;\n} else {\n    msg.retries = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1160,
        "y": 160,
        "wires": [
            [
                "69819ecb.953c2",
                "c97500af.26ae"
            ]
        ]
    },
    {
        "id": "796f1b06.08bd74",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "TOPIC",
        "func": "msg.topic = 'progress-' + msg.payload.uuid;\n\nmsg.payload.result = msg.payload.result.replace(/\"/g, '\\\"').replace(/'/g, '');\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 120,
        "wires": [
            [
                "cebc3262.dfd74"
            ]
        ]
    },
    {
        "id": "cebc3262.dfd74",
        "type": "json",
        "z": "1b36fe01.5f7492",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 1290,
        "y": 120,
        "wires": [
            [
                "3eac38ad.598d18"
            ]
        ]
    },
    {
        "id": "3eac38ad.598d18",
        "type": "json",
        "z": "1b36fe01.5f7492",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": true,
        "x": 1410,
        "y": 120,
        "wires": [
            [
                "27e7d33d.72466c"
            ]
        ]
    },
    {
        "id": "d7c2da36.611d98",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "",
        "func": "msg.topic = 'progress-' + msg.payload.uuid;\nmsg.payload = msg.payload.result;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 190,
        "y": 200,
        "wires": [
            [
                "c6449345.89c7b"
            ]
        ]
    },
    {
        "id": "c6449345.89c7b",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 350,
        "y": 200,
        "wires": []
    },
    {
        "id": "c0e1dfcb.0203e",
        "type": "inject",
        "z": "1b36fe01.5f7492",
        "name": "Example",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 100,
        "y": 340,
        "wires": [
            [
                "c1cbb5db.d64928"
            ]
        ]
    },
    {
        "id": "c1cbb5db.d64928",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "",
        "func": "msg.payload= {\n    \"geo_json\": {\n  \"type\": \"FeatureCollection\",\n  \"features\": [\n    {\n      \"type\": \"Feature\",\n      \"properties\": {},\n      \"geometry\": {\n        \"type\": \"Polygon\",\n        \"coordinates\": [\n          [\n            [\n              148.42529296875,\n              -37.42252593456306\n            ],\n            [\n              148.68896484375,\n              -37.42252593456306\n            ],\n            [\n              148.68896484375,\n              -37.256566086115214\n            ],\n            [\n              148.42529296875,\n              -37.256566086115214\n            ],\n            [\n              148.42529296875,\n              -37.42252593456306\n            ]\n          ]\n        ]\n      }\n    }\n  ]\n},\n    \"start\":\"2018-11-20\",\n    \"finish\": \"2018-11-22\",\n    \"hashkey\":\"test\",\n    \"models\": \"DFMC,AWRA-L-R\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 110,
        "y": 460,
        "wires": [
            [
                "52c890a9.8fb37"
            ]
        ]
    },
    {
        "id": "ff2df536.1c6138",
        "type": "http request",
        "z": "1b36fe01.5f7492",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 690,
        "y": 260,
        "wires": [
            [
                "81ae25a6.830848"
            ]
        ]
    },
    {
        "id": "52c890a9.8fb37",
        "type": "http request",
        "z": "1b36fe01.5f7492",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "http://api:8002/v1/submit_query.json",
        "tls": "",
        "x": 270,
        "y": 460,
        "wires": [
            [
                "9718be8b.5d1f2",
                "a3018e4b.8b367",
                "10b6f304.cc572d"
            ]
        ]
    },
    {
        "id": "9718be8b.5d1f2",
        "type": "split",
        "z": "1b36fe01.5f7492",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "uuid",
        "x": 410,
        "y": 460,
        "wires": [
            [
                "285a4e9a.8d9b22"
            ]
        ]
    },
    {
        "id": "bf927796.9af0b8",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 910,
        "y": 40,
        "wires": []
    },
    {
        "id": "285a4e9a.8d9b22",
        "type": "json",
        "z": "1b36fe01.5f7492",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 530,
        "y": 460,
        "wires": [
            [
                "77f22e8f.6ac9d"
            ]
        ]
    },
    {
        "id": "200eb4e9.cdd8dc",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 450,
        "y": 600,
        "wires": []
    },
    {
        "id": "77f22e8f.6ac9d",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "FLOWER TASK INFO",
        "func": "msg.url = \"http://flower:5555/api/task/info/\" + msg.payload.uuid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 740,
        "y": 460,
        "wires": [
            [
                "e531d660.ec45c8"
            ]
        ]
    },
    {
        "id": "81ae25a6.830848",
        "type": "json",
        "z": "1b36fe01.5f7492",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 750,
        "y": 180,
        "wires": [
            [
                "bf927796.9af0b8",
                "96ef7d6a.3c788"
            ]
        ]
    },
    {
        "id": "e531d660.ec45c8",
        "type": "delay",
        "z": "1b36fe01.5f7492",
        "name": "",
        "pauseType": "delay",
        "timeout": "1500",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 520,
        "y": 260,
        "wires": [
            [
                "ff2df536.1c6138"
            ]
        ]
    },
    {
        "id": "3839e9c0.c24836",
        "type": "http request",
        "z": "1b36fe01.5f7492",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 650,
        "y": 520,
        "wires": [
            [
                "4a261902.d35258"
            ]
        ]
    },
    {
        "id": "2115b45e.b33c8c",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "RESULT URL",
        "func": "msg.url = \"http://api:8002/v1/result.json\";\n\nif (msg.payload.id) {\n    msg.payload.uuid = msg.payload.id;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 520,
        "wires": [
            [
                "3839e9c0.c24836"
            ]
        ]
    },
    {
        "id": "ee9aeb35.9fcf38",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1670,
        "y": 120,
        "wires": []
    },
    {
        "id": "c97500af.26ae",
        "type": "redis-out",
        "z": "1b36fe01.5f7492",
        "server": "78ac3a84.edb3d4",
        "command": "publish",
        "name": "",
        "topic": "progress",
        "x": 1370,
        "y": 160,
        "wires": []
    },
    {
        "id": "297542cc.1375be",
        "type": "redis-in",
        "z": "1b36fe01.5f7492",
        "server": "78ac3a84.edb3d4",
        "command": "subscribe",
        "name": "",
        "topic": "progress",
        "timeout": 0,
        "x": 80,
        "y": 560,
        "wires": [
            [
                "feb67bdf.64e578"
            ]
        ]
    },
    {
        "id": "5b138450.7340cc",
        "type": "redis-out",
        "z": "1b36fe01.5f7492",
        "server": "78ac3a84.edb3d4",
        "command": "publish",
        "name": "",
        "topic": "progress",
        "x": 1370,
        "y": 20,
        "wires": []
    },
    {
        "id": "feb67bdf.64e578",
        "type": "switch",
        "z": "1b36fe01.5f7492",
        "name": "",
        "property": "payload.state",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "SUCCESS",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 560,
        "wires": [
            [
                "2115b45e.b33c8c"
            ],
            [
                "200eb4e9.cdd8dc"
            ]
        ]
    },
    {
        "id": "7e7b84a.d0f9e7c",
        "type": "redis-out",
        "z": "1b36fe01.5f7492",
        "server": "78ac3a84.edb3d4",
        "command": "publish",
        "name": "",
        "topic": "progress",
        "x": 1370,
        "y": 300,
        "wires": []
    },
    {
        "id": "359acd71.d88782",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "UUID",
        "func": "if (msg.payload.id) {\n    msg.payload.uuid = msg.payload.id;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1130,
        "y": 300,
        "wires": [
            [
                "7e7b84a.d0f9e7c"
            ]
        ]
    },
    {
        "id": "275ceee0.ec7862",
        "type": "http in",
        "z": "1b36fe01.5f7492",
        "name": "",
        "url": "/revoke",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 680,
        "wires": [
            [
                "71913b1c.9bb944"
            ]
        ]
    },
    {
        "id": "4cf7e31c.32e89c",
        "type": "http in",
        "z": "1b36fe01.5f7492",
        "name": "",
        "url": "/abort",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 720,
        "wires": [
            [
                "b8ed3f02.fad08",
                "f79bf8ae.c09868"
            ]
        ]
    },
    {
        "id": "ff7c6a82.83cff8",
        "type": "http request",
        "z": "1b36fe01.5f7492",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 850,
        "y": 680,
        "wires": [
            [
                "82aaf483.7260e8"
            ]
        ]
    },
    {
        "id": "41bd74b2.1e628c",
        "type": "http request",
        "z": "1b36fe01.5f7492",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 850,
        "y": 720,
        "wires": [
            [
                "ede9587e.1a11b8"
            ]
        ]
    },
    {
        "id": "71913b1c.9bb944",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "",
        "func": "msg.url = \"http://flower:5555/api/task/revoke/\" + msg.payload.uuid;\nmsg.payload = {\"terminate\": \"true\"};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 680,
        "wires": [
            [
                "ff7c6a82.83cff8"
            ]
        ]
    },
    {
        "id": "b8ed3f02.fad08",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "",
        "func": "msg.url = \"http://flower:5555/api/task/abort/\" + msg.payload.uuid;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 720,
        "wires": [
            [
                "41bd74b2.1e628c"
            ]
        ]
    },
    {
        "id": "82aaf483.7260e8",
        "type": "http response",
        "z": "1b36fe01.5f7492",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 680,
        "wires": []
    },
    {
        "id": "ede9587e.1a11b8",
        "type": "http response",
        "z": "1b36fe01.5f7492",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 720,
        "wires": []
    },
    {
        "id": "63799701.db4558",
        "type": "http in",
        "z": "1b36fe01.5f7492",
        "name": "",
        "url": "/result",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 760,
        "wires": [
            [
                "27fca062.4f41d",
                "f79bf8ae.c09868"
            ]
        ]
    },
    {
        "id": "27fca062.4f41d",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "",
        "func": "msg.url = \"http://api:8002/v1/result.json\";\n\nif (msg.payload.id) {\n    msg.payload.uuid = msg.payload.id;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 760,
        "wires": [
            [
                "1fddd7c5.06c168",
                "72a23d85.37f2a4"
            ]
        ]
    },
    {
        "id": "1fddd7c5.06c168",
        "type": "http request",
        "z": "1b36fe01.5f7492",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 850,
        "y": 760,
        "wires": [
            [
                "e457cad2.ec01e8",
                "483b5867.44b388"
            ]
        ]
    },
    {
        "id": "483b5867.44b388",
        "type": "http response",
        "z": "1b36fe01.5f7492",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 760,
        "wires": []
    },
    {
        "id": "394823b5.bf0e3c",
        "type": "http in",
        "z": "1b36fe01.5f7492",
        "name": "",
        "url": "/progress",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 800,
        "wires": [
            [
                "484d695c.2fdc48"
            ]
        ]
    },
    {
        "id": "a3018e4b.8b367",
        "type": "http response",
        "z": "1b36fe01.5f7492",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 520,
        "y": 380,
        "wires": []
    },
    {
        "id": "10b6f304.cc572d",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 550,
        "y": 340,
        "wires": []
    },
    {
        "id": "484d695c.2fdc48",
        "type": "function",
        "z": "1b36fe01.5f7492",
        "name": "",
        "func": "msg.url = \"http://flower:5555/api/task/info/\" + msg.payload.uuid;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 710,
        "y": 800,
        "wires": [
            [
                "451d03ca.9ba6ac"
            ]
        ]
    },
    {
        "id": "451d03ca.9ba6ac",
        "type": "http request",
        "z": "1b36fe01.5f7492",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 850,
        "y": 800,
        "wires": [
            [
                "2d38a002.4242d"
            ]
        ]
    },
    {
        "id": "2d38a002.4242d",
        "type": "http response",
        "z": "1b36fe01.5f7492",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 990,
        "y": 800,
        "wires": []
    },
    {
        "id": "bfd147b8.1885f8",
        "type": "inject",
        "z": "1b36fe01.5f7492",
        "name": "Example",
        "topic": "",
        "payload": "{\"uuid\":\"51bc10c2-9e25-4ca7-a6e8-1104f7ae44e3\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 180,
        "y": 860,
        "wires": [
            [
                "9b24ed9d.92dd3"
            ]
        ]
    },
    {
        "id": "d8837e37.f1b07",
        "type": "http in",
        "z": "1b36fe01.5f7492",
        "name": "",
        "url": "/submit_query.json",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 330,
        "y": 300,
        "wires": [
            [
                "52c890a9.8fb37"
            ]
        ]
    },
    {
        "id": "4a261902.d35258",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1050,
        "y": 520,
        "wires": []
    },
    {
        "id": "e457cad2.ec01e8",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1170,
        "y": 800,
        "wires": []
    },
    {
        "id": "9b24ed9d.92dd3",
        "type": "http request",
        "z": "1b36fe01.5f7492",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "http://pipeline:1880/result",
        "tls": "",
        "x": 430,
        "y": 860,
        "wires": [
            [
                "f79bf8ae.c09868"
            ]
        ]
    },
    {
        "id": "f79bf8ae.c09868",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 770,
        "y": 880,
        "wires": []
    },
    {
        "id": "72a23d85.37f2a4",
        "type": "debug",
        "z": "1b36fe01.5f7492",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1170,
        "y": 860,
        "wires": []
    },
    {
        "id": "c26ee8fb.1d3a68",
        "type": "inject",
        "z": "4fa05f41.e5ec6",
        "name": "TemporalAvailabilty of Layer",
        "topic": "",
        "payload": "{\"name\":\"DFMC_2018\",\"href\":\"test\"}",
        "payloadType": "json",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 160,
        "y": 40,
        "wires": [
            [
                "317518be.8ee1f8"
            ]
        ]
    },
    {
        "id": "25ee8e12.48fa72",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "func": "msg.url = \"http://geoserver:8080/geoserver/gwc/service/wmts?REQUEST=DescribeDomains&Version=1.0.0&TileMatrixSet=EPSG:4326&Layer=lfmc:\" + msg.payload.name;\nmsg.topic = msg.payload.name;\nmsg.href = msg.payload.href;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 130,
        "y": 400,
        "wires": [
            [
                "2829f5ba.8ce16a",
                "388a56d9.7ca54a"
            ]
        ]
    },
    {
        "id": "2829f5ba.8ce16a",
        "type": "http request",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "method": "GET",
        "ret": "txt",
        "url": "",
        "tls": "",
        "x": 310,
        "y": 400,
        "wires": [
            [
                "c8d21636.bd4058"
            ]
        ]
    },
    {
        "id": "c8d21636.bd4058",
        "type": "xml",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "property": "payload",
        "attr": "",
        "chr": "",
        "x": 470,
        "y": 400,
        "wires": [
            [
                "3f4bde6a.81b2f2",
                "921d50e0.9bee2"
            ]
        ]
    },
    {
        "id": "3f4bde6a.81b2f2",
        "type": "json",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 590,
        "y": 400,
        "wires": [
            [
                "f85876f6.4adf48"
            ]
        ]
    },
    {
        "id": "f85876f6.4adf48",
        "type": "json",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 710,
        "y": 400,
        "wires": [
            [
                "caeacce2.14a67",
                "e8eca46a.661cc8"
            ]
        ]
    },
    {
        "id": "d651ae7a.48668",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "func": "msg.payload = msg.payload.Domain[0].split(\",\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1250,
        "y": 440,
        "wires": [
            [
                "914c3acc.e829d8"
            ]
        ]
    },
    {
        "id": "9a633dec.fa4f3",
        "type": "http request",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "url": "",
        "tls": "",
        "x": 790,
        "y": 100,
        "wires": [
            [
                "18f4d42.5ba6f2c",
                "37bdb49e.a1972c"
            ]
        ]
    },
    {
        "id": "6c6a5d6d.87a334",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "func": "msg.url = msg.payload.href;\nmsg.layerGroup = msg.payload.name;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "9a633dec.fa4f3"
            ]
        ]
    },
    {
        "id": "18f4d42.5ba6f2c",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "func": "msg.payload = msg.payload.layerGroup.publishables.published;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 930,
        "y": 100,
        "wires": [
            [
                "4af5bb90.896074"
            ]
        ]
    },
    {
        "id": "1be7c58c.0f5dfa",
        "type": "split",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "published_layers",
        "x": 450,
        "y": 160,
        "wires": [
            [
                "fca8b286.afa01"
            ]
        ]
    },
    {
        "id": "ff8ac81c.d26648",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 220,
        "wires": []
    },
    {
        "id": "4af5bb90.896074",
        "type": "switch",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "array",
                "vt": "array"
            },
            {
                "t": "istype",
                "v": "object",
                "vt": "object"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "1be7c58c.0f5dfa"
            ],
            [
                "883bda8b.dbef98"
            ]
        ]
    },
    {
        "id": "a87ee443.206a58",
        "type": "inject",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "x": 140,
        "y": 100,
        "wires": [
            [
                "f468fa9f.5ee938"
            ]
        ]
    },
    {
        "id": "baab402d.b2574",
        "type": "debug",
        "z": "d00e8f9b.7ce64",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1190,
        "y": 200,
        "wires": []
    },
    {
        "id": "883bda8b.dbef98",
        "type": "split",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "layers",
        "x": 450,
        "y": 220,
        "wires": [
            [
                "ff8ac81c.d26648",
                "25ee8e12.48fa72"
            ]
        ]
    },
    {
        "id": "caeacce2.14a67",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 850,
        "y": 300,
        "wires": []
    },
    {
        "id": "1487e851.032a18",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "Workaround for Temporal Range",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1910,
        "y": 440,
        "wires": []
    },
    {
        "id": "388a56d9.7ca54a",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 330,
        "y": 340,
        "wires": []
    },
    {
        "id": "921d50e0.9bee2",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 610,
        "y": 300,
        "wires": []
    },
    {
        "id": "3c421fd.1ef25e",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "Found Times",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1010,
        "y": 420,
        "wires": []
    },
    {
        "id": "e8eca46a.661cc8",
        "type": "switch",
        "z": "4fa05f41.e5ec6",
        "name": "Has Dimensions?",
        "property": "payload.Domains.DimensionDomain",
        "propertyType": "msg",
        "rules": [
            {
                "t": "istype",
                "v": "array",
                "vt": "array"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 500,
        "wires": [
            [
                "ce261ca.d4876e"
            ],
            [
                "f0e6f768.4593c8"
            ]
        ]
    },
    {
        "id": "f0e6f768.4593c8",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "No Dimensions!",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 180,
        "y": 560,
        "wires": []
    },
    {
        "id": "edc40b69.60d7b8",
        "type": "split",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "domain",
        "x": 530,
        "y": 480,
        "wires": [
            [
                "99fd68b2.6e8c08"
            ]
        ]
    },
    {
        "id": "ce261ca.d4876e",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "Get Dimensions",
        "func": "msg.payload = msg.payload.Domains.DimensionDomain;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 380,
        "y": 480,
        "wires": [
            [
                "edc40b69.60d7b8"
            ]
        ]
    },
    {
        "id": "99fd68b2.6e8c08",
        "type": "switch",
        "z": "4fa05f41.e5ec6",
        "name": "Is Time Dimension?",
        "property": "payload[\"ows:Identifier\"]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "time",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 480,
        "wires": [
            [
                "3c421fd.1ef25e",
                "c320306e.eacd2"
            ],
            [
                "39422acc.be5e26"
            ]
        ]
    },
    {
        "id": "39422acc.be5e26",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "Not a Time Dimension",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 960,
        "y": 500,
        "wires": []
    },
    {
        "id": "914c3acc.e829d8",
        "type": "split",
        "z": "4fa05f41.e5ec6",
        "name": "Extract Timestamps",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "timestamp",
        "x": 1290,
        "y": 480,
        "wires": [
            [
                "74c7d6b3.8f40b8",
                "41d42005.6621f"
            ]
        ]
    },
    {
        "id": "74c7d6b3.8f40b8",
        "type": "switch",
        "z": "4fa05f41.e5ec6",
        "name": "Is valid UTC? or is it a Range?",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "regex",
                "v": "^(-?(?:[1-9][0-9]*)?[0-9]{4})-(1[0-2]|0[1-9])-(3[01]|0[1-9]|[12][0-9])T(2[0-3]|[01][0-9]):([0-5][0-9]):([0-5][0-9])(\\.[0-9]+)?(Z)?$",
                "vt": "str",
                "case": true
            },
            {
                "t": "cont",
                "v": "--",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1550,
        "y": 440,
        "wires": [
            [
                "64f0cbbf.093c24",
                "bb1b381c.2062c8"
            ],
            [
                "f870d07.ebc313",
                "1487e851.032a18"
            ],
            [
                "ade5f0e4.b50d7"
            ]
        ]
    },
    {
        "id": "64f0cbbf.093c24",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "Valid UTC",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1840,
        "y": 360,
        "wires": []
    },
    {
        "id": "c320306e.eacd2",
        "type": "switch",
        "z": "4fa05f41.e5ec6",
        "name": "Complete Year? (ie., 365 days)",
        "property": "payload.Size[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gte",
                "v": "365",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 460,
        "wires": [
            [
                "ffa79146.6c919",
                "3bdab4d4.fdbc4c"
            ],
            [
                "d651ae7a.48668"
            ]
        ]
    },
    {
        "id": "ffa79146.6c919",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 1270,
        "y": 360,
        "wires": []
    },
    {
        "id": "41d42005.6621f",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "Individual Timestamps",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1540,
        "y": 500,
        "wires": []
    },
    {
        "id": "f870d07.ebc313",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "Formatting Result",
        "func": "var ranged = msg.payload.split(\"--\");\n\ndaysBetween = function( date1, date2 ) {\n  //Get 1 day in milliseconds\n  var one_day=1000*60*60*24;\n\n  // Convert both dates to milliseconds\n  var date1_ms = date1.getTime();\n  var date2_ms = date2.getTime();\n\n  // Calculate the difference in milliseconds\n  var difference_ms = date2_ms - date1_ms;\n    \n  // Convert back to days and return\n  return Math.round(difference_ms/one_day); \n}\nvar d1 = new Date(ranged[0]);\nvar d2 = new Date(ranged[1]);\n\nvar size = daysBetween(d1, d2);\n\nmsg.payload = {\n    \"name\": ranged[0],\n    \"value\": size\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1870,
        "y": 500,
        "wires": [
            [
                "ac3170cb.4f532",
                "c4cc0774.ba4738"
            ]
        ]
    },
    {
        "id": "ac3170cb.4f532",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2090,
        "y": 500,
        "wires": []
    },
    {
        "id": "2eb26010.6f159",
        "type": "http in",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "url": "/temporal",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 100,
        "y": 100,
        "wires": [
            [
                "ba639340.1321c"
            ]
        ]
    },
    {
        "id": "ba639340.1321c",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "func": "msg.payload = {\n    \"name\": msg.payload.model,\n    \"href\":\"http://geoserver:8080/geoserver/rest/workspaces/lfmc/layergroups/\"+ msg.payload.model +\".json\"\n}\n\nmsg.layerGroup = msg.payload.model;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 490,
        "y": 100,
        "wires": [
            [
                "2307e167.9d195e",
                "6c6a5d6d.87a334"
            ]
        ]
    },
    {
        "id": "2307e167.9d195e",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 650,
        "y": 40,
        "wires": []
    },
    {
        "id": "72fd89ac.becb48",
        "type": "http response",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2550,
        "y": 420,
        "wires": []
    },
    {
        "id": "bb1b381c.2062c8",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "func": "var d = new Date(msg.payload);\n\n\n\nmsg.payload = {\n    \"name\": d.toLocaleDateString(\"en-AU\"),\n    \"value\": 1\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1830,
        "y": 400,
        "wires": [
            [
                "c4cc0774.ba4738"
            ]
        ]
    },
    {
        "id": "c4cc0774.ba4738",
        "type": "join",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "mode": "auto",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2030,
        "y": 340,
        "wires": [
            [
                "dd71e8aa.cb9158",
                "cbab180c.6ae888"
            ]
        ]
    },
    {
        "id": "aeaccc62.ea483",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2590,
        "y": 260,
        "wires": []
    },
    {
        "id": "317518be.8ee1f8",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "func": "msg.payload = {\n    \"model\": \"DFMC\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 350,
        "y": 40,
        "wires": [
            [
                "ba639340.1321c"
            ]
        ]
    },
    {
        "id": "572a1c6.116b9e4",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "func": "function formatDate(date) {\n    var d = new Date(date),\n        month = '' + (d.getMonth() + 1),\n        day = '' + d.getDate(),\n        year = d.getFullYear();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    return [year, month, day].join('-');\n}\n\nmsg.topic = msg.layerGroup;\n\nvar series = [];\n\nfor (var k of Object.keys(msg.payload)) {\n    for (var q of msg.payload[k]) {\n        var d = new Date(q.name);\n        series.push({\"name\": formatDate(d), \"value\": q.value});\n    }\n}\n\nmsg.payload = {\n    \"name\": msg.layerGroup,\n    \"series\": series\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 2350,
        "y": 340,
        "wires": [
            [
                "72fd89ac.becb48",
                "aeaccc62.ea483"
            ]
        ]
    },
    {
        "id": "dd71e8aa.cb9158",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2150,
        "y": 260,
        "wires": []
    },
    {
        "id": "3bdab4d4.fdbc4c",
        "type": "function",
        "z": "4fa05f41.e5ec6",
        "name": "Year to range",
        "func": "var all = msg.payload.Domain[0].split(\",\");\n\nmsg.payload = all[0] + \"--\" + all[all.length -1];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 1280,
        "y": 400,
        "wires": [
            [
                "74c7d6b3.8f40b8"
            ]
        ]
    },
    {
        "id": "cbab180c.6ae888",
        "type": "join",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2190,
        "y": 340,
        "wires": [
            [
                "572a1c6.116b9e4",
                "fddb0cc1.c0e62"
            ]
        ]
    },
    {
        "id": "fddb0cc1.c0e62",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 2410,
        "y": 260,
        "wires": []
    },
    {
        "id": "704476f8.ea21b8",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 750,
        "y": 160,
        "wires": []
    },
    {
        "id": "fca8b286.afa01",
        "type": "join",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 570,
        "y": 160,
        "wires": [
            [
                "704476f8.ea21b8",
                "883bda8b.dbef98"
            ]
        ]
    },
    {
        "id": "ade5f0e4.b50d7",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "INVALID DATE",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "x": 1840,
        "y": 600,
        "wires": []
    },
    {
        "id": "37bdb49e.a1972c",
        "type": "debug",
        "z": "4fa05f41.e5ec6",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 950,
        "y": 40,
        "wires": []
    },
    {
        "id": "e483b484.535278",
        "type": "function",
        "z": "ee6c3ad0.573538",
        "name": "s0",
        "func": "var year = new Date(msg.payload).getFullYear().toString();\nmsg.url = \"http://www.bom.gov.au/jsp/awra/thredds/fileServer/AWRACMS/values/day/s0_pct_\"+year+\".nc\";\nmsg.filename = \"/mnt/awra_dir/s0_pct_\"+year+\"_Actual_day.nc\"\n\nmsg.payload = \"curl --socks5-hostname tor:9050 \" + msg.url + \" -o \" + msg.filename + \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 40,
        "wires": [
            [
                "e372a7d9.2803e8"
            ]
        ]
    },
    {
        "id": "ecd19fd6.ec8b3",
        "type": "function",
        "z": "ee6c3ad0.573538",
        "name": "ss",
        "func": "var year = new Date(msg.payload).getFullYear().toString();\nmsg.url = \"http://www.bom.gov.au/jsp/awra/thredds/fileServer/AWRACMS/values/day/ss_pct_\"+year+\".nc\";\nmsg.filename = \"/mnt/awra_dir/ss_pct_\"+year+\"_Actual_day.nc\"\n\nmsg.payload = \"curl --socks5-hostname tor:9050 \" + msg.url + \" -o \" + msg.filename+ \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "9e8a028f.60ae9"
            ]
        ]
    },
    {
        "id": "25ae85a9.fe872a",
        "type": "function",
        "z": "ee6c3ad0.573538",
        "name": "sm",
        "func": "var year = new Date(msg.payload).getFullYear().toString();\nmsg.url = \"http://www.bom.gov.au/jsp/awra/thredds/fileServer/AWRACMS/values/day/sm_pct_\"+year+\".nc\";\nmsg.filename = \"/mnt/awra_dir/sm_pct_\"+year+\"_Actual_day.nc\"\n\nmsg.payload = \"curl --socks5-hostname tor:9050 \" + msg.url + \" -o \" + msg.filename+ \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 160,
        "wires": [
            [
                "b78d5801.f16568"
            ]
        ]
    },
    {
        "id": "ba80588.00359a8",
        "type": "function",
        "z": "3ead8668.6bfe7a",
        "name": "",
        "func": "var year = new Date(msg.payload).getFullYear().toString();\nmsg.url = \"http://dapds00.nci.org.au/thredds/fileServer/ub8/au/FMC/c6/mosaics/fmc_c6_\"+year+\".nc\";\nmsg.filename = \"/mnt/fuel/Yebra/c6/fmc_c6_\" + year + \".nc\";\n\nmsg.payload = \"curl --socks5-hostname tor:9050 \" + msg.url + \" -o \" + msg.filename+ \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "dfd8f329.25c1f"
            ]
        ]
    },
    {
        "id": "55e9bf9b.82ad",
        "type": "inject",
        "z": "3ead8668.6bfe7a",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 15 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 100,
        "wires": [
            [
                "ba80588.00359a8"
            ]
        ]
    },
    {
        "id": "dce43fee.730c4",
        "type": "debug",
        "z": "3ead8668.6bfe7a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 60,
        "wires": []
    },
    {
        "id": "dfd8f329.25c1f",
        "type": "exec",
        "z": "3ead8668.6bfe7a",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "dce43fee.730c4"
            ],
            [
                "1acbddb2.6bd012"
            ],
            [
                "f831b827.d19c38"
            ]
        ]
    },
    {
        "id": "1acbddb2.6bd012",
        "type": "debug",
        "z": "3ead8668.6bfe7a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 100,
        "wires": []
    },
    {
        "id": "f831b827.d19c38",
        "type": "debug",
        "z": "3ead8668.6bfe7a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "e75d5846.0fe018",
        "type": "function",
        "z": "1c278495.e2b9eb",
        "name": "",
        "func": "var year = new Date(msg.payload).getFullYear().toString();\nmsg.url = \"http://opendap.bom.gov.au:8080/thredds/fileServer/c35ee8d2a475e10ea06d0ad53b46ce2a/JASMIN_land_dryness/native/jasmin.vol.smc.\"+year+\".nc\"\nmsg.filename = \"/mnt/fuel/JASMIN/native/jasmin.vol.smc.\"+year+\".nc\";\n\nmsg.payload = \"curl --socks5-hostname tor:9050 \" + msg.url + \" -o \" + msg.filename+ \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 290,
        "y": 100,
        "wires": [
            [
                "b2f3ba93.eb87e8"
            ]
        ]
    },
    {
        "id": "1d5ec1ca.07bb1e",
        "type": "inject",
        "z": "1c278495.e2b9eb",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 15 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 150,
        "y": 100,
        "wires": [
            [
                "e75d5846.0fe018"
            ]
        ]
    },
    {
        "id": "b1a5b57.ee6ed48",
        "type": "debug",
        "z": "1c278495.e2b9eb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 60,
        "wires": []
    },
    {
        "id": "b2f3ba93.eb87e8",
        "type": "exec",
        "z": "1c278495.e2b9eb",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "b1a5b57.ee6ed48"
            ],
            [
                "1432d2e2.0f3bed"
            ],
            [
                "20be007a.0db8c"
            ]
        ]
    },
    {
        "id": "1432d2e2.0f3bed",
        "type": "debug",
        "z": "1c278495.e2b9eb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 100,
        "wires": []
    },
    {
        "id": "20be007a.0db8c",
        "type": "debug",
        "z": "1c278495.e2b9eb",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 590,
        "y": 140,
        "wires": []
    },
    {
        "id": "8841d5b7.1f9618",
        "type": "inject",
        "z": "ee6c3ad0.573538",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "00 15 * * *",
        "once": false,
        "onceDelay": 0.1,
        "x": 130,
        "y": 100,
        "wires": [
            [
                "e483b484.535278",
                "ecd19fd6.ec8b3",
                "25ae85a9.fe872a"
            ]
        ]
    },
    {
        "id": "3eb9de08.ee4472",
        "type": "debug",
        "z": "ee6c3ad0.573538",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 60,
        "wires": []
    },
    {
        "id": "b2f31d68.98ce",
        "type": "debug",
        "z": "ee6c3ad0.573538",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 100,
        "wires": []
    },
    {
        "id": "3e4a4d64.b39872",
        "type": "debug",
        "z": "ee6c3ad0.573538",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "x": 630,
        "y": 140,
        "wires": []
    },
    {
        "id": "e372a7d9.2803e8",
        "type": "exec",
        "z": "ee6c3ad0.573538",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 40,
        "wires": [
            [
                "3eb9de08.ee4472"
            ],
            [
                "b2f31d68.98ce"
            ],
            [
                "3e4a4d64.b39872"
            ]
        ]
    },
    {
        "id": "9e8a028f.60ae9",
        "type": "exec",
        "z": "ee6c3ad0.573538",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 100,
        "wires": [
            [
                "3eb9de08.ee4472"
            ],
            [
                "b2f31d68.98ce"
            ],
            [
                "3e4a4d64.b39872"
            ]
        ]
    },
    {
        "id": "b78d5801.f16568",
        "type": "exec",
        "z": "ee6c3ad0.573538",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "3eb9de08.ee4472"
            ],
            [
                "b2f31d68.98ce"
            ],
            [
                "3e4a4d64.b39872"
            ]
        ]
    },
    {
        "id": "65a0d588.f7debc",
        "type": "status",
        "z": "3ead8668.6bfe7a",
        "name": "",
        "scope": [
            "dfd8f329.25c1f"
        ],
        "x": 400,
        "y": 240,
        "wires": [
            [
                "b1b361a9.535ad"
            ]
        ]
    },
    {
        "id": "b1b361a9.535ad",
        "type": "debug",
        "z": "3ead8668.6bfe7a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 570,
        "y": 260,
        "wires": []
    },
    {
        "id": "9560857c.5f1b38",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "s0",
        "func": "var year = new Date(msg.payload).getFullYear().toString();\n\nmsg.payload = \"curl --list-only --socks5-hostname tor:9050 \" + msg.url + \" -o \" + msg.filename +\"index.txt\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 630,
        "y": 560,
        "wires": [
            [
                "379c16d7.78d08a",
                "1148d2a1.052d3d"
            ]
        ]
    },
    {
        "id": "1148d2a1.052d3d",
        "type": "exec",
        "z": "f51feb57.6cd738",
        "command": "",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 830,
        "y": 580,
        "wires": [
            [
                "f1aafe76.a625"
            ],
            [
                "4627d5d0.41823c"
            ],
            [
                "8932f05c.8e35a"
            ]
        ]
    },
    {
        "id": "5741afff.fe8a5",
        "type": "inject",
        "z": "f51feb57.6cd738",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "",
        "x": 320,
        "y": 560,
        "wires": [
            [
                "2ac88d9.1cec572"
            ]
        ]
    },
    {
        "id": "2ac88d9.1cec572",
        "type": "function",
        "z": "f51feb57.6cd738",
        "name": "",
        "func": "msg.url = \"ftp.bom.gov.au/register/bom023/rKCm6dbQ/adfd\";\n\nvar today = new Date();\nvar dd = today.getDate().toString();\nvar mm = today.getMonth()+1; //January is 0!\nvar yyyy = today.getFullYear().toString();\nvar h = today.getHours();\nvar m = today.getMinutes();\nvar meridian = '';\n\nif(h < 12 || (h==12 && m===0)) {\n    meridian ='AM';\n}\nif(h > 12) {\n    meridian = 'PM';\n}\n\nif(dd<10) {\n    dd = '0'+dd;\n}\n\nif(mm<10) {\n    mm = '0'+mm;\n} \n\nmsg.today = ''+ yyyy + mm + dd + meridian;\n\nmsg.directory = \"/mnt/data_dir/\" + msg.today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 470,
        "y": 560,
        "wires": [
            [
                "9560857c.5f1b38"
            ]
        ]
    },
    {
        "id": "379c16d7.78d08a",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 800,
        "y": 500,
        "wires": []
    },
    {
        "id": "f1aafe76.a625",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1030,
        "y": 540,
        "wires": []
    },
    {
        "id": "4627d5d0.41823c",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1030,
        "y": 580,
        "wires": []
    },
    {
        "id": "8932f05c.8e35a",
        "type": "debug",
        "z": "f51feb57.6cd738",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "x": 1030,
        "y": 620,
        "wires": []
    }
]